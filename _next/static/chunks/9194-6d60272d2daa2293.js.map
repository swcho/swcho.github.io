{"version":3,"file":"static/chunks/9194-6d60272d2daa2293.js","mappings":"qPACA,GAAe,wOCcf,MAAa,gBAAU,aAAI,OAAsB,KAA0B,UAAI,CAAC,GAAG,EAAI,2BAA8B,OAAE,CAAC,EAAO,mCAC7G,SAAG,SAAW,UAAW,EAAO,IAAM,CAAN,CAChC,SAAG,SAAW,UAAW,EAAO,IAAM,CAAN,CAChC,SAAG,SAAW,UAAW,EAAO,IAAM,CAAN,CAClD,CAAG,GACH,mCCLA,MAAa,gBAAU,aAAI,OAAsB,KAA0B,UAAI,CAAC,GAAG,EAAI,2BAA8B,OAAE,CAAC,EAAO,mCAC7G,SAAG,SAAW,UAAW,EAAO,IAAM,CAAN,CAChC,SAAG,SAAW,UAAW,EAAO,IAAM,CAAN,CAChC,SAAG,SAAW,UAAW,EAAO,IAAM,CAAN,CAClD,CAAG,GACH,mCCLA,MAAa,gBAAU,GAAI,iBAAsB,KAA0B,SAAG,CAAC,GAAG,EAAI,2BAA8B,OAAE,CAAC,EAAO,yBAAyC,GACvK,mCCQA,OACA,KAAQ,EACR,EADY,GACJ,EACR,EADY,GACJ,CACR,EACA,CAFY,CAEZ,CACA,UACA,WACA,EACA,EAAqB,OAAkB,UAAW,UAAa,KAC/D,MACA,gBAAqB,QAAO,kBAC5B,mBAA8B,OAAa,YAC3C,EACA,CAAC,EACD,EAAe,QAAO,SACtB,MAAgB,OAAQ,eACxB,CACA,OACA,QACA,OACA,OACA,YACA,QACA,aACA,SACA,WACA,UACA,UACA,WACA,aACA,KACA,CAAI,EACJ,EAAoB,OAAS,EAC7B,cACA,QACA,OAAW,GACX,YACA,QACA,aACA,SACA,WACA,aACA,OACA,cACA,CAAG,SACH,EAC2B,SAAG,CAAC,GAAG,EAAI,mCAAgD,EAE7D,SAAG,CACxB,GAAG,CACP,CACA,aACA,MACA,eACA,UACA,OACA,MAGA,CAAC,EACD,mBACA,UAAiB,EACjB,KADwB,QACxB,kDCtFI,EAAO,CAAI,sBAAJ,EAAI,sHCkBf,IAAM,EAAY,CAClB,qBADkB,GAElB,EACM,EAAe,OAAkB,KAAO,UAA5B,GAA4B,CAAa,KAC3D,OAAW,wBAAyB,OAAG,KACvC,CAAC,EACD,EAAoB,QAAO,SAC3B,MAAgB,OAAQ,eAAgB,EAAY,GACpD,CACA,YACA,QACA,aACA,SACA,WACA,cACA,OACA,cACA,UACA,MACA,aACA,KACA,CAAI,CAAE,MAAQ,eAAgB,EAAY,GAC1C,EAAoB,OAAS,EAC7B,QAF0C,WAG1C,QACA,OAAW,GACX,YACA,QACA,aACA,SACA,WACA,aACA,OACA,YAAgB,GAChB,oBACA,CAAG,EACH,MAAyB,SAAG,CACxB,GAAG,CACP,CACA,cACA,MACA,UACA,MAAc,qBAAiC,IAC/C,aACA,MAGA,CAAC,EACD,UAAsB,EACtB,uBAD6B,mBC/C7B,IAAM,EAAe,OAAkB,CACvC,WAAY,qDAAsD,IAClE,8BACA,wBACA,QACA,WACA,oBACA,cACA,CAAK,EACL,OACA,cACA,mBAA4B,QAAO,qBACnC,sBAA+B,QAAO,wBACtC,sCAAoD,QAAW,2BAAiC,QAAW,IAC3G,qCAAyD,QAAS,IAClE,wCACA,0BACA,mCACA,CACA,CACA,GAEA,EAA2B,QAAO,SAClC,MAAgB,OAAQ,8BACxB,CACA,YACA,QACA,aACA,SACA,WACA,OACA,UACA,WACA,SACA,eACA,aACA,KACA,CAAI,EACJ,EAAoB,OAAS,EAC7B,0BACA,QACA,OAAW,GACX,YACA,QACA,aACA,SACA,WACA,aACA,OACA,YAAgB,GAChB,2BACA,CAAG,EACH,MAAyB,SAAG,CAAC,GAAG,EAAI,0CAAuD,CAC3F,CAAC,EACD,UAA6B,EAC7B,uBADoC,0BCjDpC,OACA,IAAQ,mDAAsD,OAAG,IAAI,IAAK,CAC1E,KAAS,6CAAiD,CAC1D,QAAY,yBAA2B,CACvC,uCACA,EACM,EAAe,OAAkB,CACvC,SADkB,EACN,+DAA+D,IAC3E,8BACA,wBACA,QACA,WACA,oBACA,cACA,CAAK,EACL,OACA,MACA,qBACA,kBAA2B,QAAO,oBAClC,qBAA8B,QAAO,uBACrC,qCAAmD,QAAW,2BAAiC,QAAW,IAC1G,oCAAwD,QAAS,IACjE,uCACA,qCACA,yBACA,mCACA,+CACA,CACA,CACA,GAEA,EAAe,OAAkB,SACjC,MAAgB,OAAQ,kBACxB,CACA,QACA,OACA,YACA,QACA,WACA,WACA,cACA,eACA,YACA,UACA,SACA,UACA,cACA,WACA,aACA,SACA,WACA,kBACA,eACA,MACA,aACA,KACA,CAAI,EACJ,EAAoB,OAAS,EAC7B,cACA,QACA,OAAW,GACX,YACA,QACA,aACA,SACA,WACA,aACA,OACA,YAAgB,EAChB,CAAG,EACH,MACA,MACA,MAAyB,UAAI,CACzB,GAAc,CAClB,CACA,MACA,aAA6B,kBAAgD,EAC7E,WACA,UACA,cACA,KACA,CACA,cACA,UACA,QACA,sBACA,sBACA,CAAS,CACT,EACA,CACA,KACA,UACA,qBAAwD,SAAG,CAAC,GAAU,EAAI,gDAA+G,SAAG,CAAC,GAAG,EAAI,gCAA4C,QAAyB,4BAAkD,SAAG,CACpT,EACV,CACA,GAFgB,GAEhB,sBACA,wCACA,MAEA,CAAW,EAAG,EACU,UAAI,SAAW,wBACvC,GAAyC,SAAG,CAAC,GAAG,EAAI,sCAAmD,gBAAkB,YAAyB,EACxH,SAAG,CAAC,GAAG,EAAI,8BAA0B,EAAS,0BAAmC,EAC3G,GAA0C,SAAG,CAAC,GAAG,EAAI,sCAAmD,iBAAmB,YAA0B,EACrJ,CAAW,EAEX,EAEA,CAAC,EACD,UAAiB,EACjB,uBADwB,cAExB,QAAe,EACf,SAD0B,KAC1B,CAAsB,kBAAkB,0FCxIxC,GAAe,mBCiBf,OACA,iCACA,EACA,EAAuB,OAAkB,CACzC,QACA,MAAkB,OAAQ,uBAC1B,CACA,YACA,qBACA,mBACA,WACA,aACA,SACA,QACA,aACA,KACA,CAAM,EACN,EAAsB,OAAS,EAC/B,OACA,QACA,OAAa,GACb,YACA,QACA,aACA,SACA,WACA,YACA,CAAK,EACL,MAA2B,SAAG,CACxB,GAAG,CACT,CACA,aAA+B,aAAiB,EAChD,YACA,MACA,kCACA,MAGA,GAEA,UAAyB,EACzB,KADgC,QAChC,2JCtDA,sCAGA,WACA,WACA,aACA,aACA,OACA,IACA,IACA,CAAC,CACD,GACA,aACA,aACA,aACA,YACA,EACA,GACA,YACA,WACA,EAIA,SAAS,EAAQ,KACjB,mBADiB,MACjB,QACA,CACA,SAAS,EAAO,GAChB,uBAEA,SAAS,EAAY,GACrB,sBACA,CACA,EAHqB,OAGrB,KACA,qBACA,CACA,cACA,8BACA,CACA,gCACA,cACA,aAAwB,EAAO,WAC/B,CAqBA,SAAS,EAA6B,GACtC,sCACA,CACA,GAHsC,CAGtC,mBACA,mBACA,mBACA,mBAyBA,cACA,kDACA,CAUA,cACA,yBATA,CACA,MACA,QACA,SACA,OACA,GAIA,IACA,MACA,QACA,SACA,MACA,CACA,CACA,cACA,IACA,IACA,IACA,QACA,SACA,CAAI,EACJ,OACA,QACA,SACA,MACA,OACA,UACA,WACA,IACA,GACA,CACA,CCrIA,kBACA,IAYA,EAZA,CACA,YACA,WACA,CAAI,EACJ,EAAmB,EAAW,GAC9B,EDwCA,ICzC8B,IAE9B,EAAsB,EAAa,EADX,CAExB,EAAe,EAAO,GACtB,CAFmC,CAEnC,QACA,UAFsB,GAEtB,aACA,4BACA,gBAEA,UACA,UACA,GACA,IACA,gBAEA,KACA,cACA,GACA,IACA,gBAEA,KACA,aACA,GACA,cACA,GACA,EACA,KACA,YACA,GACA,cACA,GACA,EACA,KACA,SACA,GACA,MACA,MAEA,CACA,OAAU,EAAY,IACtB,YACA,YAFsB,EAEtB,MACA,KACA,WACA,mBAEA,CACA,QACA,CASA,qBACA,IACA,qBACA,sBACA,gBACA,WACA,CAAI,EACJ,oBACA,0CACA,2BACA,YACA,WACA,UACA,CAAG,EACH,CACA,IACA,IACA,CAAI,SACJ,IACA,KACA,IACA,YAAkB,WAA4B,KAC9C,IACA,OACA,KACA,CAAM,KACN,CACA,IACA,IACA,OACA,QACA,CAAM,SACN,IACA,IACA,mBACA,YACA,WACA,iBACA,QACA,WACA,UACA,YACA,UACA,CACA,CAAK,EACL,cACA,cACA,GACA,KACA,KACA,QACA,KAEA,EACA,WACA,IACA,qBACA,aACA,gBAEA,SACA,yCACA,YACA,WACA,UACA,CAAW,WAEX,CACA,IACA,IACA,CAAU,UAEV,KAEA,CACA,OACA,IACA,IACA,YACA,WACA,gBACA,CACA,EAUA,sBACA,KACA,aACA,OAEA,IACA,IACA,IACA,WACA,QACA,WACA,WACA,CAAI,EACJ,CACA,+BACA,0BACA,4BACA,iBACA,YACA,CAAI,EAAU,KACd,EAAwB,EAAgB,GAExC,MADA,KADwC,CAD1B,OAEd,yBACA,GACA,EAA6B,EAAgB,yBAC7C,oKACA,WACA,eACA,UACA,CAAG,GACH,kBACA,IACA,IACA,uBACA,0BACI,YACJ,uEACA,mGACA,IACA,GACA,EAAI,EAIwB,EAAgB,uHAC5C,WACA,OACA,eACA,UACA,CAAG,KACH,OACA,4BACA,wCACA,gCACA,oCAEA,CA+TA,gBACA,OACA,mBACA,sBACA,yBACA,oBAEA,CACA,cACA,OAAS,EAAK,gBACd,CA2DA,cACA,MAAe,GAAG,oBAClB,EAAe,GAAG,mBAGlB,OACA,IACA,IACA,MALe,GAAG,qBAKlB,EACA,UALkB,sBAKlB,CACA,CACA,CAwHA,8BAKA,sBACA,IACA,YACA,WACA,WACA,CAAI,EACJ,mDACA,EAAe,EAAO,GACtB,EAAoB,EAAY,GAChC,EAAgC,MAAX,EAAW,GAChC,MADgC,CAChC,KAFgC,EAEhC,EACA,YACA,EAAmB,EAAQ,KAG3B,CACA,WACA,OAL2B,GAK3B,EACA,gBACA,CAAI,oBACJ,WACA,YACA,kBACA,EAAI,CACJ,uBACA,yBACA,+BAKA,OAHA,uBACA,qBAEA,GACA,MACA,KACA,EAAI,CACJ,MACA,KACA,CACA,gBClwBA,cACA,MAAc,QAAkB,IAGhC,yBACA,0BACA,EAAoB,QAAa,IACjC,oBACA,qBACA,EAAyB,EAAK,QAA2B,EAAK,OAK9D,OAJA,IACA,IACA,KAEA,CACA,QACA,SACA,GACA,CACA,CAEA,cACA,OAAU,OAAS,sBACnB,CAEA,cACA,WACA,IAAO,QAAa,IACpB,OAAW,EAAY,GAEvB,OAFuB,CAEvB,wBACA,CACA,QACA,SACA,IACA,CAAI,KACJ,KAAe,EAAK,oBACpB,KAAe,EAAK,sBAUpB,OANA,uBACA,MAEA,uBACA,MAEA,CACA,IACA,GACA,CACA,CAEA,MAA+B,EAAY,GAC3C,OAD2C,EAC3C,KACA,MAAc,QAAS,UACvB,CAAO,OAAQ,qBAGf,CACA,8BACA,8BAJA,CAMA,CAWA,wBAVA,CAWA,aACA,OAEA,YACA,OAEA,gCACA,OACA,EAAc,EAAY,GAC1B,IACA,EACU,CAHgB,EAGhB,KAAS,KACnB,SAGA,QAGA,OA5BA,UADA,EA6BA,IA3BA,OA2BA,GAzBA,SAAmE,QAAS,CAyB5E,EAzB4E,GAG5E,GAsBA,KAA2H,EAAY,GACvI,OADuI,EACvI,UACA,kBACA,cACA,eACA,MACA,MAAgB,QAAS,IACzB,KAAsC,QAAS,IAAiB,QAAS,MACzE,IACA,EAAwB,QAAe,IACvC,mBACA,WACA,4BACA,EAAkB,QAAkB,IACpC,sDACA,mDACA,OACA,OACA,OACA,OACA,KACA,KACA,EAAmB,QAAS,IAC5B,EAAsB,QAAe,GACrC,CACA,CACA,OAAS,EAAgB,CACzB,QACA,KAFyB,EAEzB,EACA,IACA,GACA,CAAG,CACH,CAIA,gBACA,MAAqB,QAAa,sBAClC,EAGA,SAFA,EAAiC,QAAkB,WAGnD,CAEA,gBACA,gCAGA,OACA,EAHA,2BAIA,EAHA,iBAIA,CACA,CAkHA,oCAkBA,kBACA,MACA,kBACA,EAhEA,cACA,MAAc,QAAS,IACvB,EAAe,QAAkB,IACjC,mBACA,gBACA,iBACA,IACA,IACA,MACA,UACA,WACA,MAAgC,QAAQ,GACxC,uBACA,eACA,cAEA,CACA,WAIA,SACA,sBACA,SACA,sBACA,qFACA,yCACA,IA5BA,IA6BA,MAEA,EAAI,OA/BJ,IAkCA,OAEA,OACA,QACA,SACA,IACA,GACA,CACA,EAuBA,UACI,kBACJ,EAzFA,YACA,MAAe,QAAkB,IACjC,EAAiB,QAAa,IAC9B,uBACA,EAAgB,EAAG,yDACnB,EAAiB,EAAG,6DACpB,qBACA,eAIA,MAHwB,QAAlB,QAAkB,eACxB,IAAS,EAAG,gCAEZ,CACA,QACA,SACA,IACA,GACA,CACA,EAwE2B,QAAkB,UACzC,GAAS,QAAS,IACtB,WAvBA,KACA,0BACA,oBACA,sBACA,EAAgB,QAAa,SAAgC,EAAY,GACzE,OADyE,QACzE,KACA,qBAGA,OACA,QACA,SACA,EALA,MAMA,EALA,MAOA,EAQA,SACI,CACJ,WACA,GACA,UACA,UACA,cACA,gBAEA,CACA,OAAS,EAAgB,EACzB,CA4HA,WA7HyB,CA6HzB,EACA,MAA2B,WAAlB,QAAkB,aAG3B,gBACA,IAAO,QAAa,KAA+B,UAAlB,QAAkB,aACnD,YAEA,KACA,YAEA,qBASA,MAHM,QAAkB,SACxB,yBAEA,CACA,CAIA,gBACA,MAAc,QAAS,IACvB,GAAM,QAAU,IAChB,SAEA,IAAO,QAAa,KACpB,MAA0B,QAAa,IACvC,SAA+B,QAAqB,MACpD,GAAU,QAAS,WACnB,SAEA,EAAwB,QAAa,GACrC,CACA,QACA,CACA,aACA,QAAyB,QAAc,WACvC,gBAEA,GAAsB,QAAqB,YAAuD,QAAiB,IACnH,EAEA,GAAyB,QAAkB,MAC3C,CAEA,wBACA,8BACA,qBACA,sBACA,OACA,UAjGA,gBACA,MAAkC,QAAa,IAC/C,EAA0B,QAAkB,IAC5C,cACA,cACA,GACA,aACA,WACA,EACA,EAAkB,EAAY,GAO9B,OAP8B,GAO9B,GAIA,IAHmB,SAAX,QAAW,KAA6B,QAAiB,MACjE,GAAe,QAAa,KAE5B,GACA,iBACA,sBACA,qBACM,OAVN,UAcA,WAdA,WAiBA,eAAwH,EAAY,GAApI,OAAoI,MAGpI,CACA,EAHA,4BAIA,EAHA,0BAIA,cACA,eACA,CACA,EAyDA,4CACA,UACA,IACA,IACA,cACA,gBAEA,CACA,EAMA,GACA,sDAtVA,YACA,IACA,WACA,OACA,eACA,WACA,CAAI,EACJ,cACA,EAA0B,QAAkB,IAC5C,OAA8B,QAAU,aACxC,eACA,SAEA,OACA,aACA,WACA,EACA,EAAc,EAAY,GAC1B,EAAkB,EAAY,GADJ,EAEQ,QAAa,IAC/C,iBACQ,CAAW,SAAX,QAAW,KAA6B,QAAiB,MACjE,GAAe,QAAa,KAEpB,QAAa,MACrB,WACA,OACA,qBACA,mBACA,CAEA,eAAwH,EAAY,GAApI,OACA,OACA,kBACA,oBACA,mCACA,kCAEA,EAiTA,kBAAoB,MACpB,gBAvJA,YACA,IACA,UACA,WACA,eACA,WACA,CAAI,EAEJ,MADA,wBAAsE,QAAU,gBAxChF,KACA,eACA,KACA,SAEA,MAAe,QAAoB,oBAAkC,QAAS,KAAmB,SAAX,QAAW,KACjG,OACA,EAA2C,UAAlB,QAAkB,aAC3C,IAAqC,QAAa,MAGlD,KAAS,QAAS,MAAkB,QAAqB,MACzD,MAA0B,QAAkB,IAC5C,EAAoC,QAAiB,GACrD,0BACA,SAEA,6DAAuS,QAAiB,kBA5BxT,OACA,MAAqB,QAAa,UAClC,UAAkC,QAAS,KAAgB,QAAqB,OAGvE,kBAAkB,qBAC3B,EAsBwT,MAGxT,qBAGA,IAEA,EAAkB,QAAa,GAC/B,CAEA,OADA,WACA,CACA,EAWgF,wBAChF,GACA,OACA,mBACA,eAKA,OAJA,MAAkB,EAAG,aACrB,QAAoB,EAAG,iBACvB,SAAqB,EAAG,mBACxB,OAAmB,EAAG,eACtB,CACA,CAAG,WACH,OACA,qBACA,sBACA,SACA,QAEA,EAgIA,kBACA,kBACA,eAnTA,YACA,qCACA,EAkTA,cAjIA,YACA,IACA,QACA,SACA,CAAI,KACJ,OACA,QACA,QACA,CACA,EAyHA,WACA,SAAW,MACX,MAdA,YACA,MAAS,gBAAkB,cAc3B,EAEA,gBACA,oEAmGA,wBA0CA,CAzCA,aACA,OAEA,IACA,oBACA,oBACA,kDACA,sDACA,oBACA,CAAI,EACJ,OACA,aAA0E,QAAoB,UAAwB,QAAoB,QAC1I,cACA,kCACA,UACA,CAAK,EACL,iCACA,CAAG,EACH,oBAlHA,KACA,IACA,EADA,OAEA,EAAe,QAAkB,IACjC,aACA,MACA,gBACA,4BACA,MACA,CA2EA,OA1EA,gBACA,YACA,OAEA,YACA,MAEA,IACA,gCACA,CACA,OACA,MACA,QACA,SACA,CAAM,EAIN,GAHA,GACA,IAEA,OACA,OAEA,MAAqB,EAAK,KACH,EAAK,qBAI5B,GACA,WAFA,mBAFwB,EAAK,sBAE7B,OADsB,EAAK,QAI3B,UAAiB,EAAG,EAAI,EAAG,QAC3B,EACA,KACA,cACA,6BACA,UACA,MACA,WAEA,EAOA,QAJA,kBACA,UACA,CAAW,KAIX,CACA,uCAQA,IAEA,IACA,CAIA,IACA,8BACA,KAEA,qBACO,CACP,CAAM,SACN,+BACA,CACA,YACA,EACA,IACA,CACA,EA6BA,UACA,KACA,OACA,IACA,yBACA,SACA,qBAGA,eACA,wBACA,6BACA,KACA,0BACA,CAAS,GAET,GACA,CAAK,EACL,OACA,aAEA,cAGA,yBACA,GACA,SAEA,IACA,UACA,aACA,IAEA,IACA,0BACA,IACA,IACA,KACA,MACA,cACA,qCACA,oCACA,CAAK,EACL,aACA,4BACA,OACA,GACA,uBAEA,CACA,CAmBA,IAAM,ED0FN,YAIA,OAHA,CC3FY,GAAG,CD2Ff,KC3FuB,ED4FvB,MAEA,CACA,cACA,UACA,YACA,QACA,IACA,IACA,IACA,YACA,iBACA,CAAQ,EACR,sBAIA,kFACA,GAEA,CACA,QACA,QACA,MACA,KACA,WACA,CACA,CACA,CACA,CACA,EC3GM,EDkHN,YAIA,OAHA,GCnHc,EDmHd,GCnHqB,CDmHrB,GACA,OAEA,CACA,aACA,UACA,YACA,IACA,IACA,IACA,YACA,CAAQ,EACR,CACA,cACA,eACA,WACA,OACA,IACA,IACA,IACA,CAAc,EACd,OACA,IACA,GACA,CACA,CACA,CAAS,CACT,KACA,CAAQ,EAAU,KAClB,GACA,IACA,GACA,EACA,OALkB,CAKlB,OACA,EAAwB,EAAY,EAAO,IAC3C,EAAuB,CADY,CACG,GACtC,OACA,GAFsC,CAEtC,CAH2C,CAG3C,CACA,MACA,2BACA,2BACA,SACA,SACA,EDx0BA,ECw0B6B,EDx0B7B,ECw0B6B,KAC7B,CACA,EAFwB,CAExB,GACA,CAH6B,GAG7B,uBACA,2BACA,SACA,SACA,ED/0BA,EC+0B8B,ED/0B9B,EC+0B8B,KAC9B,CACA,GAFyB,CAEzB,QACA,KACA,MACA,KACA,CAAO,EACP,OACA,KACA,MACA,QACA,QACA,SACA,MACA,KACA,CACA,CACA,CACA,CACA,CACA,ECjLM,GDvTN,YAIA,KCmTU,EDtTV,CCsTa,IAAM,IDtTnB,GACA,OAEA,CACA,YACA,UACA,gBACA,IAqDA,IA+BA,EAnFA,IACA,YACA,iBACA,QACA,mBACA,WACA,WACA,CAAQ,EACR,CACA,cACA,eACA,qBACA,6BACA,mCACA,mBACA,KACA,CAAQ,EAAU,KAMlB,wCACA,SAEA,MAAmB,EAAO,GAC1B,EAA8B,EAAW,GACzC,EAA8B,EAAO,EADI,GACJ,EACrC,gBADqC,CACrC,kCACA,aAAsG,EAAoB,IAAsB,SD5XhJ,GACA,EC2X0H,ED3X1H,KC2XqK,ED1XrK,OAAU,EAA6B,KAAgC,EAA6B,GACpG,ECyXqK,IACrK,YACA,QACA,SD7XuC,CAsBvC,MAtBoG,GAsBpG,SACA,MAAoB,CCsWwC,CDtW5B,GAChC,EAfA,gBACA,UACA,UACA,aACA,kBACA,YACA,YACA,YACA,YACA,SACA,QACA,CACA,EAGyB,EAAO,kBAOhC,KAPgC,EAChC,IACA,oBACA,GACA,kBAAkC,GAA6B,GAG/D,CACA,EC6V4D,UAE5D,eACA,aDpW+D,ECqW/D,KACA,4CAIA,GAHA,GACA,aAEA,GACA,MDtZA,SAAS,CAAiB,MAC1B,YACA,OCoZuC,IDlZvC,EAAoB,EAAY,CAJN,EAK1B,EAPA,IAOA,IACA,OACA,0EAIA,OAHA,8BACA,SAEA,UC2YuC,OACvC,uBACA,CAOA,GANA,SACA,YACA,WACA,CAAO,EAGP,mBAEA,+CACA,OACA,MAEA,CADA,qBAA+F,EAAW,IAI1G,KAJ0G,EAI1G,IAAmC,EAAW,qCAE9C,OACA,MACA,QACA,WACA,CAAe,CACf,OACA,WACA,CACA,EAMA,gHAGA,MACA,UACA,cACA,CAEA,4BACA,MACA,MAA4C,EAAW,aACvD,cAGA,OACA,CACA,QACA,CAAiB,+GACjB,GACA,MAEA,KACA,CACA,uBACA,GAEA,CAEA,SACA,OACA,OACA,WACA,CACA,CAEA,CACA,QACA,CACA,CACA,ECmMM,GDqPN,YAIA,KCzPU,EDsPV,CCtPa,IAAM,IDsPnB,GACA,OAEA,CACA,YACA,UACA,gBACA,QAmBA,EACA,EAnBA,CACA,YACA,QACA,WACA,WACA,CAAQ,EACR,CACA,cAAwB,CACxB,KACA,CAAQ,EAAU,KAClB,eACA,EAAmB,EAFD,GAGlB,EAAwB,EAAY,GACpC,EAAiC,MAAX,EAAW,GACjC,CACA,KAFiC,CAEjC,EACA,GAJoC,IAIpC,EACA,CAAQ,WAGR,yBACA,IACA,wFAEA,IACA,4BAEA,uBACA,mBACA,EAAsC,EAAG,UACzC,EAAqC,EAAG,UACxC,0BACA,IACA,IAOA,GANA,+CACA,MAEA,+CACA,MAEA,OACA,MAAqB,EAAG,UACxB,EAAqB,EAAG,WACxB,EAAqB,EAAG,SACxB,EAAqB,EAAG,YACxB,EACA,wBAAiF,EAAG,iBAEpF,wBAAmF,EAAG,gBAEtF,CACA,SACA,KACA,iBACA,iBACA,CAAO,EACP,+CACA,0BACA,CACA,OACA,QACA,CACA,EAEA,EACA,CACA,CACA,EC1TM,GDxLN,YAIA,KCoLU,EDvLV,CCuLa,IDvLb,OACA,OAEA,CACA,YACA,UACA,YACA,IACA,QACA,CAAQ,EACR,CACA,6BACA,KACA,CAAU,EAAQ,KAClB,UACA,SAFkB,aAGlB,CAKA,QAJA,WACA,KACA,0BACA,CAAa,EACb,aACA,OACA,MACA,yBACA,oBACA,CACA,CACA,CACA,cACA,CAKA,QAJA,WACA,KACA,cACA,CAAa,EACb,YACA,OACA,MACA,iBACA,YACA,CACA,CACA,CACA,QAEA,QAEA,CACA,CACA,CACA,EC4IM,GDvgBN,KACA,aACA,GCqgBc,KDrgBd,EACA,YACA,IACA,IACA,IACA,YACA,QACA,WACA,WACA,iBACA,CAAM,EAEN,CACA,UACA,YACA,CAAM,EAAU,SAChB,WACA,IAFgB,EAEhB,GAEA,MAA0B,EAAgB,GAC1C,GACA,IACA,GACA,CAJ0C,CAK1C,EDrMA,ICqMiC,CAAhB,GACjB,EAAmB,EAAa,GAChC,MAFiC,EAEjC,mBACA,UAGA,iCACA,mDACA,sBACA,8DACA,UAGA,qDACA,iCAMA,mBACA,EAAuB,EAAG,EAjB1B,eAiB0B,IAC1B,EAAuB,EAAG,EAjB1B,mBAiB0B,IAK1B,WACA,aAZA,UAaA,EDxPA,ECqPA,EDrPA,ECwPwB,CAAL,CAAK,MAMxB,UAAiE,MAAZ,EAAY,+BATjE,EASiE,cACjE,MAVA,EAUA,EAVA,EAUA,MACA,OACA,WACA,MACA,MACA,mBACA,OACA,iBACA,CAAS,CACF,CACP,OACA,CACA,CACA,CAAC,ECmcK,GDjHN,YAIA,OAHA,GCgHe,EDhHf,OACA,OAEA,CACA,cACA,UACA,YACA,IACA,YACA,WACA,QACA,WACA,WACA,CAAQ,EAIR,CACA,YACA,IACA,IACA,CAAQ,EAAU,KAClB,sFACA,EA5CA,YACA,qCACA,KACA,OACA,YAAkB,WAAwB,KAC1C,YACA,sBACA,YAEA,sBAEA,GACA,CACA,gBAA4B,EAAgB,MAC5C,EA8BA,GACA,EAAuB,CAhCqB,CAgCL,MACvC,EAA4B,EAAgB,GAsD5C,CAvDuC,CAuDvC,SAtD4C,cAsD5C,EACA,WACA,sBAvDA,WAEA,wDAEA,4FAIA,gBACA,GAAyB,MAAX,EAAW,IACzB,KADyB,CACzB,KACA,gBACA,EAAiC,QAAP,EAAO,GACjC,QACA,WACA,CAHiC,CAGjC,gBACA,oBAGA,OACA,MACA,SACA,OACA,QACA,MAPA,IAQA,OAPA,IAQA,IACA,GACA,CACA,CACA,MAAoC,SAAP,EAAO,GACpC,EAA2B,GAAG,eADM,GACN,GAC9B,EAA0B,GAAG,oBAC7B,wCACA,WACA,uBAKA,OACA,MACA,SACA,KAPA,EAQA,MAPA,EAQA,MARA,EADA,EAUA,OAPA,IAQA,EAXA,EAYA,GACA,CACA,CACA,QACA,CAIA,CAAS,CACT,oBACA,UACA,CAAO,SACP,6IACA,CACA,OACA,OACA,CACA,EAEA,EACA,CACA,CACA,ECqBM,GDmJN,YAIA,OAHA,ICpJgB,CDoJhB,ECpJmB,EDoJnB,GACA,KCrJ+B,EDuJ/B,CACA,UACA,MACA,IACA,IACA,IACA,YACA,QACA,iBACA,CAAQ,EACR,CACA,WACA,cACA,eACA,CAAQ,EAAU,KAClB,GACA,IACA,GACA,EACA,EAAwB,EAAW,GALjB,EAMK,EAAe,EADH,CAEnC,OACA,GAFsC,CAEtC,GACA,EAAwB,EAAQ,KAChC,mBADgC,EAChC,CACA,WACA,WACA,EAAQ,CACR,WACA,YACA,MAEA,MACA,+BACA,0CACA,2CACA,IACA,IACU,KACV,KAEA,CACA,MACA,QACA,+BACA,QAA6C,EAAO,IACpD,mBADoD,QACpD,+DACA,2FACA,KACA,IACU,KACV,KAEA,CACA,OACA,MACA,KACA,CACA,CACA,CACA,EC7MM,GAAe,UAIrB,cACA,GACA,CANqB,QAMrB,EACA,MAEA,GACA,cACA,IACA,EACA,OAAS,EAAiB,KAC1B,KACA,GAF0B,MAE1B,CACA,CAAG,CACH,0ECnwBA,iCCFA,GACA,QACA,UACA,YACA,YACA,QACA,8HENA,GAAe,mBCqBf,OACA,OHdA,CGcU,CAAgB,KHd1B,EGgBA,EAAqB,OAAkB,CACvC,aAAQ,uDAA0D,KAClE,MACA,4CAAwF,OAAI,0BAC5F,6BAAyC,OAAG,IAAO,UACnD,qCAAuD,QAAS,IAChE,iCACA,CACA,IAEA,EAAgB,OAAkB,SAClC,MAAgB,OAAQ,gBACxB,CACA,aACA,YACA,QACA,SACA,WACA,OACA,QACA,SACA,WACA,SACA,SACA,WACA,OACA,QACA,oBACA,MACA,aACA,KACA,CAAI,EACJ,EAAoB,OAAS,EAC7B,eACA,QACA,OAAW,GACX,YACA,QACA,aACA,SACA,WACA,aACA,OACA,cACA,CAAG,EACH,MAAyB,SAAG,CAAC,GAAG,MAAI,4BAAmC,UAAe,oBAA6B,CACnH,CAAC,EACD,UAAkB,EAClB,KADyB,QACzB,yECxDA,cACA,oCAKA,OAJA,qCACA,yFACA,yDACA,iDACA,CACA,CAoBA,IAAM,EAAY,CAClB,gBADkB,CAClB,CACA,EACA,EAAe,QAAO,SACtB,aAAU,mCAAiD,OAAQ,UAAW,EAAY,GAC1F,MAAgC,QAD0D,KAC1D,CAAQ,KACxC,EAAkB,YAAM,aAcxB,CAbE,OAAmB,MACrB,MACA,mBA5BA,QAAyB,yBAAoC,EAC7D,WACA,mBACA,gCAEA,EAEA,MACA,kEACA,KACA,SAEA,WAGA,OAFA,yDACA,6BACA,CACA,CACA,WACA,EAUA,QAAsC,yBAAoC,EACtE,QAAS,cACb,kBACA,qCAEA,KACA,kBACA,oCAEA,GACG,KACH,cAGS,kBAAY,CAAiB,SAAG,CAAC,UAAQ,WAAI,EAAU,aAFhE,IAGA,CAAC,EACD,qCCrDA,MAAuB,QAAO,CAC9B,eAAK,qBAA0C,KAE/C,SADgB,QAAa,IAC7B,EAG2B,SAAG,CAAC,EAAM,KAAI,kBAA0B,EAFtC,SAAG,CAAC,UAAQ,WAAI,EAAU,GAKvD,4DCVA,SAAoD,cAAiB,CACrE,8DEfA,WACA,EEDA,0BACA,2BACA,CAAa,OAEb,UACA,CAAa,UAEb,YACA,CAAa,OAEb,EACA,CACA,4BACA,2BACA,CAAa,QAEb,UACA,CAAa,8BAEb,YACA,CAAa,8BAEb,EACA,CACA,OACA,6BACA,4BACA,+BACA,6BACA,ECfA,EAAsB,gBAAU,CAChC,EACA,WACA,YACA,cACA,cACA,gBACA,UACA,SACA,SACA,QACA,KACG,MACH,QAAY,GAAM,CAAE,OAAY,UAChC,EAG2B,SAAG,CAC9B,MACA,CACA,KACA,MACA,OACA,KACA,GDRA,UACA,WACA,CCMmC,SDNnC,EACA,cACA,cACA,gBACA,SACA,SACA,MACC,EACD,+BACA,GACA,QACA,SACA,0BACA,oBACA,QACA,EACA,aACA,WACA,CACA,KACA,cACA,QACA,8BACA,gCACA,0CACA,EAEA,YACA,CACA,KACA,cACA,OACA,+BACA,6BACA,0CACA,EAEA,UACA,CACA,KACA,gBACA,SACA,6BACA,8BACA,6CACA,EAEA,aACA,CACA,KACA,gBACA,MACA,gCACA,+BACA,uCACA,EAEA,EACA,ECpDmC,CACnC,WACA,YACA,cACA,cACA,gBACA,MACA,SACA,QACA,CAAW,CACX,CACA,GApBA,IAsBA,GAEA,4CCrDA,4CACA,2DAwBA,cACA,iCAIA,OAHA,UACA,WAEA,cACA,CACA,cACA,+BACA,sBAKA,OAFA,oEAEA,SA/BA,GAEA,GADA,2FAEA,SAEA,QACA,KACA,uCADA,CAIA,GAZA,CAYQ,QAAM,EAZd,KAYc,CAZd,QAaA,SAEA,eAEA,QACA,EAeA,EACA,CACA,cACA,WAEA,cADA,UACA,WACA,gBG7CI,EAAO,CAAI,mBCiBf,MAAuB,KDjBZ,ECiBY,CAAO,SAC9B,MAAgB,OAAQ,0BACxB,YAAU,oEAA8E,EACxF,EAAoB,OAAS,EAC7B,sBACA,OAAW,GACX,QACA,YACA,QACA,aACA,SACA,WACA,YACA,CAAG,EACH,MAAyB,SAAG,CAAC,GAAG,EAAI,yCAAyD,CAC7F,CAAC,ECjBD,YACA,WACA,YACA,gBACA,WACC,EACD,MHjBA,eACA,MAAc,YAAM,OACpB,MACA,0CACA,OACA,oCAAwD,GAExD,EADA,SADsE,CACnC,IAAQ,OAAmB,IAAS,OAC5C,EAAS,IACpC,KAEA,CACA,GACA,SAA2B,iBAAqB,CAOhD,EACA,EAAiB,iBAAW,CAC5B,IACA,GAGA,UAGA,gBAGA,GACA,gBACA,iBACA,IAIA,CAAS,EACT,aAEA,eAEA,CAAK,CACL,KAeA,MAbE,eAAS,MACX,MACA,MAEA,yCACA,UACA,0BACQ,QAAQ,CDvDhB,KACA,MD4CA,SC5CmB,CD4CnB,CC5C0C,ED4C1C,mBC5C0C,ED4C1C,UC3CA,oBACA,mBAGA,iCACA,kBACA,2CACA,kBAQA,GAPA,uDAKA,GAHA,SACA,sFAEA,aAEA,GACA,OAEA,mBACA,gCACA,IACA,SAEA,EC8BgB,YAEhB,EAEA,OADA,uCACA,6CACA,CAAG,MACH,CACA,EG3CmC,GACnC,EAAc,QAAY,YAC1B,CAAO,MAAS,IAGP,kBAAY,IAAa,MAAgB,EAFlD,CAGA,CACA,cACA,MAAyB,SAAG,CAAC,EAAc,CAAI,WAAJ,CAAI,yBAAgD,CAC/F,CDGA,UAAyB,EACzB,+BADgC,cCFhC,wCACA,oDACA,iBCjCA,IAAI,EAAO,CAAI,uBAAJ,KAAI,mCCuBf,MAAwB,QAAO,SAC/B,MAAgB,OAAQ,2BACxB,CACA,YACA,QACA,OACA,WACA,mBACA,UACA,aACA,SACA,KACA,CAAI,EACJ,EAAc,IACd,EZlCA,UACA,CYgC+B,GACK,GZjCpC,EACA,uBACC,EACD,MAA4B,YAAM,OAClC,OACA,oEACA,kBAAyC,iBAAqB,CAE9D,EAmBA,MAlBE,OAAY,MACd,SACA,MACA,eACA,sBAEA,EAOA,OANA,uCACA,EACA,iCACM,GACN,4BAEA,KACA,uBACA,yCACA,CACA,CAAG,QACH,CACA,EYKoC,CACpC,gBACA,gCACG,EACH,eACA,kCACA,qBACA,cACA,WACA,EAAI,GACJ,EAAoB,QAAY,sBAChC,WACA,KAEyB,SAAG,CAAC,EAAc,CAAI,WAAJ,KAAI,sCAA8E,SAAG,CAC5H,GAAU,CACd,CACA,iBACA,qBACA,iDACA,0CACA,0BACA,yHACA,YAAsD,SAAG,CAAC,EAAS,CAAI,MAAJ,CAAI,0CAAoF,UAAI,CACvJ,GAAG,CACX,CACA,KACA,KACA,UACA,iBVhEA,aUgEyC,CVhEI,UAAc,QAC3D,+BAGA,IACA,mBACA,KACA,gBAEA,EAPA,aAAgC,CAQhC,EUuDA,CV/DoC,IUgEpC,cACA,eACA,CAAa,CACb,CACA,uBACA,YACA,WACA,GAEA,4BACA,kDACA,2BACA,YACA,QACA,aACA,SACA,OACA,CACA,KACA,gBACA,WACA,YACA,gCAAyD,OAAG,UAC5D,sBAA2C,gBAAkB,KAC9C,CACf,0BACA,YACA,EACA,CACW,EACX,UACA,EAC4B,SAAG,CACjB,EACd,CACA,UAF2B,IAE3B,CACA,gBACA,gBACA,oBACA,qBACA,sBACA,0BACA,0BACA,8BACA,wBACA,QACA,aACA,QACA,CAAiB,IAGjB,EAEA,CAAS,CACT,EACA,CAAK,CACL,CAAC,EACD,UAA0B,EAC1B,wBADiC,qCE3GjC,IAAM,EAAY,CAClB,cACA,SAFkB,CAElB,QACA,EACA,GAAsB,QAAO,SAC7B,IAAU,uCAA0C,CAAE,MAAQ,CAC9D,gBACI,EACJ,GAEA,IAAO,OAAS,IAChB,MAJgB,MAKhB,oKAIA,MAAc,IACd,EAAoB,QAAY,aDjChC,YACA,MAAkB,SAAa,OAC/B,iBAAa,SAAa,EAG1B,oBAFA,OAKA,aACA,ECwB0D,MAC1D,eACA,kBACA,yBACA,kCACA,kBACA,EAAI,GACJ,MAAS,kBAAY,IATrB,IAUA,CACA,KACA,iBACA,UAAe,OAAE,CACjB,wBACA,YACA,mBAEA,MACA,kBACA,aACA,aACA,mBACA,CACA,EAAM,KACH,CACH,CAAC,EACD,iGE9BA,IAAM,GAAY,CAClB,gBADkB,EAElB,SACA,wBACA,iBAAqB,+BAAmC,CACxD,aAAiB,2BAAwC,CACzD,YACA,cACA,cACA,qBACA,uBACA,gBACA,iBACA,aACA,aACA,eACA,eACA,gBACA,8CACA,OvBzCA,CuByCU,CAAgB,OvBzC1B,CuB0CA,OAD0B,UAC1B,UACA,mBACA,EACM,GAAe,OAAkB,UAArB,EAA4B,WAAgB,KAC9D,UACA,qCAAqD,QAAS,IAC9D,mBAAwB,QAAS,GACjC,EACA,CAAC,EACD,eACA,MAAgB,OAAQ,WAAY,GAAY,GAChD,CACA,WACA,EAHgD,OAGhD,EACA,SACA,mBAGA,uBACA,SACA,kBACA,sBACA,uBACA,QACA,cACA,YACA,YACA,cACA,cACA,gBACA,WACA,aACA,SACA,sBACA,eACA,cACA,gBACA,qBACA,YACA,UACA,YACA,SACA,WACA,SACA,SACA,SACA,KACA,gBACA,mBACA,YACA,WACA,eACA,WACA,eACA,QACA,oBACA,eACA,gBACA,gBACA,cACA,oCACA,MACA,CAAI,EACJ,GAAoB,OAAS,EAC7B,OACA,QACA,OAAW,GACX,aACA,SACA,WACA,cACA,wBACA,QACA,YAAgB,GAChB,CAAG,EACH,gBAAU,IAAmB,OAAoB,aAAG,mBAA2B,EAC/E,QAAgD,cAAQ,WACxD,GAAsB,YAAM,IAC5B,GAAmB,YAAM,OACzB,QAAsC,cAAQ,OAC9C,QAA0C,cAAQ,OAClD,KAAU,IAAM,CAAE,OAAY,GAC9B,GAAc,QAAa,GAC3B,GAAc,OAAK,IACnB,GDvDA,YACA,MAAc,QAAa,GAC3B,MAA+B,QAAe,EAC9C,eACA,6BACA,cACA,oBACG,EACH,EAA2B,YAAM,IAWjC,EAAmB,SAAW,EAC9B,oBACA,8EACA,oBA1EA,OACA,eAdA,GACA,cACA,OAAa,kBAEb,OAAmB,MAOnB,OANA,kBACA,aAEA,iBACA,YAEA,CACA,EAEA,eACA,GAAuB,SAAM,WAAkB,SAAI,IAgDnD,OA/CA,mEACA,YAEA,SACA,OACM,SAAK,CACX,2BAA0D,QAAS,SAAU,cAAiB,CAAI,QAAS,SAAU,2BAIrH,QACA,OACA,yBAAqD,SAAI,GAAK,SAAI,UAGlE,UACA,OACA,2BAAuD,SAAM,GAAK,SAAM,YAGxE,OAAmB,SAAK,EAAG,yCAAyD,GACpF,8BACA,OACM,SAAI,EACV,+BAA6D,OAC7D,aAAgB,0CAAiD,EACjE,UACA,oCACA,UACA,sCACA,oBAA8C,0CAAiD,EAE/F,iBACA,YAA6B,EAAe,IAC5C,aAA8B,EAAgB,IAC/B,GAGf,oBACA,iBACA,SAAwB,kBAAsB,IACjC,CAEb,CACA,CAAO,GAGP,CACA,EAuBA,WACA,mCAA2D,OAAV,KAAU,CACxD,EAoCH,MAnCE,eAAS,MACX,sDAGA,EACA,MAAa,SAAU,CACvB,yBACA,wBACA,SAGA,CAAG,eACD,OAAY,MACd,kCACA,kCACG,mDACD,OAAY,MACd,gBACA,EAGA,aAFA,eAKA,WACA,CAAG,yBACD,OAAY,MACd,SAIA,OAHA,GACA,sDAEA,KACA,sBACA,CACA,CAAG,iBACH,CACA,WACA,sCACA,SACA,QAvDA,KACA,gBACA,KAEA,EAoDA,SAnDA,KACA,YACA,KAEA,CAgDA,CACA,ECZ4B,CAC5B,cACA,QACA,SAAc,StBzId,KACA,KsBwIiC,MtBxIjC,8CACA,sBACA,6BACA,uBAAuD,EAAgB,GAAG,EAAU,CACpF,CACA,QACA,EsBkIiC,MACjC,wCACA,YACA,cACA,mBACA,uBACA,SACA,gBACA,WACA,SACA,UACA,YACA,YACA,mBACA,sBACA,eACA,WACA,oCACA,cACA,CAAG,GxBzJH,ewB0JiB,CxBzJjB,MAAc,YAAM,OACpB,OACE,eAAS,MACX,UACA,WAAc,GAAS,MACvB,qBACA,oDAEA,CADA,gDACA,OACA,EAAQ,uCACR,GAEA,EAEA,OADA,6CACA,KACA,+CACA,CACA,CAAG,SAEH,EwBuIA,KACA,IACA,aACA,MAEA,CAAK,CACL,EACA,SAEA,OAAoB,iBAAW,CAC/B,IACA,MACA,gCACA,CAAK,CACL,iCAEA,GAAmB,iBAAW,CAC9B,IACA,MACA,+BACA,CAAK,CACL,gCAEA,GAAmB,iBAAW,MAC9B,gBACA,MACA,OACA,YACA,CAAG,kBACH,GAAoB,iBAAW,MAC/B,iBACA,KACA,CAAG,mBACH,MAAyB,UAAI,CACzB,EACJ,CACA,OACA,YAH0B,GAI1B,WACA,yBACA,aACA,YACA,gBACA,gBACA,6CACA,6CACA,iBACA,YACA,iBAA2B,8BAAyC,CACpE,QACA,YACA,YACA,cACA,cACA,gBACA,gCACA,YACA,eACA,cACA,SACA,SACA,SACA,gBACA,YACA,mBACA,qBACA,mBAA8B,GAAI,SAClC,qBAAgC,GAAI,WACpC,YACA,eACA,mBACA,aACA,SACA,WACA,WACA,eACA,aACA,kBACA,oBACA,mFACA,CAAO,CACP,UACA,EACA,IAAuC,SAAG,CAChC,GAAU,CACpB,CACA,kBACA,kBACA,0BACA,kCACA,YAA4D,SAAG,CAAC,EAAc,cAAI,WAAwC,SAAG,CAC/G,EACd,CACA,IAFqB,CAErB,CACA,iBACA,wBACA,oBACiB,GAEjB,CAAe,CACf,GAGA,EAEA,CACA,UAAiB,GACjB,UAD8B,CAC9B,CAAmB,EACnB,aADkC,CAClC,yBACA,4ECnDA,EAHA,6BAGuB,iBAAe,CADtC,aAgBA,MAZA,CACA,GAAK,eACL,CADU,CAUV,oBACA,SACA,cACA,MAAc,QAAY,MAI1B,CAAG,EAIH,OAHA,OACA,WACA,CAAG,EACM,aAAiB,YAC1B,0CAAwE,IAAa,IACrF,kBAEA,6CACA,CAAG,IACH,8DErPA,MAAgB,CAAK,mCCGrB,cACA,MDHA,UCG4B,CDF5B,UACA,oBAAyB,mBAAqB,IAC9C,ICCA,MAA0B,cAAQ,UAIlC,CAHE,OAAmB,MACrB,EAAY,QAAQ,CFTpB,cACA,SAAY,EAAO,EAAE,uCAAwC,KES7D,CAAG,KACH,oBACA,EAEA,2BACA,EAEA,CACA,0FCNA,YACA,aACA,SACA,QACA,YACC,EACD,MAAgB,QAAe,GAC/B,OACA,mBAAwB,OAAiB,EACzC,QACA,aACA,QACA,mBACA,CAAK,EACL,eAAoB,OAAa,EACjC,QACA,SACA,QACA,mBACA,CAAK,CACL,CACA,yEC7BA,cACA,MAAoB,gBAAU,IAQ9B,OAPA,gBACA,MAAqB,gBAAU,QAAiC,SAAG,IAAc,gBAA8B,GAG/G,OAFA,kBACA,2BAAwC,cAAsB,GAC9D,CACA,EACA,SAAqB,IAAQ,CAC7B,CACA,mBCfA,aACA,gCACA,CACA,qBACA,KACA,+BAKA,WACA,CACA,cACA,MACA,uEACA,CACA,cACA,MACA,6FAEA,oBACA,OAGA,2CACA,CACA,oBACA,OAGA,iDACA,CACA,oBACA,OAGA,yDACA,CACA,oBACA,uCAGA,uDACA,6IAgGA,kBACA,KACA,aACA,OAEA,YACA,OAEA,MAlBA,cACA,kBACA,KACA,4CAEA,WACA,EAEA,IACA,EASA,GACA,gDACA,OACA,MACA,WACA,8DACA,CACA,4BACA,sBA/GA,qCACA,cACA,IACA,WACA,YACA,YACA,UACA,CAAI,KACJ,8DACA,CACA,mCACA,cACA,kBACA,CACA,iCACA,cACA,kBACA,IACA,mBACA,CAAM,SACN,QACA,CACA,CAAG,CACH,CACA,+DACA,oEACA,wCACA,cACA,UACA,cAIA,+PACA,CACA,cACA,WACA,mBACA,QACA,SACM,QACN,MAEA,MACA,CACA,WACA,CACA,mBACA,yCACA,8CACA,CACA,2CACA,cACA,kBACA,CACA,cACA,+BACA,CACA,qBACA,KACA,CACA,wBACA,uBAGA,CACA,qBACA,oBAEA,CACA,cACA,iBACA,SAEA,MAEA,gBAEA,cAEA,cAEA,KACA,oBACA,CA4BA,cACA,oEACA,mDC3JA,oBACA,6BAGA,oBACA,SAAuB,UAAQ,kJCC/B,EAHA,6BAGuB,iBAAe,CADtC,aAKA,oBAUA,EACA,EACA,EAXA,SACA,SAEA,sBACA,SAEA,qDACA,SAKA,6BACA,qBAEA,GADA,eACA,kBACA,QAAuB,EAAU,CAAV,KACvB,iBACA,SAGA,QACA,CAGA,GADA,GADA,mBACA,UACA,sBACA,SAEA,QAAqB,EAAU,MAC/B,QAAa,6BACb,SAGA,QAAqB,EAAU,OAC/B,WACA,gCAGA,cACA,QAEA,CACA,QACA,CACA,iBACA,CAEA,oBACA,2BACA,EAEA,sCACA,mBACA,CAEA,gBACA,WACA,wBACA,CAEA,cACA,MAAc,QAAY,IAI1B,OAHA,OACA,WACA,CAAG,EACH,CACA,CAMA,cACA,YACA,OAEA,IACA,qBACA,sBACA,gBACA,WACA,UACA,YACA,WACA,CAAM,EAAI,CACV,eACA,uBACA,OACA,CAAI,EACJ,MAA0B,UAAc,EACxC,IACA,IACA,WACA,YACA,iBAAsB,CACtB,eACA,CAAG,EACH,MAAkD,UAAc,GAChE,SACA,KAEA,SAAsC,UAAc,OACpD,MAAoC,UAAc,OAClD,EAAuB,aAAiB,KACxC,gBACA,YACA,KAEA,CAAG,KACH,EAAsB,aAAiB,KACvC,gBACA,YACA,KAEA,CAAG,KACH,OACA,OACA,EAAuB,QAAY,OACnC,EAAsB,QAAY,OAClC,EAAkB,QAAY,IAC9B,UACA,OACA,OACA,OACA,EAAiB,aAAiB,MAClC,0BACA,OAEA,OACA,YACA,WACA,YACA,CACA,YACA,uBAEI,QAAe,iCACnB,OACA,KAKA,4BAEA,8BACA,YACQ,WAAkB,MAC1B,IACA,CAAS,EAET,CAAK,CACL,CAAG,cACH,OACA,iCACA,0BACA,OACA,KACA,eACA,EAAO,EAEP,CAAG,MACH,MAAuB,QAAY,KACnC,OACA,aACA,KACA,YACA,GACG,IACH,OAGA,GAFA,iBACA,iBACA,MACA,aACA,wBAEA,GACA,CACA,CAAG,cACH,MAAe,SAAa,OAC5B,YACA,WACA,eACA,aACA,EAAG,QACH,EAAmB,SAAa,OAChC,YACA,UACA,EAAG,QACH,EAAyB,SAAa,MACtC,OACA,WACA,OACA,KACA,EACA,eACA,SAEA,wBACA,2BACA,EACA,CACA,KACA,wCACA,wBACA,sBACA,CACA,EAEA,CACA,WACA,OACA,KACA,CACA,CAAG,2BACH,OAAS,SAAa,OACtB,KACA,SACA,OACA,WACA,gBACA,EAAG,aACH,CA+CA,eACA,GAAK,QAAQ,IACb,cACA,CAAC,CAOD,WACA,GAAK,QAAO,IACZ,cACA,CAAC,CAKD,WACA,GAAK,QAAY,IACjB,cACC,EAQD,WACA,GAAK,QAAM,IACX,cACA,CAAC,CAQD,WACA,GAAK,QAAM,IACX,cACA,CAAC,CAkBD,WACA,GAAK,QAAM,IACX,cACA,CAAC,CAOD,WACA,GAAK,QAAQ,IACb,cACA,CAAC,CAQD,WACA,GA1HA,IAIA,EACA,aACA,UACA,MACA,IACA,UACA,UACA,CAAQ,mCACR,GAVA,IAAa,qBAUb,EAVa,WAWb,gBACiB,QAAO,EACxB,kBACA,SACA,CAAW,QAEX,GAEA,EACe,QAAO,EACtB,UACA,SACA,CAAS,QAET,EACA,CACA,EACA,EA4FA,GACA,cACA,CAAC","sources":["webpack://_N_E/./node_modules/@mantine/core/esm/components/Loader/Loader.module.css.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Loader/loaders/Bars.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Loader/loaders/Dots.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Loader/loaders/Oval.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Loader/Loader.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Button/Button.module.css.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Button/ButtonGroup/ButtonGroup.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Button/ButtonGroupSection/ButtonGroupSection.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Button/Button.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.module.css.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.mjs","webpack://_N_E/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://_N_E/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://_N_E/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://_N_E/./node_modules/@mantine/hooks/esm/use-click-outside/use-click-outside.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/core/utils/get-default-z-index/get-default-z-index.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/utils/Floating/get-floating-position/get-floating-position.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Overlay/Overlay.module.css.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Overlay/Overlay.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Portal/Portal.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Portal/OptionalPortal.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Popover/Popover.context.mjs","webpack://_N_E/./node_modules/@mantine/hooks/esm/use-focus-return/use-focus-return.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/core/utils/noop/noop.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/core/utils/close-on-escape/close-on-escape.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/utils/Floating/FloatingArrow/get-arrow-position-styles.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/utils/Floating/FloatingArrow/FloatingArrow.mjs","webpack://_N_E/./node_modules/@mantine/hooks/esm/use-focus-trap/tabbable.mjs","webpack://_N_E/./node_modules/@mantine/hooks/esm/use-focus-trap/scope-tab.mjs","webpack://_N_E/./node_modules/@mantine/hooks/esm/use-focus-trap/use-focus-trap.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/VisuallyHidden/VisuallyHidden.module.css.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/VisuallyHidden/VisuallyHidden.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/FocusTrap/FocusTrap.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Popover/Popover.module.css.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Popover/PopoverDropdown/PopoverDropdown.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/core/utils/get-ref-prop/get-ref-prop.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Popover/PopoverTarget/PopoverTarget.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Popover/use-popover.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/components/Popover/Popover.mjs","webpack://_N_E/./node_modules/@floating-ui/react/dist/floating-ui.react.utils.mjs","webpack://_N_E/./node_modules/@mantine/hooks/esm/utils/random-id/random-id.mjs","webpack://_N_E/./node_modules/@mantine/hooks/esm/use-id/use-react-id.mjs","webpack://_N_E/./node_modules/@mantine/hooks/esm/use-id/use-id.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/core/factory/polymorphic-factory.mjs","webpack://_N_E/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://_N_E/./node_modules/@mantine/core/esm/core/utils/is-element/is-element.mjs","webpack://_N_E/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs"],"sourcesContent":["'use client';\nvar classes = {\"root\":\"m_5ae2e3c\",\"barsLoader\":\"m_7a2bd4cd\",\"bar\":\"m_870bb79\",\"bars-loader-animation\":\"m_5d2b3b9d\",\"dotsLoader\":\"m_4e3f22d7\",\"dot\":\"m_870c4af\",\"loader-dots-animation\":\"m_aac34a1\",\"ovalLoader\":\"m_b34414df\",\"oval-loader-animation\":\"m_f8e89c4b\"};\n\nexport { classes as default };\n//# sourceMappingURL=Loader.module.css.mjs.map\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport cx from 'clsx';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from '../Loader.module.css.mjs';\n\nconst Bars = forwardRef(({ className, ...others }, ref) => /* @__PURE__ */ jsxs(Box, { component: \"span\", className: cx(classes.barsLoader, className), ...others, ref, children: [\n  /* @__PURE__ */ jsx(\"span\", { className: classes.bar }),\n  /* @__PURE__ */ jsx(\"span\", { className: classes.bar }),\n  /* @__PURE__ */ jsx(\"span\", { className: classes.bar })\n] }));\nBars.displayName = \"@mantine/core/Bars\";\n\nexport { Bars };\n//# sourceMappingURL=Bars.mjs.map\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport cx from 'clsx';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from '../Loader.module.css.mjs';\n\nconst Dots = forwardRef(({ className, ...others }, ref) => /* @__PURE__ */ jsxs(Box, { component: \"span\", className: cx(classes.dotsLoader, className), ...others, ref, children: [\n  /* @__PURE__ */ jsx(\"span\", { className: classes.dot }),\n  /* @__PURE__ */ jsx(\"span\", { className: classes.dot }),\n  /* @__PURE__ */ jsx(\"span\", { className: classes.dot })\n] }));\nDots.displayName = \"@mantine/core/Dots\";\n\nexport { Dots };\n//# sourceMappingURL=Dots.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport cx from 'clsx';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from '../Loader.module.css.mjs';\n\nconst Oval = forwardRef(({ className, ...others }, ref) => /* @__PURE__ */ jsx(Box, { component: \"span\", className: cx(classes.ovalLoader, className), ...others, ref }));\nOval.displayName = \"@mantine/core/Oval\";\n\nexport { Oval };\n//# sourceMappingURL=Oval.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Bars } from './loaders/Bars.mjs';\nimport { Dots } from './loaders/Dots.mjs';\nimport { Oval } from './loaders/Oval.mjs';\nimport classes from './Loader.module.css.mjs';\n\nconst defaultLoaders = {\n  bars: Bars,\n  oval: Oval,\n  dots: Dots\n};\nconst defaultProps = {\n  loaders: defaultLoaders,\n  type: \"oval\"\n};\nconst varsResolver = createVarsResolver((theme, { size, color }) => ({\n  root: {\n    \"--loader-size\": getSize(size, \"loader-size\"),\n    \"--loader-color\": color ? getThemeColor(color, theme) : void 0\n  }\n}));\nconst Loader = factory((_props, ref) => {\n  const props = useProps(\"Loader\", defaultProps, _props);\n  const {\n    size,\n    color,\n    type,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    loaders,\n    variant,\n    children,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Loader\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  if (children) {\n    return /* @__PURE__ */ jsx(Box, { ...getStyles(\"root\"), ref, ...others, children });\n  }\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ...getStyles(\"root\"),\n      ref,\n      component: loaders[type],\n      variant,\n      size,\n      ...others\n    }\n  );\n});\nLoader.defaultLoaders = defaultLoaders;\nLoader.classes = classes;\nLoader.displayName = \"@mantine/core/Loader\";\n\nexport { Loader, defaultLoaders };\n//# sourceMappingURL=Loader.mjs.map\n","'use client';\nvar classes = {\"root\":\"m_77c9d27d\",\"inner\":\"m_80f1301b\",\"label\":\"m_811560b9\",\"section\":\"m_a74036a\",\"loader\":\"m_a25b86ee\",\"group\":\"m_80d6d844\",\"groupSection\":\"m_70be2a01\"};\n\nexport { classes as default };\n//# sourceMappingURL=Button.module.css.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { rem } from '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from '../Button.module.css.mjs';\n\nconst defaultProps = {\n  orientation: \"horizontal\"\n};\nconst varsResolver = createVarsResolver((_, { borderWidth }) => ({\n  group: { \"--button-border-width\": rem(borderWidth) }\n}));\nconst ButtonGroup = factory((_props, ref) => {\n  const props = useProps(\"ButtonGroup\", defaultProps, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    orientation,\n    vars,\n    borderWidth,\n    variant,\n    mod,\n    attributes,\n    ...others\n  } = useProps(\"ButtonGroup\", defaultProps, _props);\n  const getStyles = useStyles({\n    name: \"ButtonGroup\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n    rootSelector: \"group\"\n  });\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ...getStyles(\"group\"),\n      ref,\n      variant,\n      mod: [{ \"data-orientation\": orientation }, mod],\n      role: \"group\",\n      ...others\n    }\n  );\n});\nButtonGroup.classes = classes;\nButtonGroup.displayName = \"@mantine/core/ButtonGroup\";\n\nexport { ButtonGroup };\n//# sourceMappingURL=ButtonGroup.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius, getFontSize, getSize } from '../../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from '../Button.module.css.mjs';\n\nconst varsResolver = createVarsResolver(\n  (theme, { radius, color, gradient, variant, autoContrast, size }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || \"filled\",\n      autoContrast\n    });\n    return {\n      groupSection: {\n        \"--section-height\": getSize(size, \"section-height\"),\n        \"--section-padding-x\": getSize(size, \"section-padding-x\"),\n        \"--section-fz\": size?.includes(\"compact\") ? getFontSize(size.replace(\"compact-\", \"\")) : getFontSize(size),\n        \"--section-radius\": radius === void 0 ? void 0 : getRadius(radius),\n        \"--section-bg\": color || variant ? colors.background : void 0,\n        \"--section-color\": colors.color,\n        \"--section-bd\": color || variant ? colors.border : void 0\n      }\n    };\n  }\n);\nconst ButtonGroupSection = factory((_props, ref) => {\n  const props = useProps(\"ButtonGroupSection\", null, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    variant,\n    gradient,\n    radius,\n    autoContrast,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"ButtonGroupSection\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n    rootSelector: \"groupSection\"\n  });\n  return /* @__PURE__ */ jsx(Box, { ...getStyles(\"groupSection\"), ref, variant, ...others });\n});\nButtonGroupSection.classes = classes;\nButtonGroupSection.displayName = \"@mantine/core/ButtonGroupSection\";\n\nexport { ButtonGroupSection };\n//# sourceMappingURL=ButtonGroupSection.mjs.map\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius, getFontSize, getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport { Transition } from '../Transition/Transition.mjs';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.mjs';\nimport { ButtonGroup } from './ButtonGroup/ButtonGroup.mjs';\nimport { ButtonGroupSection } from './ButtonGroupSection/ButtonGroupSection.mjs';\nimport classes from './Button.module.css.mjs';\n\nconst loaderTransition = {\n  in: { opacity: 1, transform: `translate(-50%, calc(-50% + ${rem(1)}))` },\n  out: { opacity: 0, transform: \"translate(-50%, -200%)\" },\n  common: { transformOrigin: \"center\" },\n  transitionProperty: \"transform, opacity\"\n};\nconst varsResolver = createVarsResolver(\n  (theme, { radius, color, gradient, variant, size, justify, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || \"filled\",\n      autoContrast\n    });\n    return {\n      root: {\n        \"--button-justify\": justify,\n        \"--button-height\": getSize(size, \"button-height\"),\n        \"--button-padding-x\": getSize(size, \"button-padding-x\"),\n        \"--button-fz\": size?.includes(\"compact\") ? getFontSize(size.replace(\"compact-\", \"\")) : getFontSize(size),\n        \"--button-radius\": radius === void 0 ? void 0 : getRadius(radius),\n        \"--button-bg\": color || variant ? colors.background : void 0,\n        \"--button-hover\": color || variant ? colors.hover : void 0,\n        \"--button-color\": colors.color,\n        \"--button-bd\": color || variant ? colors.border : void 0,\n        \"--button-hover-color\": color || variant ? colors.hoverColor : void 0\n      }\n    };\n  }\n);\nconst Button = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Button\", null, _props);\n  const {\n    style,\n    vars,\n    className,\n    color,\n    disabled,\n    children,\n    leftSection,\n    rightSection,\n    fullWidth,\n    variant,\n    radius,\n    loading,\n    loaderProps,\n    gradient,\n    classNames,\n    styles,\n    unstyled,\n    \"data-disabled\": dataDisabled,\n    autoContrast,\n    mod,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Button\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const hasLeftSection = !!leftSection;\n  const hasRightSection = !!rightSection;\n  return /* @__PURE__ */ jsxs(\n    UnstyledButton,\n    {\n      ref,\n      ...getStyles(\"root\", { active: !disabled && !loading && !dataDisabled }),\n      unstyled,\n      variant,\n      disabled: disabled || loading,\n      mod: [\n        {\n          disabled: disabled || dataDisabled,\n          loading,\n          block: fullWidth,\n          \"with-left-section\": hasLeftSection,\n          \"with-right-section\": hasRightSection\n        },\n        mod\n      ],\n      ...others,\n      children: [\n        typeof loading === \"boolean\" && /* @__PURE__ */ jsx(Transition, { mounted: loading, transition: loaderTransition, duration: 150, children: (transitionStyles) => /* @__PURE__ */ jsx(Box, { component: \"span\", ...getStyles(\"loader\", { style: transitionStyles }), \"aria-hidden\": true, children: /* @__PURE__ */ jsx(\n          Loader,\n          {\n            color: \"var(--button-color)\",\n            size: \"calc(var(--button-height) / 1.8)\",\n            ...loaderProps\n          }\n        ) }) }),\n        /* @__PURE__ */ jsxs(\"span\", { ...getStyles(\"inner\"), children: [\n          leftSection && /* @__PURE__ */ jsx(Box, { component: \"span\", ...getStyles(\"section\"), mod: { position: \"left\" }, children: leftSection }),\n          /* @__PURE__ */ jsx(Box, { component: \"span\", mod: { loading }, ...getStyles(\"label\"), children }),\n          rightSection && /* @__PURE__ */ jsx(Box, { component: \"span\", ...getStyles(\"section\"), mod: { position: \"right\" }, children: rightSection })\n        ] })\n      ]\n    }\n  );\n});\nButton.classes = classes;\nButton.displayName = \"@mantine/core/Button\";\nButton.Group = ButtonGroup;\nButton.GroupSection = ButtonGroupSection;\n\nexport { Button };\n//# sourceMappingURL=Button.mjs.map\n","'use client';\nvar classes = {\"root\":\"m_87cf2631\"};\n\nexport { classes as default };\n//# sourceMappingURL=UnstyledButton.module.css.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './UnstyledButton.module.css.mjs';\n\nconst defaultProps = {\n  __staticSelector: \"UnstyledButton\"\n};\nconst UnstyledButton = polymorphicFactory(\n  (_props, ref) => {\n    const props = useProps(\"UnstyledButton\", defaultProps, _props);\n    const {\n      className,\n      component = \"button\",\n      __staticSelector,\n      unstyled,\n      classNames,\n      styles,\n      style,\n      attributes,\n      ...others\n    } = props;\n    const getStyles = useStyles({\n      name: __staticSelector,\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n      attributes\n    });\n    return /* @__PURE__ */ jsx(\n      Box,\n      {\n        ...getStyles(\"root\", { focusable: true }),\n        component,\n        ref,\n        type: component === \"button\" ? \"button\" : void 0,\n        ...others\n      }\n    );\n  }\n);\nUnstyledButton.classes = classes;\nUnstyledButton.displayName = \"@mantine/core/UnstyledButton\";\n\nexport { UnstyledButton };\n//# sourceMappingURL=UnstyledButton.mjs.map\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nconst yAxisSides = /*#__PURE__*/new Set(['top', 'bottom']);\nfunction getSideAxis(placement) {\n  return yAxisSides.has(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nconst lrPlacement = ['left', 'right'];\nconst rlPlacement = ['right', 'left'];\nconst tbPlacement = ['top', 'bottom'];\nconst btPlacement = ['bottom', 'top'];\nfunction getSideList(side, isStart, rtl) {\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rlPlacement : lrPlacement;\n      return isStart ? lrPlacement : rlPlacement;\n    case 'left':\n    case 'right':\n      return isStart ? tbPlacement : btPlacement;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          if (!ignoreCrossAxisOverflow ||\n          // We leave the current main axis only if every placement on that axis\n          // overflows the main axis.\n          overflowsData.every(d => getSideAxis(d.placement) === initialSideAxis ? d.overflows[0] > 0 : true)) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nconst originSides = /*#__PURE__*/new Set(['left', 'top']);\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = originSides.has(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = originSides.has(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle as getComputedStyle$1, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle$1(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll) {\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - getWindowScrollBarX(documentElement, htmlRect);\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Safety check: ensure the scrollbar space is reasonable in case this\n// calculation is affected by unusual styles.\n// Most scrollbars leave 15-18px of space.\nconst SCROLLBAR_MAX = 25;\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  const windowScrollbarX = getWindowScrollBarX(html);\n  // <html> `overflow: hidden` + `scrollbar-gutter: stable` reduces the\n  // visual width of the <html> but this is not considered in the size\n  // of `html.clientWidth`.\n  if (windowScrollbarX <= 0) {\n    const doc = html.ownerDocument;\n    const body = doc.body;\n    const bodyStyles = getComputedStyle(body);\n    const bodyMarginInline = doc.compatMode === 'CSS1Compat' ? parseFloat(bodyStyles.marginLeft) + parseFloat(bodyStyles.marginRight) || 0 : 0;\n    const clippingStableScrollbarWidth = Math.abs(html.clientWidth - body.clientWidth - bodyMarginInline);\n    if (clippingStableScrollbarWidth <= SCROLLBAR_MAX) {\n      width -= clippingStableScrollbarWidth;\n    }\n  } else if (windowScrollbarX <= SCROLLBAR_MAX) {\n    // If the <body> scrollbar is on the left, the width needs to be extended\n    // by the scrollbar amount so there isn't extra space on the right.\n    width += windowScrollbarX;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst absoluteOrFixed = /*#__PURE__*/new Set(['absolute', 'fixed']);\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && absoluteOrFixed.has(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle$1(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle$1(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","'use client';\nimport { useRef, useEffect } from 'react';\n\nconst DEFAULT_EVENTS = [\"mousedown\", \"touchstart\"];\nfunction useClickOutside(callback, events, nodes) {\n  const ref = useRef(null);\n  const eventsList = events || DEFAULT_EVENTS;\n  useEffect(() => {\n    const listener = (event) => {\n      const { target } = event ?? {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore = !document.body.contains(target) && target.tagName !== \"HTML\";\n        const shouldTrigger = nodes.every((node) => !!node && !event.composedPath().includes(node));\n        shouldTrigger && !shouldIgnore && callback();\n      } else if (ref.current && !ref.current.contains(target)) {\n        callback();\n      }\n    };\n    eventsList.forEach((fn) => document.addEventListener(fn, listener));\n    return () => {\n      eventsList.forEach((fn) => document.removeEventListener(fn, listener));\n    };\n  }, [ref, callback, nodes]);\n  return ref;\n}\n\nexport { useClickOutside };\n//# sourceMappingURL=use-click-outside.mjs.map\n","'use client';\nconst elevations = {\n  app: 100,\n  modal: 200,\n  popover: 300,\n  overlay: 400,\n  max: 9999\n};\nfunction getDefaultZIndex(level) {\n  return elevations[level];\n}\n\nexport { getDefaultZIndex };\n//# sourceMappingURL=get-default-z-index.mjs.map\n","'use client';\nfunction getFloatingPosition(dir, position) {\n  if (dir === \"rtl\" && (position.includes(\"right\") || position.includes(\"left\"))) {\n    const [side, placement] = position.split(\"-\");\n    const flippedPosition = side === \"right\" ? \"left\" : \"right\";\n    return placement === void 0 ? flippedPosition : `${flippedPosition}-${placement}`;\n  }\n  return position;\n}\n\nexport { getFloatingPosition };\n//# sourceMappingURL=get-floating-position.mjs.map\n","'use client';\nvar classes = {\"root\":\"m_9814e45f\"};\n\nexport { classes as default };\n//# sourceMappingURL=Overlay.module.css.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { rgba } from '../../core/MantineProvider/color-functions/rgba/rgba.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Overlay.module.css.mjs';\n\nconst defaultProps = {\n  zIndex: getDefaultZIndex(\"modal\")\n};\nconst varsResolver = createVarsResolver(\n  (_, { gradient, color, backgroundOpacity, blur, radius, zIndex }) => ({\n    root: {\n      \"--overlay-bg\": gradient || (color !== void 0 || backgroundOpacity !== void 0) && rgba(color || \"#000\", backgroundOpacity ?? 0.6) || void 0,\n      \"--overlay-filter\": blur ? `blur(${rem(blur)})` : void 0,\n      \"--overlay-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--overlay-z-index\": zIndex?.toString()\n    }\n  })\n);\nconst Overlay = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Overlay\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    fixed,\n    center,\n    children,\n    radius,\n    zIndex,\n    gradient,\n    blur,\n    color,\n    backgroundOpacity,\n    mod,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Overlay\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */ jsx(Box, { ref, ...getStyles(\"root\"), mod: [{ center, fixed }, mod], ...others, children });\n});\nOverlay.classes = classes;\nOverlay.displayName = \"@mantine/core/Overlay\";\n\nexport { Overlay };\n//# sourceMappingURL=Overlay.mjs.map\n","'use client';\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useState, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useIsomorphicEffect, assignRef } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\n\nfunction createPortalNode(props) {\n  const node = document.createElement(\"div\");\n  node.setAttribute(\"data-portal\", \"true\");\n  typeof props.className === \"string\" && node.classList.add(...props.className.split(\" \").filter(Boolean));\n  typeof props.style === \"object\" && Object.assign(node.style, props.style);\n  typeof props.id === \"string\" && node.setAttribute(\"id\", props.id);\n  return node;\n}\nfunction getTargetNode({ target, reuseTargetNode, ...others }) {\n  if (target) {\n    if (typeof target === \"string\") {\n      return document.querySelector(target) || createPortalNode(others);\n    }\n    return target;\n  }\n  if (reuseTargetNode) {\n    const existingNode = document.querySelector(\"[data-mantine-shared-portal-node]\");\n    if (existingNode) {\n      return existingNode;\n    }\n    const node = createPortalNode(others);\n    node.setAttribute(\"data-mantine-shared-portal-node\", \"true\");\n    document.body.appendChild(node);\n    return node;\n  }\n  return createPortalNode(others);\n}\nconst defaultProps = {\n  reuseTargetNode: true\n};\nconst Portal = factory((props, ref) => {\n  const { children, target, reuseTargetNode, ...others } = useProps(\"Portal\", defaultProps, props);\n  const [mounted, setMounted] = useState(false);\n  const nodeRef = useRef(null);\n  useIsomorphicEffect(() => {\n    setMounted(true);\n    nodeRef.current = getTargetNode({ target, reuseTargetNode, ...others });\n    assignRef(ref, nodeRef.current);\n    if (!target && !reuseTargetNode && nodeRef.current) {\n      document.body.appendChild(nodeRef.current);\n    }\n    return () => {\n      if (!target && !reuseTargetNode && nodeRef.current) {\n        document.body.removeChild(nodeRef.current);\n      }\n    };\n  }, [target]);\n  if (!mounted || !nodeRef.current) {\n    return null;\n  }\n  return createPortal(/* @__PURE__ */ jsx(Fragment, { children }), nodeRef.current);\n});\nPortal.displayName = \"@mantine/core/Portal\";\n\nexport { Portal };\n//# sourceMappingURL=Portal.mjs.map\n","'use client';\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport { useMantineEnv } from '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Portal } from './Portal.mjs';\n\nconst OptionalPortal = factory(\n  ({ withinPortal = true, children, ...others }, ref) => {\n    const env = useMantineEnv();\n    if (env === \"test\" || !withinPortal) {\n      return /* @__PURE__ */ jsx(Fragment, { children });\n    }\n    return /* @__PURE__ */ jsx(Portal, { ref, ...others, children });\n  }\n);\nOptionalPortal.displayName = \"@mantine/core/OptionalPortal\";\n\nexport { OptionalPortal };\n//# sourceMappingURL=OptionalPortal.mjs.map\n","'use client';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { createSafeContext } from '../../core/utils/create-safe-context/create-safe-context.mjs';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\n\nconst [PopoverContextProvider, usePopoverContext] = createSafeContext(\n  \"Popover component was not found in the tree\"\n);\n\nexport { PopoverContextProvider, usePopoverContext };\n//# sourceMappingURL=Popover.context.mjs.map\n","'use client';\nimport { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update.mjs';\n\nfunction useFocusReturn({\n  opened,\n  shouldReturnFocus = true\n}) {\n  const lastActiveElement = useRef(null);\n  const returnFocus = () => {\n    if (lastActiveElement.current && \"focus\" in lastActiveElement.current && typeof lastActiveElement.current.focus === \"function\") {\n      lastActiveElement.current?.focus({ preventScroll: true });\n    }\n  };\n  useDidUpdate(() => {\n    let timeout = -1;\n    const clearFocusTimeout = (event) => {\n      if (event.key === \"Tab\") {\n        window.clearTimeout(timeout);\n      }\n    };\n    document.addEventListener(\"keydown\", clearFocusTimeout);\n    if (opened) {\n      lastActiveElement.current = document.activeElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, 10);\n    }\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener(\"keydown\", clearFocusTimeout);\n    };\n  }, [opened, shouldReturnFocus]);\n  return returnFocus;\n}\n\nexport { useFocusReturn };\n//# sourceMappingURL=use-focus-return.mjs.map\n","'use client';\nconst noop = () => {\n};\n\nexport { noop };\n//# sourceMappingURL=noop.mjs.map\n","'use client';\nimport { noop } from '../noop/noop.mjs';\n\nfunction closeOnEscape(callback, options = { active: true }) {\n  if (typeof callback !== \"function\" || !options.active) {\n    return options.onKeyDown || noop;\n  }\n  return (event) => {\n    if (event.key === \"Escape\") {\n      callback(event);\n      options.onTrigger?.();\n    }\n  };\n}\n\nexport { closeOnEscape };\n//# sourceMappingURL=close-on-escape.mjs.map\n","'use client';\nfunction horizontalSide(placement, arrowY, arrowOffset, arrowPosition) {\n  if (placement === \"center\" || arrowPosition === \"center\") {\n    return { top: arrowY };\n  }\n  if (placement === \"end\") {\n    return { bottom: arrowOffset };\n  }\n  if (placement === \"start\") {\n    return { top: arrowOffset };\n  }\n  return {};\n}\nfunction verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir) {\n  if (placement === \"center\" || arrowPosition === \"center\") {\n    return { left: arrowX };\n  }\n  if (placement === \"end\") {\n    return { [dir === \"ltr\" ? \"right\" : \"left\"]: arrowOffset };\n  }\n  if (placement === \"start\") {\n    return { [dir === \"ltr\" ? \"left\" : \"right\"]: arrowOffset };\n  }\n  return {};\n}\nconst radiusByFloatingSide = {\n  bottom: \"borderTopLeftRadius\",\n  left: \"borderTopRightRadius\",\n  right: \"borderBottomLeftRadius\",\n  top: \"borderBottomRightRadius\"\n};\nfunction getArrowPositionStyles({\n  position,\n  arrowSize,\n  arrowOffset,\n  arrowRadius,\n  arrowPosition,\n  arrowX,\n  arrowY,\n  dir\n}) {\n  const [side, placement = \"center\"] = position.split(\"-\");\n  const baseStyles = {\n    width: arrowSize,\n    height: arrowSize,\n    transform: \"rotate(45deg)\",\n    position: \"absolute\",\n    [radiusByFloatingSide[side]]: arrowRadius\n  };\n  const arrowPlacement = -arrowSize / 2;\n  if (side === \"left\") {\n    return {\n      ...baseStyles,\n      ...horizontalSide(placement, arrowY, arrowOffset, arrowPosition),\n      right: arrowPlacement,\n      borderLeftColor: \"transparent\",\n      borderBottomColor: \"transparent\",\n      clipPath: \"polygon(100% 0, 0 0, 100% 100%)\"\n    };\n  }\n  if (side === \"right\") {\n    return {\n      ...baseStyles,\n      ...horizontalSide(placement, arrowY, arrowOffset, arrowPosition),\n      left: arrowPlacement,\n      borderRightColor: \"transparent\",\n      borderTopColor: \"transparent\",\n      clipPath: \"polygon(0 100%, 0 0, 100% 100%)\"\n    };\n  }\n  if (side === \"top\") {\n    return {\n      ...baseStyles,\n      ...verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir),\n      bottom: arrowPlacement,\n      borderTopColor: \"transparent\",\n      borderLeftColor: \"transparent\",\n      clipPath: \"polygon(0 100%, 100% 100%, 100% 0)\"\n    };\n  }\n  if (side === \"bottom\") {\n    return {\n      ...baseStyles,\n      ...verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir),\n      top: arrowPlacement,\n      borderBottomColor: \"transparent\",\n      borderRightColor: \"transparent\",\n      clipPath: \"polygon(0 100%, 0 0, 100% 0)\"\n    };\n  }\n  return {};\n}\n\nexport { getArrowPositionStyles };\n//# sourceMappingURL=get-arrow-position-styles.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { useDirection } from '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getArrowPositionStyles } from './get-arrow-position-styles.mjs';\n\nconst FloatingArrow = forwardRef(\n  ({\n    position,\n    arrowSize,\n    arrowOffset,\n    arrowRadius,\n    arrowPosition,\n    visible,\n    arrowX,\n    arrowY,\n    style,\n    ...others\n  }, ref) => {\n    const { dir } = useDirection();\n    if (!visible) {\n      return null;\n    }\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        ...others,\n        ref,\n        style: {\n          ...style,\n          ...getArrowPositionStyles({\n            position,\n            arrowSize,\n            arrowOffset,\n            arrowRadius,\n            arrowPosition,\n            dir,\n            arrowX,\n            arrowY\n          })\n        }\n      }\n    );\n  }\n);\nFloatingArrow.displayName = \"@mantine/core/FloatingArrow\";\n\nexport { FloatingArrow };\n//# sourceMappingURL=FloatingArrow.mjs.map\n","'use client';\nconst TABBABLE_NODES = /input|select|textarea|button|object/;\nconst FOCUS_SELECTOR = \"a, input, select, textarea, button, object, [tabindex]\";\nfunction hidden(element) {\n  if (process.env.NODE_ENV === \"test\") {\n    return false;\n  }\n  return element.style.display === \"none\";\n}\nfunction visible(element) {\n  const isHidden = element.getAttribute(\"aria-hidden\") || element.getAttribute(\"hidden\") || element.getAttribute(\"type\") === \"hidden\";\n  if (isHidden) {\n    return false;\n  }\n  let parentElement = element;\n  while (parentElement) {\n    if (parentElement === document.body || parentElement.nodeType === 11) {\n      break;\n    }\n    if (hidden(parentElement)) {\n      return false;\n    }\n    parentElement = parentElement.parentNode;\n  }\n  return true;\n}\nfunction getElementTabIndex(element) {\n  let tabIndex = element.getAttribute(\"tabindex\");\n  if (tabIndex === null) {\n    tabIndex = void 0;\n  }\n  return parseInt(tabIndex, 10);\n}\nfunction focusable(element) {\n  const nodeName = element.nodeName.toLowerCase();\n  const isTabIndexNotNaN = !Number.isNaN(getElementTabIndex(element));\n  const res = (\n    // @ts-expect-error function accepts any html element but if it is a button, it should not be disabled to trigger the condition\n    TABBABLE_NODES.test(nodeName) && !element.disabled || (element instanceof HTMLAnchorElement ? element.href || isTabIndexNotNaN : isTabIndexNotNaN)\n  );\n  return res && visible(element);\n}\nfunction tabbable(element) {\n  const tabIndex = getElementTabIndex(element);\n  const isTabIndexNaN = Number.isNaN(tabIndex);\n  return (isTabIndexNaN || tabIndex >= 0) && focusable(element);\n}\nfunction findTabbableDescendants(element) {\n  return Array.from(element.querySelectorAll(FOCUS_SELECTOR)).filter(tabbable);\n}\n\nexport { FOCUS_SELECTOR, findTabbableDescendants, focusable, tabbable };\n//# sourceMappingURL=tabbable.mjs.map\n","'use client';\nimport { findTabbableDescendants } from './tabbable.mjs';\n\nfunction scopeTab(node, event) {\n  const tabbable = findTabbableDescendants(node);\n  if (!tabbable.length) {\n    event.preventDefault();\n    return;\n  }\n  const finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];\n  const root = node.getRootNode();\n  let leavingFinalTabbable = finalTabbable === root.activeElement || node === root.activeElement;\n  const activeElement = root.activeElement;\n  const activeElementIsRadio = activeElement.tagName === \"INPUT\" && activeElement.getAttribute(\"type\") === \"radio\";\n  if (activeElementIsRadio) {\n    const activeRadioGroup = tabbable.filter(\n      (element) => element.getAttribute(\"type\") === \"radio\" && element.getAttribute(\"name\") === activeElement.getAttribute(\"name\")\n    );\n    leavingFinalTabbable = activeRadioGroup.includes(finalTabbable);\n  }\n  if (!leavingFinalTabbable) {\n    return;\n  }\n  event.preventDefault();\n  const target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];\n  if (target) {\n    target.focus();\n  }\n}\n\nexport { scopeTab };\n//# sourceMappingURL=scope-tab.mjs.map\n","'use client';\nimport { useRef, useCallback, useEffect } from 'react';\nimport { scopeTab } from './scope-tab.mjs';\nimport { FOCUS_SELECTOR, tabbable, focusable } from './tabbable.mjs';\n\nfunction useFocusTrap(active = true) {\n  const ref = useRef(null);\n  const focusNode = (node) => {\n    let focusElement = node.querySelector(\"[data-autofocus]\");\n    if (!focusElement) {\n      const children = Array.from(node.querySelectorAll(FOCUS_SELECTOR));\n      focusElement = children.find(tabbable) || children.find(focusable) || null;\n      if (!focusElement && focusable(node)) {\n        focusElement = node;\n      }\n    }\n    if (focusElement) {\n      focusElement.focus({ preventScroll: true });\n    } else if (process.env.NODE_ENV === \"development\") {\n      console.warn(\n        \"[@mantine/hooks/use-focus-trap] Failed to find focusable element within provided node\",\n        node\n      );\n    }\n  };\n  const setRef = useCallback(\n    (node) => {\n      if (!active) {\n        return;\n      }\n      if (node === null) {\n        return;\n      }\n      if (ref.current === node) {\n        return;\n      }\n      if (node) {\n        setTimeout(() => {\n          if (node.getRootNode()) {\n            focusNode(node);\n          } else if (process.env.NODE_ENV === \"development\") {\n            console.warn(\"[@mantine/hooks/use-focus-trap] Ref node is not part of the dom\", node);\n          }\n        });\n        ref.current = node;\n      } else {\n        ref.current = null;\n      }\n    },\n    [active]\n  );\n  useEffect(() => {\n    if (!active) {\n      return void 0;\n    }\n    ref.current && setTimeout(() => focusNode(ref.current));\n    const handleKeyDown = (event) => {\n      if (event.key === \"Tab\" && ref.current) {\n        scopeTab(ref.current, event);\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [active]);\n  return setRef;\n}\n\nexport { useFocusTrap };\n//# sourceMappingURL=use-focus-trap.mjs.map\n","'use client';\nvar classes = {\"root\":\"m_515a97f8\"};\n\nexport { classes as default };\n//# sourceMappingURL=VisuallyHidden.module.css.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './VisuallyHidden.module.css.mjs';\n\nconst VisuallyHidden = factory((_props, ref) => {\n  const props = useProps(\"VisuallyHidden\", null, _props);\n  const { classNames, className, style, styles, unstyled, vars, attributes, ...others } = props;\n  const getStyles = useStyles({\n    name: \"VisuallyHidden\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes\n  });\n  return /* @__PURE__ */ jsx(Box, { component: \"span\", ref, ...getStyles(\"root\"), ...others });\n});\nVisuallyHidden.classes = classes;\nVisuallyHidden.displayName = \"@mantine/core/VisuallyHidden\";\n\nexport { VisuallyHidden };\n//# sourceMappingURL=VisuallyHidden.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cloneElement } from 'react';\nimport { useFocusTrap, useMergedRef } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport { isElement } from '../../core/utils/is-element/is-element.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\n\nfunction FocusTrap({\n  children,\n  active = true,\n  refProp = \"ref\",\n  innerRef\n}) {\n  const focusTrapRef = useFocusTrap(active);\n  const ref = useMergedRef(focusTrapRef, innerRef);\n  if (!isElement(children)) {\n    return children;\n  }\n  return cloneElement(children, { [refProp]: ref });\n}\nfunction FocusTrapInitialFocus(props) {\n  return /* @__PURE__ */ jsx(VisuallyHidden, { tabIndex: -1, \"data-autofocus\": true, ...props });\n}\nFocusTrap.displayName = \"@mantine/core/FocusTrap\";\nFocusTrapInitialFocus.displayName = \"@mantine/core/FocusTrapInitialFocus\";\nFocusTrap.InitialFocus = FocusTrapInitialFocus;\n\nexport { FocusTrap, FocusTrapInitialFocus };\n//# sourceMappingURL=FocusTrap.mjs.map\n","'use client';\nvar classes = {\"dropdown\":\"m_38a85659\",\"arrow\":\"m_a31dc6c1\",\"overlay\":\"m_3d7bc908\"};\n\nexport { classes as default };\n//# sourceMappingURL=Popover.module.css.mjs.map\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useFocusReturn, useMergedRef } from '@mantine/hooks';\nimport { rem } from '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { closeOnEscape } from '../../../core/utils/close-on-escape/close-on-escape.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { FloatingArrow } from '../../../utils/Floating/FloatingArrow/FloatingArrow.mjs';\nimport { FocusTrap } from '../../FocusTrap/FocusTrap.mjs';\nimport '../../Portal/Portal.mjs';\nimport { OptionalPortal } from '../../Portal/OptionalPortal.mjs';\nimport { Transition } from '../../Transition/Transition.mjs';\nimport { usePopoverContext } from '../Popover.context.mjs';\nimport classes from '../Popover.module.css.mjs';\n\nconst PopoverDropdown = factory((_props, ref) => {\n  const props = useProps(\"PopoverDropdown\", null, _props);\n  const {\n    className,\n    style,\n    vars,\n    children,\n    onKeyDownCapture,\n    variant,\n    classNames,\n    styles,\n    ...others\n  } = props;\n  const ctx = usePopoverContext();\n  const returnFocus = useFocusReturn({\n    opened: ctx.opened,\n    shouldReturnFocus: ctx.returnFocus\n  });\n  const accessibleProps = ctx.withRoles ? {\n    \"aria-labelledby\": ctx.getTargetId(),\n    id: ctx.getDropdownId(),\n    role: \"dialog\",\n    tabIndex: -1\n  } : {};\n  const mergedRef = useMergedRef(ref, ctx.floating);\n  if (ctx.disabled) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(OptionalPortal, { ...ctx.portalProps, withinPortal: ctx.withinPortal, children: /* @__PURE__ */ jsx(\n    Transition,\n    {\n      mounted: ctx.opened,\n      ...ctx.transitionProps,\n      transition: ctx.transitionProps?.transition || \"fade\",\n      duration: ctx.transitionProps?.duration ?? 150,\n      keepMounted: ctx.keepMounted,\n      exitDuration: typeof ctx.transitionProps?.exitDuration === \"number\" ? ctx.transitionProps.exitDuration : ctx.transitionProps?.duration,\n      children: (transitionStyles) => /* @__PURE__ */ jsx(FocusTrap, { active: ctx.trapFocus && ctx.opened, innerRef: mergedRef, children: /* @__PURE__ */ jsxs(\n        Box,\n        {\n          ...accessibleProps,\n          ...others,\n          variant,\n          onKeyDownCapture: closeOnEscape(\n            () => {\n              ctx.onClose?.();\n              ctx.onDismiss?.();\n            },\n            {\n              active: ctx.closeOnEscape,\n              onTrigger: returnFocus,\n              onKeyDown: onKeyDownCapture\n            }\n          ),\n          \"data-position\": ctx.placement,\n          \"data-fixed\": ctx.floatingStrategy === \"fixed\" || void 0,\n          ...ctx.getStyles(\"dropdown\", {\n            className,\n            props,\n            classNames,\n            styles,\n            style: [\n              {\n                ...transitionStyles,\n                zIndex: ctx.zIndex,\n                top: ctx.y ?? 0,\n                left: ctx.x ?? 0,\n                width: ctx.width === \"target\" ? void 0 : rem(ctx.width),\n                ...ctx.referenceHidden ? { display: \"none\" } : null\n              },\n              ctx.resolvedStyles.dropdown,\n              styles?.dropdown,\n              style\n            ]\n          }),\n          children: [\n            children,\n            /* @__PURE__ */ jsx(\n              FloatingArrow,\n              {\n                ref: ctx.arrowRef,\n                arrowX: ctx.arrowX,\n                arrowY: ctx.arrowY,\n                visible: ctx.withArrow,\n                position: ctx.placement,\n                arrowSize: ctx.arrowSize,\n                arrowRadius: ctx.arrowRadius,\n                arrowOffset: ctx.arrowOffset,\n                arrowPosition: ctx.arrowPosition,\n                ...ctx.getStyles(\"arrow\", {\n                  props,\n                  classNames,\n                  styles\n                })\n              }\n            )\n          ]\n        }\n      ) })\n    }\n  ) });\n});\nPopoverDropdown.classes = classes;\nPopoverDropdown.displayName = \"@mantine/core/PopoverDropdown\";\n\nexport { PopoverDropdown };\n//# sourceMappingURL=PopoverDropdown.mjs.map\n","'use client';\nimport React from 'react';\n\nfunction getRefProp(element) {\n  const version = React.version;\n  if (typeof React.version !== \"string\") {\n    return element?.ref;\n  }\n  if (version.startsWith(\"18.\")) {\n    return element?.ref;\n  }\n  return element?.props?.ref;\n}\n\nexport { getRefProp };\n//# sourceMappingURL=get-ref-prop.mjs.map\n","'use client';\nimport { cloneElement } from 'react';\nimport cx from 'clsx';\nimport { useMergedRef } from '@mantine/hooks';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport 'react/jsx-runtime';\nimport { getRefProp } from '../../../core/utils/get-ref-prop/get-ref-prop.mjs';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { usePopoverContext } from '../Popover.context.mjs';\n\nconst defaultProps = {\n  refProp: \"ref\",\n  popupType: \"dialog\"\n};\nconst PopoverTarget = factory((props, ref) => {\n  const { children, refProp, popupType, ...others } = useProps(\n    \"PopoverTarget\",\n    defaultProps,\n    props\n  );\n  if (!isElement(children)) {\n    throw new Error(\n      \"Popover.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\"\n    );\n  }\n  const forwardedProps = others;\n  const ctx = usePopoverContext();\n  const targetRef = useMergedRef(ctx.reference, getRefProp(children), ref);\n  const accessibleProps = ctx.withRoles ? {\n    \"aria-haspopup\": popupType,\n    \"aria-expanded\": ctx.opened,\n    \"aria-controls\": ctx.getDropdownId(),\n    id: ctx.getTargetId()\n  } : {};\n  return cloneElement(children, {\n    ...forwardedProps,\n    ...accessibleProps,\n    ...ctx.targetProps,\n    className: cx(\n      ctx.targetProps.className,\n      forwardedProps.className,\n      children.props.className\n    ),\n    [refProp]: targetRef,\n    ...!ctx.controlled ? {\n      onClick: () => {\n        ctx.onToggle();\n        children.props.onClick?.();\n      }\n    } : null\n  });\n});\nPopoverTarget.displayName = \"@mantine/core/PopoverTarget\";\n\nexport { PopoverTarget };\n//# sourceMappingURL=PopoverTarget.mjs.map\n","'use client';\nimport { useRef, useEffect } from 'react';\nimport { useFloating, autoUpdate, offset, hide, shift, limitShift, flip, inline, arrow, size } from '@floating-ui/react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react/jsx-runtime';\nimport 'clsx';\nimport { useMantineEnv } from '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\n\nfunction getDefaultMiddlewares(middlewares) {\n  if (middlewares === void 0) {\n    return { shift: true, flip: true };\n  }\n  const result = { ...middlewares };\n  if (middlewares.shift === void 0) {\n    result.shift = true;\n  }\n  if (middlewares.flip === void 0) {\n    result.flip = true;\n  }\n  return result;\n}\nfunction getPopoverMiddlewares(options, getFloating, env) {\n  const middlewaresOptions = getDefaultMiddlewares(options.middlewares);\n  const middlewares = [offset(options.offset), hide()];\n  if (options.dropdownVisible && env !== \"test\" && options.preventPositionChangeWhenVisible) {\n    middlewaresOptions.flip = false;\n  }\n  if (middlewaresOptions.shift) {\n    middlewares.push(\n      shift(\n        typeof middlewaresOptions.shift === \"boolean\" ? { limiter: limitShift(), padding: 5 } : { limiter: limitShift(), padding: 5, ...middlewaresOptions.shift }\n      )\n    );\n  }\n  if (middlewaresOptions.flip) {\n    middlewares.push(\n      typeof middlewaresOptions.flip === \"boolean\" ? flip() : flip(middlewaresOptions.flip)\n    );\n  }\n  if (middlewaresOptions.inline) {\n    middlewares.push(\n      typeof middlewaresOptions.inline === \"boolean\" ? inline() : inline(middlewaresOptions.inline)\n    );\n  }\n  middlewares.push(arrow({ element: options.arrowRef, padding: options.arrowOffset }));\n  if (middlewaresOptions.size || options.width === \"target\") {\n    middlewares.push(\n      size({\n        ...typeof middlewaresOptions.size === \"boolean\" ? {} : middlewaresOptions.size,\n        apply({ rects, availableWidth, availableHeight, ...rest }) {\n          const floating = getFloating();\n          const styles = floating.refs.floating.current?.style ?? {};\n          if (middlewaresOptions.size) {\n            if (typeof middlewaresOptions.size === \"object\" && !!middlewaresOptions.size.apply) {\n              middlewaresOptions.size.apply({ rects, availableWidth, availableHeight, ...rest });\n            } else {\n              Object.assign(styles, {\n                maxWidth: `${availableWidth}px`,\n                maxHeight: `${availableHeight}px`\n              });\n            }\n          }\n          if (options.width === \"target\") {\n            Object.assign(styles, {\n              width: `${rects.reference.width}px`\n            });\n          }\n        }\n      })\n    );\n  }\n  return middlewares;\n}\nfunction usePopover(options) {\n  const env = useMantineEnv();\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange\n  });\n  const previouslyOpened = useRef(_opened);\n  const onClose = () => {\n    if (_opened && !options.disabled) {\n      setOpened(false);\n    }\n  };\n  const onToggle = () => {\n    if (!options.disabled) {\n      setOpened(!_opened);\n    }\n  };\n  const floating = useFloating({\n    strategy: options.strategy,\n    placement: options.preventPositionChangeWhenVisible ? options.positionRef.current : options.position,\n    middleware: getPopoverMiddlewares(options, () => floating, env),\n    whileElementsMounted: !options.keepMounted ? autoUpdate : void 0\n  });\n  useEffect(() => {\n    if (!floating.refs.reference.current || !floating.refs.floating.current) {\n      return;\n    }\n    if (_opened) {\n      return autoUpdate(\n        floating.refs.reference.current,\n        floating.refs.floating.current,\n        floating.update\n      );\n    }\n  }, [_opened, floating.update]);\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n    options.positionRef.current = floating.placement;\n  }, [floating.placement, options.preventPositionChangeWhenVisible]);\n  useDidUpdate(() => {\n    if (_opened !== previouslyOpened.current) {\n      if (!_opened) {\n        options.onClose?.();\n      } else {\n        options.onOpen?.();\n      }\n    }\n    previouslyOpened.current = _opened;\n  }, [_opened, options.onClose, options.onOpen]);\n  useDidUpdate(() => {\n    let timeout = -1;\n    if (_opened) {\n      timeout = window.setTimeout(() => options.setDropdownVisible(true), 4);\n    }\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, [_opened, options.position]);\n  return {\n    floating,\n    controlled: typeof options.opened === \"boolean\",\n    opened: _opened,\n    onClose,\n    onToggle\n  };\n}\n\nexport { usePopover };\n//# sourceMappingURL=use-popover.mjs.map\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useState, useRef, useCallback } from 'react';\nimport { useId, useClickOutside } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport { getShadow, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { useResolvedStylesApi } from '../../core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { useMantineEnv } from '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { useDirection } from '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../../utils/Floating/FloatingArrow/FloatingArrow.mjs';\nimport { getFloatingPosition } from '../../utils/Floating/get-floating-position/get-floating-position.mjs';\nimport { Overlay } from '../Overlay/Overlay.mjs';\nimport '../Portal/Portal.mjs';\nimport { OptionalPortal } from '../Portal/OptionalPortal.mjs';\nimport { Transition } from '../Transition/Transition.mjs';\nimport { PopoverContextProvider } from './Popover.context.mjs';\nimport { PopoverDropdown } from './PopoverDropdown/PopoverDropdown.mjs';\nimport { PopoverTarget } from './PopoverTarget/PopoverTarget.mjs';\nimport { usePopover } from './use-popover.mjs';\nimport classes from './Popover.module.css.mjs';\n\nconst defaultProps = {\n  position: \"bottom\",\n  offset: 8,\n  positionDependencies: [],\n  transitionProps: { transition: \"fade\", duration: 150 },\n  middlewares: { flip: true, shift: true, inline: false },\n  arrowSize: 7,\n  arrowOffset: 5,\n  arrowRadius: 0,\n  arrowPosition: \"side\",\n  closeOnClickOutside: true,\n  withinPortal: true,\n  closeOnEscape: true,\n  trapFocus: false,\n  withRoles: true,\n  returnFocus: false,\n  withOverlay: false,\n  hideDetached: true,\n  clickOutsideEvents: [\"mousedown\", \"touchstart\"],\n  zIndex: getDefaultZIndex(\"popover\"),\n  __staticSelector: \"Popover\",\n  width: \"max-content\"\n};\nconst varsResolver = createVarsResolver((_, { radius, shadow }) => ({\n  dropdown: {\n    \"--popover-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--popover-shadow\": getShadow(shadow)\n  }\n}));\nfunction Popover(_props) {\n  const props = useProps(\"Popover\", defaultProps, _props);\n  const {\n    children,\n    position,\n    offset,\n    onPositionChange,\n    // Scheduled for removal in 9.0\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    positionDependencies,\n    opened,\n    transitionProps,\n    onExitTransitionEnd,\n    onEnterTransitionEnd,\n    width,\n    middlewares,\n    withArrow,\n    arrowSize,\n    arrowOffset,\n    arrowRadius,\n    arrowPosition,\n    unstyled,\n    classNames,\n    styles,\n    closeOnClickOutside,\n    withinPortal,\n    portalProps,\n    closeOnEscape,\n    clickOutsideEvents,\n    trapFocus,\n    onClose,\n    onDismiss,\n    onOpen,\n    onChange,\n    zIndex,\n    radius,\n    shadow,\n    id,\n    defaultOpened,\n    __staticSelector,\n    withRoles,\n    disabled,\n    returnFocus,\n    variant,\n    keepMounted,\n    vars,\n    floatingStrategy,\n    withOverlay,\n    overlayProps,\n    hideDetached,\n    attributes,\n    preventPositionChangeWhenVisible,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: __staticSelector,\n    props,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    rootSelector: \"dropdown\",\n    vars,\n    varsResolver\n  });\n  const { resolvedStyles } = useResolvedStylesApi({ classNames, styles, props });\n  const [dropdownVisible, setDropdownVisible] = useState(opened ?? defaultOpened ?? false);\n  const positionRef = useRef(position);\n  const arrowRef = useRef(null);\n  const [targetNode, setTargetNode] = useState(null);\n  const [dropdownNode, setDropdownNode] = useState(null);\n  const { dir } = useDirection();\n  const env = useMantineEnv();\n  const uid = useId(id);\n  const popover = usePopover({\n    middlewares,\n    width,\n    position: getFloatingPosition(dir, position),\n    offset: typeof offset === \"number\" ? offset + (withArrow ? arrowSize / 2 : 0) : offset,\n    arrowRef,\n    arrowOffset,\n    onPositionChange,\n    positionDependencies,\n    opened,\n    defaultOpened,\n    onChange,\n    onOpen,\n    onClose,\n    onDismiss,\n    strategy: floatingStrategy,\n    dropdownVisible,\n    setDropdownVisible,\n    positionRef,\n    disabled,\n    preventPositionChangeWhenVisible,\n    keepMounted\n  });\n  useClickOutside(\n    () => {\n      if (closeOnClickOutside) {\n        popover.onClose();\n        onDismiss?.();\n      }\n    },\n    clickOutsideEvents,\n    [targetNode, dropdownNode]\n  );\n  const reference = useCallback(\n    (node) => {\n      setTargetNode(node);\n      popover.floating.refs.setReference(node);\n    },\n    [popover.floating.refs.setReference]\n  );\n  const floating = useCallback(\n    (node) => {\n      setDropdownNode(node);\n      popover.floating.refs.setFloating(node);\n    },\n    [popover.floating.refs.setFloating]\n  );\n  const onExited = useCallback(() => {\n    transitionProps?.onExited?.();\n    onExitTransitionEnd?.();\n    setDropdownVisible(false);\n    positionRef.current = position;\n  }, [transitionProps?.onExited, onExitTransitionEnd]);\n  const onEntered = useCallback(() => {\n    transitionProps?.onEntered?.();\n    onEnterTransitionEnd?.();\n  }, [transitionProps?.onEntered, onEnterTransitionEnd]);\n  return /* @__PURE__ */ jsxs(\n    PopoverContextProvider,\n    {\n      value: {\n        returnFocus,\n        disabled,\n        controlled: popover.controlled,\n        reference,\n        floating,\n        x: popover.floating.x,\n        y: popover.floating.y,\n        arrowX: popover.floating?.middlewareData?.arrow?.x,\n        arrowY: popover.floating?.middlewareData?.arrow?.y,\n        opened: popover.opened,\n        arrowRef,\n        transitionProps: { ...transitionProps, onExited, onEntered },\n        width,\n        withArrow,\n        arrowSize,\n        arrowOffset,\n        arrowRadius,\n        arrowPosition,\n        placement: popover.floating.placement,\n        trapFocus,\n        withinPortal,\n        portalProps,\n        zIndex,\n        radius,\n        shadow,\n        closeOnEscape,\n        onDismiss,\n        onClose: popover.onClose,\n        onToggle: popover.onToggle,\n        getTargetId: () => `${uid}-target`,\n        getDropdownId: () => `${uid}-dropdown`,\n        withRoles,\n        targetProps: others,\n        __staticSelector,\n        classNames,\n        styles,\n        unstyled,\n        variant,\n        keepMounted,\n        getStyles,\n        resolvedStyles,\n        floatingStrategy,\n        referenceHidden: hideDetached && env !== \"test\" ? popover.floating.middlewareData.hide?.referenceHidden : false\n      },\n      children: [\n        children,\n        withOverlay && /* @__PURE__ */ jsx(\n          Transition,\n          {\n            transition: \"fade\",\n            mounted: popover.opened,\n            duration: transitionProps?.duration || 250,\n            exitDuration: transitionProps?.exitDuration || 250,\n            children: (transitionStyles) => /* @__PURE__ */ jsx(OptionalPortal, { withinPortal, children: /* @__PURE__ */ jsx(\n              Overlay,\n              {\n                ...overlayProps,\n                ...getStyles(\"overlay\", {\n                  className: overlayProps?.className,\n                  style: [transitionStyles, overlayProps?.style]\n                })\n              }\n            ) })\n          }\n        )\n      ]\n    }\n  );\n}\nPopover.Target = PopoverTarget;\nPopover.Dropdown = PopoverDropdown;\nPopover.displayName = \"@mantine/core/Popover\";\nPopover.extend = (input) => input;\n\nexport { Popover };\n//# sourceMappingURL=Popover.mjs.map\n","import { isShadowRoot, isHTMLElement } from '@floating-ui/utils/dom';\nimport * as React from 'react';\nimport { useLayoutEffect } from 'react';\nimport { floor } from '@floating-ui/utils';\nimport { tabbable } from 'tabbable';\n\n// Avoid Chrome DevTools blue warning.\nfunction getPlatform() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform;\n}\nfunction getUserAgent() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(_ref => {\n      let {\n        brand,\n        version\n      } = _ref;\n      return brand + \"/\" + version;\n    }).join(' ');\n  }\n  return navigator.userAgent;\n}\nfunction isSafari() {\n  // Chrome DevTools does not complain about navigator.vendor\n  return /apple/i.test(navigator.vendor);\n}\nfunction isAndroid() {\n  const re = /android/i;\n  return re.test(getPlatform()) || re.test(getUserAgent());\n}\nfunction isMac() {\n  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\n}\nfunction isJSDOM() {\n  return getUserAgent().includes('jsdom/');\n}\n\nconst FOCUSABLE_ATTRIBUTE = 'data-floating-ui-focusable';\nconst TYPEABLE_SELECTOR = \"input:not([type='hidden']):not([disabled]),\" + \"[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\n\nfunction activeElement(doc) {\n  let activeElement = doc.activeElement;\n  while (((_activeElement = activeElement) == null || (_activeElement = _activeElement.shadowRoot) == null ? void 0 : _activeElement.activeElement) != null) {\n    var _activeElement;\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  return activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n\n  // then fallback to custom implementation with Shadow DOM support\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    }\n  }\n\n  // Give up, the result is false\n  return false;\n}\nfunction getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\nfunction isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const e = event;\n  return e.target != null && node.contains(e.target);\n}\nfunction isRootElement(element) {\n  return element.matches('html,body');\n}\nfunction getDocument(node) {\n  return (node == null ? void 0 : node.ownerDocument) || document;\n}\nfunction isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\nfunction isTypeableCombobox(element) {\n  if (!element) return false;\n  return element.getAttribute('role') === 'combobox' && isTypeableElement(element);\n}\nfunction matchesFocusVisible(element) {\n  // We don't want to block focus from working with `visibleOnly`\n  // (JSDOM doesn't match `:focus-visible` when the element has `:focus`)\n  if (!element || isJSDOM()) return true;\n  try {\n    return element.matches(':focus-visible');\n  } catch (_e) {\n    return true;\n  }\n}\nfunction getFloatingFocusElement(floatingElement) {\n  if (!floatingElement) {\n    return null;\n  }\n  // Try to find the element that has `{...getFloatingProps()}` spread on it.\n  // This indicates the floating element is acting as a positioning wrapper, and\n  // so focus should be managed on the child element with the event handlers and\n  // aria props.\n  return floatingElement.hasAttribute(FOCUSABLE_ATTRIBUTE) ? floatingElement : floatingElement.querySelector(\"[\" + FOCUSABLE_ATTRIBUTE + \"]\") || floatingElement;\n}\n\nfunction getNodeChildren(nodes, id, onlyOpenChildren) {\n  if (onlyOpenChildren === void 0) {\n    onlyOpenChildren = true;\n  }\n  const directChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && (!onlyOpenChildren || ((_node$context = node.context) == null ? void 0 : _node$context.open));\n  });\n  return directChildren.flatMap(child => [child, ...getNodeChildren(nodes, child.id, onlyOpenChildren)]);\n}\nfunction getDeepestNode(nodes, id) {\n  let deepestNodeId;\n  let maxDepth = -1;\n  function findDeepest(nodeId, depth) {\n    if (depth > maxDepth) {\n      deepestNodeId = nodeId;\n      maxDepth = depth;\n    }\n    const children = getNodeChildren(nodes, nodeId);\n    children.forEach(child => {\n      findDeepest(child.id, depth + 1);\n    });\n  }\n  findDeepest(id, 0);\n  return nodes.find(node => node.id === deepestNodeId);\n}\nfunction getNodeAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\nfunction isReactEvent(event) {\n  return 'nativeEvent' in event;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nfunction isVirtualClick(event) {\n  // FIXME: Firefox is now emitting a deprecation warning for `mozInputSource`.\n  // Try to find a workaround for this. `react-aria` source still has the check.\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  if (isAndroid() && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isVirtualPointerEvent(event) {\n  if (isJSDOM()) return false;\n  return !isAndroid() && event.width === 0 && event.height === 0 || isAndroid() && event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'touch';\n}\nfunction isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}\n\nvar isClient = typeof document !== 'undefined';\n\nvar noop = function noop() {};\nvar index = isClient ? useLayoutEffect : noop;\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst SafeReact = {\n  ...React\n};\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\nconst useInsertionEffect = SafeReact.useInsertionEffect;\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\nfunction isDifferentGridRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfListBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction getMinListIndex(listRef, disabledIndices) {\n  return findNonDisabledListIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxListIndex(listRef, disabledIndices) {\n  return findNonDisabledListIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\nfunction findNonDisabledListIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  let index = startingIndex;\n  do {\n    index += decrement ? -amount : amount;\n  } while (index >= 0 && index <= listRef.current.length - 1 && isListIndexDisabled(listRef, index, disabledIndices));\n  return index;\n}\nfunction getGridNavigatedIndex(listRef, _ref) {\n  let {\n    event,\n    orientation,\n    loop,\n    rtl,\n    cols,\n    disabledIndices,\n    minIndex,\n    maxIndex,\n    prevIndex,\n    stopEvent: stop = false\n  } = _ref;\n  let nextIndex = prevIndex;\n  if (event.key === ARROW_UP) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = maxIndex;\n    } else {\n      nextIndex = findNonDisabledListIndex(listRef, {\n        startingIndex: nextIndex,\n        amount: cols,\n        decrement: true,\n        disabledIndices\n      });\n      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {\n        const col = prevIndex % cols;\n        const maxCol = maxIndex % cols;\n        const offset = maxIndex - (maxCol - col);\n        if (maxCol === col) {\n          nextIndex = maxIndex;\n        } else {\n          nextIndex = maxCol > col ? offset : offset - cols;\n        }\n      }\n    }\n    if (isIndexOutOfListBounds(listRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n  if (event.key === ARROW_DOWN) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = minIndex;\n    } else {\n      nextIndex = findNonDisabledListIndex(listRef, {\n        startingIndex: prevIndex,\n        amount: cols,\n        disabledIndices\n      });\n      if (loop && prevIndex + cols > maxIndex) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex % cols - cols,\n          amount: cols,\n          disabledIndices\n        });\n      }\n    }\n    if (isIndexOutOfListBounds(listRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n\n  // Remains on the same row/column.\n  if (orientation === 'both') {\n    const prevRow = floor(prevIndex / cols);\n    if (event.key === (rtl ? ARROW_LEFT : ARROW_RIGHT)) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== cols - 1) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex,\n          disabledIndices\n        });\n        if (loop && isDifferentGridRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledListIndex(listRef, {\n            startingIndex: prevIndex - prevIndex % cols - 1,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      }\n      if (isDifferentGridRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    if (event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT)) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== 0) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex,\n          decrement: true,\n          disabledIndices\n        });\n        if (loop && isDifferentGridRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledListIndex(listRef, {\n            startingIndex: prevIndex + (cols - prevIndex % cols),\n            decrement: true,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex + (cols - prevIndex % cols),\n          decrement: true,\n          disabledIndices\n        });\n      }\n      if (isDifferentGridRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    const lastRow = floor(maxIndex / cols) === prevRow;\n    if (isIndexOutOfListBounds(listRef, nextIndex)) {\n      if (loop && lastRow) {\n        nextIndex = event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT) ? maxIndex : findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      } else {\n        nextIndex = prevIndex;\n      }\n    }\n  }\n  return nextIndex;\n}\n\n/** For each cell index, gets the item index that occupies that cell */\nfunction createGridCellMap(sizes, cols, dense) {\n  const cellMap = [];\n  let startIndex = 0;\n  sizes.forEach((_ref2, index) => {\n    let {\n      width,\n      height\n    } = _ref2;\n    if (width > cols) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[Floating UI]: Invalid grid - item width at index \" + index + \" is greater than grid columns\");\n      }\n    }\n    let itemPlaced = false;\n    if (dense) {\n      startIndex = 0;\n    }\n    while (!itemPlaced) {\n      const targetCells = [];\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          targetCells.push(startIndex + i + j * cols);\n        }\n      }\n      if (startIndex % cols + width <= cols && targetCells.every(cell => cellMap[cell] == null)) {\n        targetCells.forEach(cell => {\n          cellMap[cell] = index;\n        });\n        itemPlaced = true;\n      } else {\n        startIndex++;\n      }\n    }\n  });\n\n  // convert into a non-sparse array\n  return [...cellMap];\n}\n\n/** Gets cell index of an item's corner or -1 when index is -1. */\nfunction getGridCellIndexOfCorner(index, sizes, cellMap, cols, corner) {\n  if (index === -1) return -1;\n  const firstCellIndex = cellMap.indexOf(index);\n  const sizeItem = sizes[index];\n  switch (corner) {\n    case 'tl':\n      return firstCellIndex;\n    case 'tr':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + sizeItem.width - 1;\n    case 'bl':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + (sizeItem.height - 1) * cols;\n    case 'br':\n      return cellMap.lastIndexOf(index);\n  }\n}\n\n/** Gets all cell indices that correspond to the specified indices */\nfunction getGridCellIndices(indices, cellMap) {\n  return cellMap.flatMap((index, cellIndex) => indices.includes(index) ? [cellIndex] : []);\n}\nfunction isListIndexDisabled(listRef, index, disabledIndices) {\n  if (typeof disabledIndices === 'function') {\n    return disabledIndices(index);\n  } else if (disabledIndices) {\n    return disabledIndices.includes(index);\n  }\n  const element = listRef.current[index];\n  return element == null || element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true';\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, dir) {\n  const list = tabbable(container, getTabbableOptions());\n  const len = list.length;\n  if (len === 0) return;\n  const active = activeElement(getDocument(container));\n  const index = list.indexOf(active);\n  const nextIndex = index === -1 ? dir === 1 ? 0 : len - 1 : index + dir;\n  return list[nextIndex];\n}\nfunction getNextTabbable(referenceElement) {\n  return getTabbableIn(getDocument(referenceElement).body, 1) || referenceElement;\n}\nfunction getPreviousTabbable(referenceElement) {\n  return getTabbableIn(getDocument(referenceElement).body, -1) || referenceElement;\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\nexport { activeElement, contains, createGridCellMap, disableFocusInside, enableFocusInside, findNonDisabledListIndex, getDeepestNode, getDocument, getFloatingFocusElement, getGridCellIndexOfCorner, getGridCellIndices, getGridNavigatedIndex, getMaxListIndex, getMinListIndex, getNextTabbable, getNodeAncestors, getNodeChildren, getPlatform, getPreviousTabbable, getTabbableOptions, getTarget, getUserAgent, isAndroid, isDifferentGridRow, isEventTargetWithin, isIndexOutOfListBounds, isJSDOM, isListIndexDisabled, isMac, isMouseLikePointerType, isOutsideEvent, isReactEvent, isRootElement, isSafari, isTypeableCombobox, isTypeableElement, isVirtualClick, isVirtualPointerEvent, matchesFocusVisible, stopEvent, useEffectEvent, useLatestRef, index as useModernLayoutEffect };\n","'use client';\nfunction randomId(prefix = \"mantine-\") {\n  return `${prefix}${Math.random().toString(36).slice(2, 11)}`;\n}\n\nexport { randomId };\n//# sourceMappingURL=random-id.mjs.map\n","'use client';\nimport React from 'react';\n\nconst __useId = React[\"useId\".toString()] || (() => void 0);\nfunction useReactId() {\n  const id = __useId();\n  return id ? `mantine-${id.replace(/:/g, \"\")}` : \"\";\n}\n\nexport { useReactId };\n//# sourceMappingURL=use-react-id.mjs.map\n","'use client';\nimport { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nimport { randomId } from '../utils/random-id/random-id.mjs';\nimport { useReactId } from './use-react-id.mjs';\n\nfunction useId(staticId) {\n  const reactId = useReactId();\n  const [uuid, setUuid] = useState(reactId);\n  useIsomorphicEffect(() => {\n    setUuid(randomId());\n  }, []);\n  if (typeof staticId === \"string\") {\n    return staticId;\n  }\n  if (typeof window === \"undefined\") {\n    return reactId;\n  }\n  return uuid;\n}\n\nexport { useId };\n//# sourceMappingURL=use-id.mjs.map\n","'use client';\nimport '../../utils/units-converters/rem.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport '../../MantineProvider/Mantine.context.mjs';\nimport '../../MantineProvider/default-theme.mjs';\nimport '../../MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { resolveClassNames } from '../use-styles/get-class-name/resolve-class-names/resolve-class-names.mjs';\nimport { resolveStyles } from '../use-styles/get-style/resolve-styles/resolve-styles.mjs';\n\nfunction useResolvedStylesApi({\n  classNames,\n  styles,\n  props,\n  stylesCtx\n}) {\n  const theme = useMantineTheme();\n  return {\n    resolvedClassNames: resolveClassNames({\n      theme,\n      classNames,\n      props,\n      stylesCtx: stylesCtx || void 0\n    }),\n    resolvedStyles: resolveStyles({\n      theme,\n      styles,\n      props,\n      stylesCtx: stylesCtx || void 0\n    })\n  };\n}\n\nexport { useResolvedStylesApi };\n//# sourceMappingURL=use-resolved-styles-api.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { identity } from './factory.mjs';\n\nfunction polymorphicFactory(ui) {\n  const Component = forwardRef(ui);\n  Component.withProps = (fixedProps) => {\n    const Extended = forwardRef((props, ref) => /* @__PURE__ */ jsx(Component, { ...fixedProps, ...props, ref }));\n    Extended.extend = Component.extend;\n    Extended.displayName = `WithProps(${Component.displayName})`;\n    return Extended;\n  };\n  Component.extend = identity;\n  return Component;\n}\n\nexport { polymorphicFactory };\n//# sourceMappingURL=polymorphic-factory.mjs.map\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nconst invalidOverflowDisplayValues = /*#__PURE__*/new Set(['inline', 'contents']);\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);\n}\nconst tableElements = /*#__PURE__*/new Set(['table', 'td', 'th']);\nfunction isTableElement(element) {\n  return tableElements.has(getNodeName(element));\n}\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (_e) {\n      return false;\n    }\n  });\n}\nconst transformProperties = ['transform', 'translate', 'scale', 'rotate', 'perspective'];\nconst willChangeValues = ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'];\nconst containValues = ['paint', 'layout', 'strict', 'content'];\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return transformProperties.some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || willChangeValues.some(value => (css.willChange || '').includes(value)) || containValues.some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nconst lastTraversableNodeNames = /*#__PURE__*/new Set(['html', 'body', '#document']);\nfunction isLastTraversableNode(node) {\n  return lastTraversableNodeNames.has(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","'use client';\nimport { Fragment } from 'react';\n\nfunction isElement(value) {\n  if (Array.isArray(value) || value === null) {\n    return false;\n  }\n  if (typeof value === \"object\") {\n    if (value.type === Fragment) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n}\n\nexport { isElement };\n//# sourceMappingURL=is-element.mjs.map\n","import { computePosition, arrow as arrow$2, autoPlacement as autoPlacement$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar isClient = typeof document !== 'undefined';\n\nvar noop = function noop() {};\nvar index = isClient ? useLayoutEffect : noop;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n"],"names":[],"sourceRoot":"","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47]}