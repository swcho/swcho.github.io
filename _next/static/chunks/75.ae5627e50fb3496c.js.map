{"version":3,"file":"static/chunks/75.ae5627e50fb3496c.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@visx/shape/esm/shapes/LinePath.js","webpack://_N_E/./pages/blogs/2021-10-08-animation/Chart2.tsx","webpack://_N_E/./node_modules/d3-path/src/path.js","webpack://_N_E/./node_modules/d3-shape/src/constant.js","webpack://_N_E/./node_modules/d3-shape/src/curve/linear.js","webpack://_N_E/./node_modules/d3-shape/src/point.js","webpack://_N_E/./node_modules/d3-shape/src/line.js","webpack://_N_E/./node_modules/@visx/shape/esm/util/setNumberOrNumberAccessor.js","webpack://_N_E/./node_modules/@visx/shape/esm/util/D3ShapeFactories.js"],"sourcesContent":["var _excluded = [\"children\", \"data\", \"x\", \"y\", \"fill\", \"className\", \"curve\", \"innerRef\", \"defined\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nimport { line } from '../util/D3ShapeFactories';\nexport default function LinePath(_ref) {\n  var children = _ref.children,\n    _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    x = _ref.x,\n    y = _ref.y,\n    _ref$fill = _ref.fill,\n    fill = _ref$fill === void 0 ? 'transparent' : _ref$fill,\n    className = _ref.className,\n    curve = _ref.curve,\n    innerRef = _ref.innerRef,\n    _ref$defined = _ref.defined,\n    defined = _ref$defined === void 0 ? function () {\n      return true;\n    } : _ref$defined,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var path = line({\n    x: x,\n    y: y,\n    defined: defined,\n    curve: curve\n  });\n  if (children) return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    path: path\n  }));\n  return /*#__PURE__*/React.createElement(\"path\", _extends({\n    ref: innerRef,\n    className: cx('visx-linepath', className),\n    d: path(data) || '',\n    fill: fill\n    // without this a datum surrounded by nulls will not be visible\n    // https://github.com/d3/d3-shape#line_defined\n    ,\n    strokeLinecap: \"round\"\n  }, restProps));\n}","import { useSpring, animated } from '@react-spring/web';\nimport * as React from 'react';\n\nimport { extent } from 'd3-array';\n\nimport { AxisBottom, AxisLeft } from '@visx/axis';\nimport { ParentSize } from '@visx/responsive';\nimport { scaleUtc, scaleLinear } from '@visx/scale';\nimport { LinePath } from '@visx/shape';\n\nimport { useBlogPostContext } from '../../../components/BlogPostContext';\n\nconst AnimatedLinePath = animated(LinePath);\n\ntype Item = {\n  date: string;\n  close: number;\n  lower: number;\n  middle: number;\n  upper: number;\n};\n\nexport type Props = {\n  width: number;\n  height: number;\n  data: Item[];\n};\n\nconst MARGIN = { top: 20, right: 30, bottom: 30, left: 40 };\n\nconst Content = React.memo((props: Props) => {\n  const { width, height, data } = props;\n\n  const xScale = React.useMemo(\n    () =>\n      scaleUtc({\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        domain: extent(data, (d) => new Date(d.date)) as any,\n        range: [MARGIN.left, width - MARGIN.right],\n      }),\n    [width, height, data]\n  );\n\n  const yScale = React.useMemo(\n    () =>\n      scaleLinear({\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        domain: extent(data, (d) => d.upper) as any,\n        range: [height - MARGIN.bottom, MARGIN.top],\n        nice: true,\n      }),\n    [width, height, data]\n  );\n\n  // const createLine = line<Item>()\n  //   .x(({ date }) => xScale(new Date(date)))\n  //   .y(({ close }) => yScale(close));\n  // // .curve(curveNatural);\n\n  const [toggle, setToggle] = React.useState(true);\n\n  const pathRef = React.useRef<SVGPathElement>(null);\n\n  const [dashLength, setDashLength] = React.useState(0);\n\n  const trace = useSpring({\n    strokeDashoffset: dashLength,\n    // strokeDashoffset: toggle ? 0 : length,\n    strokeDasharray: dashLength,\n    from: { strokeDashoffset: 0 },\n    // reset: true,\n    reverse: toggle,\n  });\n  React.useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    pathRef.current && setDashLength(pathRef.current.getTotalLength());\n  });\n  // console.log(\n  //   'Content',\n  //   { width, height, dashLength, x: trace.x.get() },\n  //   trace\n  // );\n  return (\n    <>\n      <button type=\"button\" style={{ border: '1px solid', padding: '5px' }} onClick={() => setToggle((prev) => !prev)}>\n        Toggle\n      </button>\n      <svg width={width} height={height}>\n        {/* <Line\n          innerRef={lineRef}\n          d={createLine(data) || ''}\n          stroke=\"#333\"\n          strokeWidth={2}\n          strokeDashoffset={trace.x as any}\n        /> */}\n        <AnimatedLinePath\n          innerRef={pathRef}\n          // style={style}\n          // innerRef={ref}\n          data={data}\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          x={(d: any) => xScale(new Date(d.date))}\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          y={(d: any) => yScale(d.close)}\n          stroke=\"#333\"\n          style={trace}\n          // strokeDashoffset={trace.x.get()}\n        />\n        <AxisLeft scale={yScale} left={MARGIN.left} numTicks={width / 80} />\n        <AxisBottom scale={xScale} top={height - MARGIN.bottom} numTicks={height / 40} />\n      </svg>\n    </>\n  );\n});\n\nconst Chart2 = React.memo(() => {\n  const { data } = useBlogPostContext();\n  return (\n    <ParentSize debounceTime={300} enableDebounceLeadingCall={false}>\n      {({ width }) => <Content width={width} height={300} data={data} />}\n    </ParentSize>\n  );\n});\n\nexport default Chart2;\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","/**\n * This is a workaround for TypeScript not inferring the correct\n * method overload/signature for some d3 shape methods.\n */\nexport default function setNumberOrNumberAccessor(func, value) {\n  if (typeof value === 'number') func(value);else func(value);\n}","import { arc as d3Arc, area as d3Area, line as d3Line, pie as d3Pie, radialLine as d3RadialLine, stack as d3Stack } from 'd3-shape';\nimport setNumberOrNumberAccessor from './setNumberOrNumberAccessor';\nimport stackOrder from './stackOrder';\nimport stackOffset from './stackOffset';\nexport function arc(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    innerRadius = _ref.innerRadius,\n    outerRadius = _ref.outerRadius,\n    cornerRadius = _ref.cornerRadius,\n    startAngle = _ref.startAngle,\n    endAngle = _ref.endAngle,\n    padAngle = _ref.padAngle,\n    padRadius = _ref.padRadius;\n  var path = d3Arc();\n  if (innerRadius != null) setNumberOrNumberAccessor(path.innerRadius, innerRadius);\n  if (outerRadius != null) setNumberOrNumberAccessor(path.outerRadius, outerRadius);\n  if (cornerRadius != null) setNumberOrNumberAccessor(path.cornerRadius, cornerRadius);\n  if (startAngle != null) setNumberOrNumberAccessor(path.startAngle, startAngle);\n  if (endAngle != null) setNumberOrNumberAccessor(path.endAngle, endAngle);\n  if (padAngle != null) setNumberOrNumberAccessor(path.padAngle, padAngle);\n  if (padRadius != null) setNumberOrNumberAccessor(path.padRadius, padRadius);\n  return path;\n}\nexport function area(_temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n    x = _ref2.x,\n    x0 = _ref2.x0,\n    x1 = _ref2.x1,\n    y = _ref2.y,\n    y0 = _ref2.y0,\n    y1 = _ref2.y1,\n    defined = _ref2.defined,\n    curve = _ref2.curve;\n  var path = d3Area();\n  if (x) setNumberOrNumberAccessor(path.x, x);\n  if (x0) setNumberOrNumberAccessor(path.x0, x0);\n  if (x1) setNumberOrNumberAccessor(path.x1, x1);\n  if (y) setNumberOrNumberAccessor(path.y, y);\n  if (y0) setNumberOrNumberAccessor(path.y0, y0);\n  if (y1) setNumberOrNumberAccessor(path.y1, y1);\n  if (defined) path.defined(defined);\n  if (curve) path.curve(curve);\n  return path;\n}\nexport function line(_temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n    x = _ref3.x,\n    y = _ref3.y,\n    defined = _ref3.defined,\n    curve = _ref3.curve;\n  var path = d3Line();\n  if (x) setNumberOrNumberAccessor(path.x, x);\n  if (y) setNumberOrNumberAccessor(path.y, y);\n  if (defined) path.defined(defined);\n  if (curve) path.curve(curve);\n  return path;\n}\nexport function pie(_temp4) {\n  var _ref4 = _temp4 === void 0 ? {} : _temp4,\n    startAngle = _ref4.startAngle,\n    endAngle = _ref4.endAngle,\n    padAngle = _ref4.padAngle,\n    value = _ref4.value,\n    sort = _ref4.sort,\n    sortValues = _ref4.sortValues;\n  var path = d3Pie();\n\n  // ts can't distinguish between these method overloads\n  if (sort === null) path.sort(sort);else if (sort != null) path.sort(sort);\n  if (sortValues === null) path.sortValues(sortValues);else if (sortValues != null) path.sortValues(sortValues);\n  if (value != null) path.value(value);\n  if (padAngle != null) setNumberOrNumberAccessor(path.padAngle, padAngle);\n  if (startAngle != null) setNumberOrNumberAccessor(path.startAngle, startAngle);\n  if (endAngle != null) setNumberOrNumberAccessor(path.endAngle, endAngle);\n  return path;\n}\nexport function radialLine(_temp5) {\n  var _ref5 = _temp5 === void 0 ? {} : _temp5,\n    angle = _ref5.angle,\n    radius = _ref5.radius,\n    defined = _ref5.defined,\n    curve = _ref5.curve;\n  var path = d3RadialLine();\n  if (angle) setNumberOrNumberAccessor(path.angle, angle);\n  if (radius) setNumberOrNumberAccessor(path.radius, radius);\n  if (defined) path.defined(defined);\n  if (curve) path.curve(curve);\n  return path;\n}\nexport function stack(_ref6) {\n  var keys = _ref6.keys,\n    value = _ref6.value,\n    order = _ref6.order,\n    offset = _ref6.offset;\n  var path = d3Stack();\n  if (keys) path.keys(keys);\n  if (value) setNumberOrNumberAccessor(path.value, value);\n  if (order) path.order(stackOrder(order));\n  if (offset) path.offset(stackOffset(offset));\n  return path;\n}"],"names":["AnimatedLinePath","animated","LinePath","MARGIN","top","right","bottom","left","Content","React","width","height","data","props","xScale","scaleUtc","domain","extent","Date","d","date","range","yScale","scaleLinear","upper","nice","toggle","setToggle","pathRef","dashLength","setDashLength","trace","useSpring","strokeDashoffset","strokeDasharray","from","reverse","current","getTotalLength","button","type","style","border","padding","onClick","prev","svg","innerRef","x","y","close","stroke","AxisLeft","scale","numTicks","AxisBottom","useBlogPostContext","Chart2","ParentSize","debounceTime","enableDebounceLeadingCall"],"sourceRoot":"","ignoreList":[0,2,3,4,5,6,7,8]}