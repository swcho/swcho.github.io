{"version":3,"file":"static/chunks/932.7caa0d5a76e5dca4.js","mappings":"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","sources":["webpack://_N_E/./pages/blogs/2021-09-30-scatterchart/DotsExample.tsx","webpack://_N_E/./pages/blogs/2021-09-30-scatterchart/Dots.tsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport * as React from 'react';\n\nimport { localPoint } from '@visx/event';\nimport { GradientPinkRed, GradientLightgreenGreen } from '@visx/gradient';\nimport { Group } from '@visx/group';\nimport genRandomNormalPoints, { PointsRange } from '@visx/mock-data/lib/generators/genRandomNormalPoints';\nimport { scaleLinear } from '@visx/scale';\nimport { Circle } from '@visx/shape';\nimport { withTooltip, Tooltip } from '@visx/tooltip';\n\nimport { WithTooltipProvidedProps } from '@visx/tooltip/lib/enhancers/withTooltip';\nimport { voronoi, VoronoiPolygon } from '@visx/voronoi';\n\nexport type DotsProps = {\n  width: number;\n  height: number;\n  showControls?: boolean;\n};\n\nexport type Props = {\n  className?: string;\n  children?: React.ReactNode;\n} & DotsProps &\n  WithTooltipProvidedProps<PointsRange>;\n\nconst points: PointsRange[] = genRandomNormalPoints(600, /* seed= */ 0).filter((_, i) => i < 600);\n\n// console.log(points);\n\nconst x = (d: PointsRange) => d[0];\nconst y = (d: PointsRange) => d[1];\n\nlet tooltipTimeout: number;\n\nconst DotsExample = withTooltip<DotsProps, PointsRange>((props: Props) => {\n  const {\n    width,\n    height,\n    showControls = true,\n    hideTooltip,\n    showTooltip,\n    tooltipOpen,\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n  } = props;\n  if (width < 10) return null;\n  const [showVoronoi, setShowVoronoi] = React.useState(showControls);\n  const svgRef = React.useRef<SVGSVGElement>(null);\n  const xScale = React.useMemo(\n    () =>\n      scaleLinear<number>({\n        domain: [1.3, 2.2],\n        // domain: [0, 3],\n        range: [0, width],\n        clamp: true,\n      }),\n    [width]\n  );\n  const yScale = React.useMemo(\n    () =>\n      scaleLinear<number>({\n        domain: [0.75, 1.6],\n        // domain: [-3, 3],\n        // domain: [1.5, 1.5],\n        range: [height, 0],\n        // range: [0, width],\n        clamp: true,\n      }),\n    [height]\n  );\n  const voronoiLayout = React.useMemo(\n    () =>\n      voronoi<PointsRange>({\n        x: (d) => xScale(x(d)) ?? 0,\n        y: (d) => yScale(y(d)) ?? 0,\n        width,\n        height,\n      })(points),\n    [width, height, xScale, yScale]\n  );\n\n  // event handlers\n  const handleMouseMove = React.useCallback(\n    (event: React.MouseEvent | React.TouchEvent) => {\n      if (tooltipTimeout) clearTimeout(tooltipTimeout);\n      if (!svgRef.current) return;\n\n      // find the nearest polygon to the current mouse position\n      const point = localPoint(svgRef.current, event);\n      if (!point) return;\n      const neighborRadius = 100;\n      const closest = voronoiLayout.find(point.x, point.y, neighborRadius);\n      if (closest) {\n        showTooltip({\n          tooltipLeft: xScale(x(closest.data)),\n          tooltipTop: yScale(y(closest.data)),\n          tooltipData: closest.data,\n        });\n      }\n    },\n    [xScale, yScale, showTooltip, voronoiLayout]\n  );\n\n  const handleMouseLeave = React.useCallback(() => {\n    tooltipTimeout = window.setTimeout(() => {\n      hideTooltip();\n    }, 300);\n  }, [hideTooltip]);\n\n  return (\n    <div>\n      <svg width={width} height={height} ref={svgRef}>\n        <GradientPinkRed id=\"dots-pink\" />\n        <GradientLightgreenGreen id=\"light-green\" />\n        {/** capture all mouse events with a rect */}\n        <rect\n          width={width}\n          height={height}\n          rx={14}\n          // rx={0}\n          fill=\"url(#dots-pink)\"\n          // fill=\"url(#light-green)\"\n          onMouseMove={handleMouseMove}\n          onMouseLeave={handleMouseLeave}\n          onTouchMove={handleMouseMove}\n          onTouchEnd={handleMouseLeave}\n        />\n        <Group pointerEvents=\"none\">\n          {points.map((point, i) => (\n            <Circle\n              key={`point-${point[0]}-${i}`}\n              className=\"dot\"\n              cx={xScale(x(point))}\n              cy={yScale(y(point))}\n              r={i % 3 === 0 ? 2 : 3}\n              fill={tooltipData === point ? 'white' : '#f6c431'}\n            />\n          ))}\n          {showVoronoi &&\n            voronoiLayout\n              .polygons()\n              .map((polygon, i) => (\n                <VoronoiPolygon\n                  key={`polygon-${i}`}\n                  polygon={polygon}\n                  fill=\"white\"\n                  stroke=\"white\"\n                  strokeWidth={1}\n                  strokeOpacity={0.2}\n                  fillOpacity={tooltipData === polygon.data ? 0.5 : 0}\n                />\n              ))}\n        </Group>\n      </svg>\n      {tooltipOpen && tooltipData && tooltipLeft != null && tooltipTop != null && (\n        <Tooltip left={tooltipLeft + 10} top={tooltipTop + 10}>\n          <div>\n            <strong>x:</strong> {x(tooltipData)}\n          </div>\n          <div>\n            <strong>y:</strong> {y(tooltipData)}\n          </div>\n        </Tooltip>\n      )}\n      {showControls && (\n        <div>\n          <label style={{ fontSize: 12 }}>\n            <input type=\"checkbox\" checked={showVoronoi} onChange={() => setShowVoronoi(!showVoronoi)} />\n            &nbsp;Show voronoi point map\n          </label>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default DotsExample;\n","import * as React from 'react';\n\nimport ParentSize from '@visx/responsive/lib/components/ParentSize';\n\nimport DotsExample from './DotsExample';\n\nconst DotsExampleComponent = DotsExample as any;\nconst Dots = React.memo(() => <ParentSize>{({ width }) => <DotsExampleComponent width={width} height={200} />}</ParentSize>);\n\nexport default Dots;\n"],"names":["tooltipTimeout","points","genRandomNormalPoints","filter","_","i","x","d","y","DotsExample","withTooltip","width","height","showControls","hideTooltip","showTooltip","tooltipOpen","tooltipData","tooltipLeft","tooltipTop","props","showVoronoi","setShowVoronoi","React","svgRef","xScale","scaleLinear","domain","range","clamp","yScale","voronoiLayout","voronoi","handleMouseMove","clearTimeout","current","point","localPoint","event","closest","find","neighborRadius","data","handleMouseLeave","window","setTimeout","div","svg","ref","GradientPinkRed","id","GradientLightgreenGreen","rect","rx","fill","onMouseMove","onMouseLeave","onTouchMove","onTouchEnd","Group","pointerEvents","map","Circle","className","cx","cy","r","polygons","polygon","VoronoiPolygon","stroke","strokeWidth","strokeOpacity","fillOpacity","Tooltip","left","top","strong","label","style","fontSize","input","type","checked","onChange","ParentSize","Dots","DotsExampleComponent"],"sourceRoot":"","ignoreList":[]}