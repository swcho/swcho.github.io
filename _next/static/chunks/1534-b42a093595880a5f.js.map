{"version":3,"file":"static/chunks/1534-b42a093595880a5f.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@react-three/drei/helpers/constants.js","webpack://_N_E/./node_modules/@react-three/drei/core/shaderMaterial.js","webpack://_N_E/./components/Footer.tsx","webpack://_N_E/./components/Header.tsx","webpack://_N_E/./components/Layout.tsx","webpack://_N_E/./components/BlogPostContext.tsx","webpack://_N_E/./components/HeadPost.tsx","webpack://_N_E/./node_modules/@react-three/drei/materials/DiscardMaterial.js","webpack://_N_E/./node_modules/@react-three/drei/core/AccumulativeShadows.js","webpack://_N_E/./components/BlogPost.tsx"],"sourcesContent":["import { REVISION } from 'three';\n\nconst getVersion = () => parseInt(REVISION.replace(/\\D+/g, ''));\nconst version = /* @__PURE__ */getVersion();\n\nexport { version };\n","import * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  var _Class;\n  return _Class = class extends THREE.ShaderMaterial {\n    constructor(parameters) {\n      super({\n        vertexShader,\n        fragmentShader,\n        ...parameters\n      });\n      for (const key in uniforms) {\n        this.uniforms[key] = new THREE.Uniform(uniforms[key]);\n        Object.defineProperty(this, key, {\n          get() {\n            return this.uniforms[key].value;\n          },\n          set(value) {\n            this.uniforms[key].value = value;\n          }\n        });\n      }\n      this.uniforms = THREE.UniformsUtils.clone(this.uniforms);\n      onInit == null || onInit(this);\n    }\n  }, _Class.key = THREE.MathUtils.generateUUID(), _Class;\n}\n\nexport { shaderMaterial };\n","import * as React from 'react';\n\n// import Anchor from './Anchor';\n\nconst Footer = React.memo(() => (\n  <>\n    {/* <footer className=\"bg-white border-t border-gray-400 shadow\">\n        <div className=\"container flex max-w-4xl py-8 mx-auto\">\n          <div className=\"flex flex-wrap w-full mx-auto\">\n            <div className=\"flex w-full md:w-1/2\">\n              <div className=\"px-8\">\n                <h3 className=\"font-bold text-gray-900\">About</h3>\n                <p className=\"py-4 text-sm text-gray-600\">My blog</p>\n              </div>\n            </div>\n\n            <div className=\"flex w-full md:w-1/2\">\n              <div className=\"px-8\">\n                <h3 className=\"font-bold text-gray-900\">Social</h3>\n                <ul className=\"items-center pt-3 text-sm list-reset\">\n                  <li>\n                    <Anchor>Add social link</Anchor>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer> */}\n  </>\n));\n\nexport default Footer;\n","import { useRouter } from 'next/dist/client/router';\nimport Link from 'next/link';\n\nimport * as React from 'react';\n\ntype MenuItem = {\n  link: string;\n  text: string;\n};\n\nconst MENU_ITEMS: MenuItem[] = [\n  {\n    link: '/',\n    text: 'Home',\n  },\n  // {\n  //   link: '/about',\n  //   text: 'About',\n  // },\n];\n\nconst Header = React.memo(() => {\n  const router = useRouter();\n  const [openMenu, setOpenMenu] = React.useState(false);\n  // console.log(`Header openMenu=${openMenu}`);\n  return (\n    <nav className=\"w-full\">\n      <div\n        id=\"progress\"\n        className=\"top-0 z-20 h-1\"\n        style={{\n          background: 'linear-gradient(to right, #4dc0b5 var(--scroll), transparent 0)',\n        }}\n      />\n\n      <div className=\"flex flex-wrap items-center justify-between w-full py-3 mx-auto mt-0 md:max-w-4xl\">\n        <div className=\"pl-4\">\n          <Link\n            legacyBehavior\n            className=\"text-xl font-extrabold text-gray-900 no-underline hover:no-underline\"\n            href=\"/\"\n          >\n            lifetime trails\n          </Link>\n        </div>\n\n        <div className=\"block pr-4 lg:hidden\">\n          <button\n            id=\"nav-toggle\"\n            type=\"button\"\n            className=\"flex items-center px-3 py-2 text-gray-500 appearance-none hover:text-gray-900 hover:border-teal-500 focus:outline-none\"\n            onMouseDown={(e) => e.preventDefault()}\n            onClick={() => setOpenMenu(!openMenu)}\n            onBlur={() => setOpenMenu(false)}\n          >\n            <svg className=\"w-3 h-3 fill-current\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n              <title>Menu</title>\n              <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n            </svg>\n          </button>\n        </div>\n\n        <div\n          id=\"nav-content\"\n          className={`bg-gray-100 border-b flex-grow lg:border-none lg:flex lg:items-center lg:mt-0 lg:shadow-none lg:w-auto md:bg-transparent mt-2 shadow w-full z-20 ${\n            openMenu ? 'block' : 'hidden'\n          }`}\n        >\n          <ul className=\"items-center justify-end flex-1 list-reset lg:flex\">\n            {MENU_ITEMS.map(({ link, text }) => (\n              <li key={link} className=\"mr-3\">\n                <Link\n                  legacyBehavior\n                  className={\n                    router.pathname === link\n                      ? 'inline-block py-2 px-4 text-gray-900 font-bold no-underline'\n                      : 'inline-block text-gray-600 no-underline hover:text-gray-900 hover:text-underline py-2 px-4'\n                  }\n                  href={link}\n                >\n                  {text}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n});\n\nexport default Header;\n","import Head from 'next/head';\n\nimport React, { PropsWithChildren } from 'react';\n\nimport Footer from './Footer';\nimport Header from './Header';\n\n// import typography from '../utils/typography';\n\ntype Props = PropsWithChildren<{\n  title?: string;\n}>;\n\nconst Layout = React.memo(({ children, title = 'This is the default title' }: Props) => (\n  <div className=\"leading-normal tracking-normal bg-gray-100 min-h-screen\">\n    <Head>\n      <title>{title}</title>\n      <meta charSet=\"utf-8\" />\n      <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n      {/* typography */}\n      {/* <TypographyStyle typography={typography} /> */}\n    </Head>\n    <Header />\n    <div className=\"container w-full px-4 pb-10 mx-auto md:max-w-3xl\">{children}</div>\n    <Footer />\n  </div>\n));\n\nexport default Layout;\n","import React from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst Context = React.createContext<any>({});\n\nexport type Props = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  staticProps: any;\n  children?: React.ReactNode;\n};\n\nexport function BlogContextProvider({ staticProps, children }: Props) {\n  return <Context.Provider value={staticProps}>{children}</Context.Provider>;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useBlogPostContext() {\n  return React.useContext(Context);\n}\n","import * as React from 'react';\n\nexport type Props = {\n  meta: MetaData;\n  isBlogPost?: boolean;\n};\n\nconst HeadPost = ({ meta, isBlogPost }: Props) => (\n  <>\n    <h1 className={`font-bold text-gray-800 mb-4 ${isBlogPost ? 'text-5xl mt-8 mb-8' : 'text-lg'}`}>{meta.title}</h1>\n    <div className=\"details\">\n      <p className=\"text-gray-500\">{meta.description}</p>\n      <p className=\"text-gray-400 text-right -mt-1\">\n        <span className=\"mr-4\">{meta.date}</span>\n      </p>\n    </div>\n  </>\n);\n\nexport default HeadPost;\n","import { shaderMaterial } from '../core/shaderMaterial.js';\n\nconst DiscardMaterial = /* @__PURE__ */shaderMaterial({}, 'void main() { }', 'void main() { gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0); discard;  }');\n\nexport { DiscardMaterial };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { DiscardMaterial } from '../materials/DiscardMaterial.js';\nimport { version } from '../helpers/constants.js';\n\nfunction isLight(object) {\n  return object.isLight;\n}\nfunction isGeometry(object) {\n  return !!object.geometry;\n}\nconst accumulativeContext = /* @__PURE__ */React.createContext(null);\nconst SoftShadowMaterial = /* @__PURE__ */shaderMaterial({\n  color: /* @__PURE__ */new THREE.Color(),\n  blend: 2.0,\n  alphaTest: 0.75,\n  opacity: 0,\n  map: null\n}, `varying vec2 vUv;\n   void main() {\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n     vUv = uv;\n   }`, `varying vec2 vUv;\n   uniform sampler2D map;\n   uniform vec3 color;\n   uniform float opacity;\n   uniform float alphaTest;\n   uniform float blend;\n   void main() {\n     vec4 sampledDiffuseColor = texture2D(map, vUv);\n     gl_FragColor = vec4(color * sampledDiffuseColor.r * blend, max(0.0, (1.0 - (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) / alphaTest)) * opacity);\n     #include <tonemapping_fragment>\n     #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nconst AccumulativeShadows = /* @__PURE__ */React.forwardRef(({\n  children,\n  temporal,\n  frames = 40,\n  limit = Infinity,\n  blend = 20,\n  scale = 10,\n  opacity = 1,\n  alphaTest = 0.75,\n  color = 'black',\n  colorBlend = 2,\n  resolution = 1024,\n  toneMapped = true,\n  ...props\n}, forwardRef) => {\n  extend({\n    SoftShadowMaterial\n  });\n  const gl = useThree(state => state.gl);\n  const scene = useThree(state => state.scene);\n  const camera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const gPlane = React.useRef(null);\n  const gLights = React.useRef(null);\n  const [plm] = React.useState(() => new ProgressiveLightMap(gl, scene, resolution));\n  React.useLayoutEffect(() => {\n    plm.configure(gPlane.current);\n  }, []);\n  const api = React.useMemo(() => ({\n    lights: new Map(),\n    temporal: !!temporal,\n    frames: Math.max(2, frames),\n    blend: Math.max(2, frames === Infinity ? blend : frames),\n    count: 0,\n    getMesh: () => gPlane.current,\n    reset: () => {\n      // Clear buffers, reset opacities, set frame count to 0\n      plm.clear();\n      const material = gPlane.current.material;\n      material.opacity = 0;\n      material.alphaTest = 0;\n      api.count = 0;\n    },\n    update: (frames = 1) => {\n      // Adapt the opacity-blend ratio to the number of frames\n      const material = gPlane.current.material;\n      if (!api.temporal) {\n        material.opacity = opacity;\n        material.alphaTest = alphaTest;\n      } else {\n        material.opacity = Math.min(opacity, material.opacity + opacity / api.blend);\n        material.alphaTest = Math.min(alphaTest, material.alphaTest + alphaTest / api.blend);\n      }\n\n      // Switch accumulative lights on\n      gLights.current.visible = true;\n      // Collect scene lights and meshes\n      plm.prepare();\n\n      // Update the lightmap and the accumulative lights\n      for (let i = 0; i < frames; i++) {\n        api.lights.forEach(light => light.update());\n        plm.update(camera, api.blend);\n      }\n      // Switch lights off\n      gLights.current.visible = false;\n      // Restore lights and meshes\n      plm.finish();\n    }\n  }), [plm, camera, scene, temporal, frames, blend, opacity, alphaTest]);\n  React.useLayoutEffect(() => {\n    // Reset internals, buffers, ...\n    api.reset();\n    // Update lightmap\n    if (!api.temporal && api.frames !== Infinity) api.update(api.blend);\n  });\n\n  // Expose api, allow children to set itself as the main light source\n  React.useImperativeHandle(forwardRef, () => api, [api]);\n  useFrame(() => {\n    if ((api.temporal || api.frames === Infinity) && api.count < api.frames && api.count < limit) {\n      invalidate();\n      api.update();\n      api.count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    traverse: () => null,\n    ref: gLights\n  }, /*#__PURE__*/React.createElement(accumulativeContext.Provider, {\n    value: api\n  }, children)), /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: true,\n    ref: gPlane,\n    scale: scale,\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"softShadowMaterial\", {\n    transparent: true,\n    depthWrite: false,\n    toneMapped: toneMapped,\n    color: color,\n    blend: colorBlend,\n    map: plm.progressiveLightMap2.texture\n  })));\n});\nconst RandomizedLight = /* @__PURE__ */React.forwardRef(({\n  castShadow = true,\n  bias = 0.001,\n  mapSize = 512,\n  size = 5,\n  near = 0.5,\n  far = 500,\n  frames = 1,\n  position = [0, 0, 0],\n  radius = 1,\n  amount = 8,\n  intensity = version >= 155 ? Math.PI : 1,\n  ambient = 0.5,\n  ...props\n}, forwardRef) => {\n  const gLights = React.useRef(null);\n  const length = new THREE.Vector3(...position).length();\n  const parent = React.useContext(accumulativeContext);\n  const update = React.useCallback(() => {\n    let light;\n    if (gLights.current) {\n      for (let l = 0; l < gLights.current.children.length; l++) {\n        light = gLights.current.children[l];\n        if (Math.random() > ambient) {\n          light.position.set(position[0] + THREE.MathUtils.randFloatSpread(radius), position[1] + THREE.MathUtils.randFloatSpread(radius), position[2] + THREE.MathUtils.randFloatSpread(radius));\n        } else {\n          let lambda = Math.acos(2 * Math.random() - 1) - Math.PI / 2.0;\n          let phi = 2 * Math.PI * Math.random();\n          light.position.set(Math.cos(lambda) * Math.cos(phi) * length, Math.abs(Math.cos(lambda) * Math.sin(phi) * length), Math.sin(lambda) * length);\n        }\n      }\n    }\n  }, [radius, ambient, length, ...position]);\n  const api = React.useMemo(() => ({\n    update\n  }), [update]);\n  React.useImperativeHandle(forwardRef, () => api, [api]);\n  React.useLayoutEffect(() => {\n    var _parent$lights;\n    const group = gLights.current;\n    if (parent) (_parent$lights = parent.lights) == null || _parent$lights.set(group.uuid, api);\n    return () => {\n      var _parent$lights2;\n      return void (parent == null || (_parent$lights2 = parent.lights) == null ? void 0 : _parent$lights2.delete(group.uuid));\n    };\n  }, [parent, api]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: gLights\n  }, props), Array.from({\n    length: amount\n  }, (_, index) => /*#__PURE__*/React.createElement(\"directionalLight\", {\n    key: index,\n    castShadow: castShadow,\n    \"shadow-bias\": bias,\n    \"shadow-mapSize\": [mapSize, mapSize],\n    intensity: intensity / amount\n  }, /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    attach: \"shadow-camera\",\n    args: [-size, size, size, -size, near, far]\n  }))));\n});\n\n// Based on \"Progressive Light Map Accumulator\", by [zalo](https://github.com/zalo/)\nclass ProgressiveLightMap {\n  constructor(renderer, scene, res = 1024) {\n    this.renderer = renderer;\n    this.res = res;\n    this.scene = scene;\n    this.buffer1Active = false;\n    this.lights = [];\n    this.meshes = [];\n    this.object = null;\n    this.clearColor = new THREE.Color();\n    this.clearAlpha = 0;\n\n    // Create the Progressive LightMap Texture\n    const textureParams = {\n      type: THREE.HalfFloatType,\n      magFilter: THREE.NearestFilter,\n      minFilter: THREE.NearestFilter\n    };\n    this.progressiveLightMap1 = new THREE.WebGLRenderTarget(this.res, this.res, textureParams);\n    this.progressiveLightMap2 = new THREE.WebGLRenderTarget(this.res, this.res, textureParams);\n\n    // Inject some spicy new logic into a standard phong material\n    this.discardMat = new DiscardMaterial();\n    this.targetMat = new THREE.MeshLambertMaterial({\n      fog: false\n    });\n    this.previousShadowMap = {\n      value: this.progressiveLightMap1.texture\n    };\n    this.averagingWindow = {\n      value: 100\n    };\n    this.targetMat.onBeforeCompile = shader => {\n      // Vertex Shader: Set Vertex Positions to the Unwrapped UV Positions\n      shader.vertexShader = 'varying vec2 vUv;\\n' + shader.vertexShader.slice(0, -1) + 'vUv = uv; gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }';\n\n      // Fragment Shader: Set Pixels to average in the Previous frame's Shadows\n      const bodyStart = shader.fragmentShader.indexOf('void main() {');\n      shader.fragmentShader = 'varying vec2 vUv;\\n' + shader.fragmentShader.slice(0, bodyStart) + 'uniform sampler2D previousShadowMap;\\n\tuniform float averagingWindow;\\n' + shader.fragmentShader.slice(bodyStart - 1, -1) + `\\nvec3 texelOld = texture2D(previousShadowMap, vUv).rgb;\n        gl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/ averagingWindow);\n      }`;\n\n      // Set the Previous Frame's Texture Buffer and Averaging Window\n      shader.uniforms.previousShadowMap = this.previousShadowMap;\n      shader.uniforms.averagingWindow = this.averagingWindow;\n    };\n  }\n  clear() {\n    this.renderer.getClearColor(this.clearColor);\n    this.clearAlpha = this.renderer.getClearAlpha();\n    this.renderer.setClearColor('black', 1);\n    this.renderer.setRenderTarget(this.progressiveLightMap1);\n    this.renderer.clear();\n    this.renderer.setRenderTarget(this.progressiveLightMap2);\n    this.renderer.clear();\n    this.renderer.setRenderTarget(null);\n    this.renderer.setClearColor(this.clearColor, this.clearAlpha);\n    this.lights = [];\n    this.meshes = [];\n    this.scene.traverse(object => {\n      if (isGeometry(object)) {\n        this.meshes.push({\n          object,\n          material: object.material\n        });\n      } else if (isLight(object)) {\n        this.lights.push({\n          object,\n          intensity: object.intensity\n        });\n      }\n    });\n  }\n  prepare() {\n    this.lights.forEach(light => light.object.intensity = 0);\n    this.meshes.forEach(mesh => mesh.object.material = this.discardMat);\n  }\n  finish() {\n    this.lights.forEach(light => light.object.intensity = light.intensity);\n    this.meshes.forEach(mesh => mesh.object.material = mesh.material);\n  }\n  configure(object) {\n    this.object = object;\n  }\n  update(camera, blendWindow = 100) {\n    if (!this.object) return;\n    // Set each object's material to the UV Unwrapped Surface Mapping Version\n    this.averagingWindow.value = blendWindow;\n    this.object.material = this.targetMat;\n    // Ping-pong two surface buffers for reading/writing\n    const activeMap = this.buffer1Active ? this.progressiveLightMap1 : this.progressiveLightMap2;\n    const inactiveMap = this.buffer1Active ? this.progressiveLightMap2 : this.progressiveLightMap1;\n    // Render the object's surface maps\n    const oldBg = this.scene.background;\n    this.scene.background = null;\n    this.renderer.setRenderTarget(activeMap);\n    this.previousShadowMap.value = inactiveMap.texture;\n    this.buffer1Active = !this.buffer1Active;\n    this.renderer.render(this.scene, camera);\n    this.renderer.setRenderTarget(null);\n    this.scene.background = oldBg;\n  }\n}\n\nexport { AccumulativeShadows, RandomizedLight, accumulativeContext };\n","import hljs from 'highlight.js';\n\nimport * as React from 'react';\nimport ReactUtterances from 'react-utterances';\n\nimport { BlogContextProvider } from './BlogPostContext';\nimport HeadPost from './HeadPost';\nimport Layout from './Layout';\n\nconst prd = process.env.NODE_ENV === 'production';\n\nexport type Props = React.PropsWithChildren<{\n  meta: MetaData;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, react/require-default-props\n  staticProps?: any;\n}>;\n\nexport default function BlogPost({ children, meta, staticProps }: Props) {\n  React.useEffect(() => {\n    // console.log('initHighlighting');\n    hljs.highlightAll();\n  }, []);\n  // console.log('BlogPost', { staticProps });\n  return (\n    <>\n      <Layout title={meta.title}>\n        <HeadPost meta={meta} isBlogPost />\n        <BlogContextProvider staticProps={staticProps}>\n          <article className=\"markdown\">{children}</article>\n        </BlogContextProvider>\n        {prd && <ReactUtterances repo=\"swcho/blog-comments\" type=\"pathname\" label=\"utterances\" theme=\"github-light\" />}\n      </Layout>\n    </>\n  );\n}\n"],"names":["Footer","React","MENU_ITEMS","link","text","Header","router","useRouter","openMenu","setOpenMenu","nav","className","div","id","style","background","Link","legacyBehavior","href","button","type","onMouseDown","e","preventDefault","onClick","onBlur","svg","viewBox","xmlns","title","path","d","ul","map","li","pathname","Layout","children","Head","meta","charSet","name","content","Context","BlogContextProvider","staticProps","Provider","value","useBlogPostContext","isBlogPost","HeadPost","h1","p","description","span","date","BlogPost","hljs","article","ReactUtterances","repo","label","theme"],"sourceRoot":"","ignoreList":[0,1,7,8]}