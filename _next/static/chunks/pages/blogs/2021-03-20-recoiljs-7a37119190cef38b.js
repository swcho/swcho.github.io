(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2100],{3717:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},18742:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a,meta:()=>c});var r=n(37876),s=n(91668),i=n(91013);let c={title:"빠르고 쉬운 Recoil.js 상태 관리",description:"그간 recoil.js를 사용하면서 느낀점과 경험을 공유합니다.",date:"2021-02-22",readTime:10},o=e=>{let{children:t}=e;return(0,r.jsx)(i.A,{meta:c,children:t})};function l(e){let t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{children:"상태 관리 회고"}),"\n",(0,r.jsx)(t.p,{children:"여러 단계의 parent/child 컴포넌트로 이루어진 애플리케이션을 만들다보면 상태 관리와 전달을 고민하게 됩니다."}),"\n",(0,r.jsxs)(t.p,{children:["애플리케이션 전체에서 공통으로 참조하고 변경하는 상태를 흔히 ",(0,r.jsx)(t.strong,{children:"application level state"})," 라고 합니다."]}),"\n",(0,r.jsxs)(t.p,{children:["Redux가 없었을 때에는 event emitter 등으로 ",(0,r.jsx)(t.strong,{children:"application level state"}),"를 컴포넌트간에 전달하고 ",(0,r.jsx)(t.code,{children:"forceUpdate"})," 같은 것을 호출 했을 겁니다."]}),"\n",(0,r.jsx)(t.p,{children:"Redux는 상태 관리를 action, reducer, connect 등으로 패턴화 하였습니다."}),"\n",(0,r.jsx)(t.p,{children:"네 Redux는 일종의 코드를 이렇게 작성하자는 약속과 패턴의 영역이라고 생각합니다."}),"\n",(0,r.jsx)(t.p,{children:"그러다 보니, redux 방식은 생각보다 많은 코드를 작성해야 합니다."}),"\n",(0,r.jsx)(t.p,{children:"또한 reducer라는 것은 컴포넌트 단에 드러나지 않아 코드를 이해하고 결과를 예측하기 위해 여러 파일을 추적해야 합니다."}),"\n",(0,r.jsx)(t.p,{children:"그래서 저는 reducer에서 별도의 변환 로직을 넣지 않고 오로지 새로운 객체에 값을 복사하는 방식으로만 사용하는 편 입니다."}),"\n",(0,r.jsx)(t.p,{children:"솔직히 딱히 다른 대안이 없기에 redux 패턴을 사용했습니다."}),"\n",(0,r.jsx)(t.p,{children:"하지만, 하나의 상태를 추가히기 위해 action을 정의하고 connect하는 과정은 지루한 작업입니다."}),"\n",(0,r.jsx)(t.p,{children:"막연하게 무언가 부족하다고 느껴질 때 즈음 recoil.js를 만나게 됩니다."}),"\n",(0,r.jsxs)(t.p,{children:["action 대신 ",(0,r.jsx)(t.code,{children:"atom"}),"을 사용하고, reducer 대신 ",(0,r.jsx)(t.code,{children:"selector"}),"를 사용하여 reactive한 프로그래밍을 할 수 있습니다."]}),"\n",(0,r.jsxs)(t.h1,{children:[(0,r.jsx)(t.code,{children:"atom"})," - 컴포넌트간 상태 공유"]}),"\n",(0,r.jsxs)(t.p,{children:["컴포넌트사이의 상태 공유는 간단히 ",(0,r.jsx)(t.code,{children:"atom"}),"을 정의하면 됩니다."]}),"\n",(0,r.jsxs)(t.p,{children:["값만을 사용할 때에는 ",(0,r.jsx)(t.code,{children:"useRecoilValue"}),"를 변경까지 할 경우에는 ",(0,r.jsx)(t.code,{children:"useRecoilState"}),"를 사용합니다."]}),"\n",(0,r.jsx)(t.p,{children:"너무 간단해서 더 설명할 것이 없습니다."}),"\n",(0,r.jsxs)(t.p,{children:["참조: ",(0,r.jsx)(t.a,{href:"https://recoiljs.org/docs/basic-tutorial/atoms",children:"Atoms | Recoil"})]}),"\n",(0,r.jsxs)(t.h1,{children:[(0,r.jsx)(t.code,{children:"selector"})," - reactive programminig"]}),"\n",(0,r.jsx)(t.p,{children:"흔히들 엑셀의 동작과 비교하는 reactive programming 기법이 있습니다."}),"\n",(0,r.jsxs)(t.p,{children:["엑셀의 ",(0,r.jsx)(t.code,{children:"SUM"})," 함수를 사용하면 여러 셀의 값을 더하여 그 결과를 표시합니다."]}),"\n",(0,r.jsxs)(t.p,{children:["이후 ",(0,r.jsx)(t.code,{children:"SUM"})," 함수로 지정한 셀 중의 하나를 수정하면 바로 합산 결과를 보여줍니다."]}),"\n",(0,r.jsx)(t.p,{children:"애플리케이션 사용자는 이러한 방식의 동작을 기대합니다."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"selector"}),"는 recoil state를 ",(0,r.jsx)(t.code,{children:"get"}),"이라는 함수로 참조하는 것으로 observe할 수 있습니다."]}),"\n",(0,r.jsxs)(t.p,{children:["참조: ",(0,r.jsx)(t.a,{href:"https://recoiljs.org/docs/basic-tutorial/selectors",children:"Selectors | Recoil"})]}),"\n",(0,r.jsx)(t.p,{children:"Event emitter나 observer 같은 방식보다 직관적인 코드로 derives한 값을 정의할 수 있습니다."}),"\n",(0,r.jsx)(t.h1,{children:"async API 호출"}),"\n",(0,r.jsx)(t.p,{children:"로그인 사용자 정보는 다양한 컴포넌트에서 필요합니다."}),"\n",(0,r.jsx)(t.p,{children:"여러 곳에서 사용하더라도 API 호출을 한번만 하고 싶습니다."}),"\n",(0,r.jsxs)(t.p,{children:["먼저 ",(0,r.jsx)(t.code,{children:"selector"}),"로 promise를 반환하도록 아래와 같이 작성합니다."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"const userState = selector({\n  key: 'userState',\n  get: async () => axios.get<UserInfo>('/login-user-info').then((r) => r.data),\n});\n"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Header"}),"에서도 사용하고"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"function Header() {\n  const userInfo = useRecoilValue(userState)\n\n  return (\n    ...\n  )\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"UserInfoPage"})," 컴포넌트에서도 사용합니다."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"function UserInfoPage() {\n  const userInfo = useRecoilValue(userState)\n\n  return (\n    ...\n  )\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["한 화면에 ",(0,r.jsx)(t.code,{children:"Header"}),", ",(0,r.jsx)(t.code,{children:"UserInfoPage"})," 컴포넌트를 동시에 mount해도 한번의 API만 호출합니다."]}),"\n",(0,r.jsx)(t.h1,{children:"Reactive programming"}),"\n",(0,r.jsx)(t.p,{children:"Reactive programming은 어떻게 구현할 수 있는지 보겠습니다."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"// 현재 화면에 표시할 post의 id\nconst currentPostIdState = atom({\n  key: 'currentPostIdState',\n  default: 0,\n});\n\n// post 정보\nconst currentPostState = selector({\n  key: 'currentPostState',\n  get: async ({ get }) => {\n    const currentPostId = get(currentPostIdState);\n    return axios.get<Post>(`/posts/${currentPostId}`).then((r) => r.data);\n  },\n});\n\n// post에 달린 comment 목록\nconst currenPostCommentsState = selector({\n  key: 'currenPostCommentsState',\n  get: async ({ get }) => {\n    const currentPostId = get(currentPostIdState);\n    return axios.get<Comment[]>(`/posts/${currentPostId}/comments`).then((r) => r.data);\n  },\n});\n"})}),"\n",(0,r.jsxs)(t.p,{children:["위의 코드는 ",(0,r.jsx)(t.code,{children:"currentPostIdState"}),"를 변경할 경우 ",(0,r.jsx)(t.code,{children:"currentPostState"}),", ",(0,r.jsx)(t.code,{children:"currenPostCommentsState"}),"를 새로운 API 호출과 함께 갱신합니다."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"on"})," 함수를 사용한 callback 처리나 observe를 사용한 chaining function 없이도 매우 직관적이고 간결한 코드로 reactive programming을 할 수 있습니다."]}),"\n",(0,r.jsx)(t.p,{children:"조금 복잡하지만 매우 유용한 예제를 살펴 보겠습니다."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Comment"}),"가 10개 일지라도 작성자는 2명일 수 있습니다."]}),"\n",(0,r.jsx)(t.p,{children:"그리고 여러분은 작성자 정보를 가져오는 API 호출 횟수를 줄이고 싶을 겁니다."}),"\n",(0,r.jsxs)(t.p,{children:["먼저 ",(0,r.jsx)(t.code,{children:"Comment"}),"의 ",(0,r.jsx)(t.code,{children:"userId"}),"에 따른 ",(0,r.jsx)(t.code,{children:"UserInfo"}),"값을 가지는 ",(0,r.jsx)(t.code,{children:"ResolvedComment"}),"를 다음과 같이 정의합니다."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"type Comment = {\n  userId: string; // 커멘트 작성자\n  comment: string; // 커멘트 내용\n};\n\ntype ResolvedComment = Comment & {\n  user: UserInfo; // `userId`로 부터 가져온 사용자 정보\n};\n"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"selectorFamily"}),"를 사용하면 파라미터를 받을 수 있는 state를 정의할 수 있습니다."]}),"\n",(0,r.jsx)(t.p,{children:"파라미터는 serializable 즉 JSON.stringify 가능해야 합니다."}),"\n",(0,r.jsx)(t.p,{children:"아마도 recoil.js 내부에서 캐쉬 key로 사용할 것 같습니다."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"waitForAll"}),"과 함께 사용하면 마법과 같은 코딩을 할 수 있습니다."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"// userId 값으로 사용자 정보를 가져옵니다.\nconst userFamilyState = selectorFamily({\n  key: 'userFamilyState',\n  get: (userId: string) => async () => {\n    return axios.get<UserInfo>(`/user/${userId}`);\n  },\n});\n\n// 커멘트 목록 정보를 업데이트하면 커멘트 작성자 정보와 함께 업데이트 합니다.\nconst currentResolvedCommentsState = selector({\n  key: 'currentResolvedCommentsState',\n  get: ({ get }) => {\n    const comments = get(currenPostCommentsState);\n\n    // 각 comment의 작성자 정보를 매번 가져오는 것 같지만, selectorFamily로 인해 중복 호출을 하지 않습니다.\n    const users = get(waitForAll(comments.map(({ userId }) => userFamilyState(userId))));\n    return comments.map((comment) => ({\n      ...comment,\n      user: findItem(users, 'id', comment.useId),\n    }));\n  },\n});\n"})}),"\n",(0,r.jsxs)(t.p,{children:["이제 ",(0,r.jsx)(t.code,{children:"currentPostIdState"})," 만 변경하면 중복 호출 없이 각 커멘트의 작성자 정보까지 업데이트하는 간결하고 직관적인 라이브러리를 확보하였습니다."]}),"\n",(0,r.jsxs)(t.p,{children:["원하는 recoil state를 원하는 컴포넌트에 ",(0,r.jsx)(t.code,{children:"useRecoilValue"}),"로 hook하면 끝 입니다."]}),"\n",(0,r.jsx)(t.h1,{children:"마치며"}),"\n",(0,r.jsx)(t.p,{children:"무언가를 완벽히 알고 사용하기 보다는, 필요한 것을 찾아 사용하는 편 입니다."}),"\n",(0,r.jsx)(t.p,{children:"그래서 아직 recoil.js의 기능을 모두 아는 것은 아닙니다."}),"\n",(0,r.jsxs)(t.p,{children:["하지만, 다양한 요구사항에 대한 해결 방법을 고민했을 때, ",(0,r.jsx)(t.code,{children:"atom"}),"과 ",(0,r.jsx)(t.code,{children:"selector"}),"라는 이 간단한 개념들이 얼마만큼 확장가능한지 매번 놀라고 있습니다."]}),"\n",(0,r.jsx)(t.p,{children:"이런 새로운 개념으로 인해 금방이라도 legacy가 되어 버릴 redux나 mobx 기반의 코드 작성을 잠시 멈추시고, recoil.js를 사용해 보시는 것 어떨까요?"}),"\n",(0,r.jsx)(t.p,{children:"추천 드립니다."})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,r.jsx)(o,{...e,children:(0,r.jsx)(l,{...e})})}},49034:(e,t,n)=>{"use strict";n.d(t,{A:()=>h});var r=n(18153),s=n(77328),i=n.n(s),c=n(14232);let o=c.memo(()=>(0,r.Y)(r.FK,{}));var l=n(71745),a=n(48230),d=n.n(a);let u=[{link:"/",text:"Home"}],p=c.memo(()=>{let e=(0,l.useRouter)(),[t,n]=c.useState(!1);return(0,r.FD)("nav",{className:"w-full",children:[(0,r.Y)("div",{id:"progress",className:"top-0 z-20 h-1",style:{background:"linear-gradient(to right, #4dc0b5 var(--scroll), transparent 0)"}}),(0,r.FD)("div",{className:"flex flex-wrap items-center justify-between w-full py-3 mx-auto mt-0 md:max-w-4xl",children:[(0,r.Y)("div",{className:"pl-4",children:(0,r.Y)(d(),{legacyBehavior:!0,className:"text-xl font-extrabold text-gray-900 no-underline hover:no-underline",href:"/",children:"lifetime trails"})}),(0,r.Y)("div",{className:"block pr-4 lg:hidden",children:(0,r.Y)("button",{id:"nav-toggle",type:"button",className:"flex items-center px-3 py-2 text-gray-500 appearance-none hover:text-gray-900 hover:border-teal-500 focus:outline-none",onMouseDown:e=>e.preventDefault(),onClick:()=>n(!t),onBlur:()=>n(!1),children:(0,r.FD)("svg",{className:"w-3 h-3 fill-current",viewBox:"0 0 20 20",xmlns:"http://www.w3.org/2000/svg",children:[(0,r.Y)("title",{children:"Menu"}),(0,r.Y)("path",{d:"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"})]})})}),(0,r.Y)("div",{id:"nav-content",className:"bg-gray-100 border-b flex-grow lg:border-none lg:flex lg:items-center lg:mt-0 lg:shadow-none lg:w-auto md:bg-transparent mt-2 shadow w-full z-20 ".concat(t?"block":"hidden"),children:(0,r.Y)("ul",{className:"items-center justify-end flex-1 list-reset lg:flex",children:u.map(t=>{let{link:n,text:s}=t;return(0,r.Y)("li",{className:"mr-3",children:(0,r.Y)(d(),{legacyBehavior:!0,className:e.pathname===n?"inline-block py-2 px-4 text-gray-900 font-bold no-underline":"inline-block text-gray-600 no-underline hover:text-gray-900 hover:text-underline py-2 px-4",href:n,children:s})},n)})})})]})]})}),h=c.memo(e=>{let{children:t,title:n="This is the default title"}=e;return(0,r.FD)("div",{className:"leading-normal tracking-normal bg-gray-100 min-h-screen",children:[(0,r.FD)(i(),{children:[(0,r.Y)("title",{children:n}),(0,r.Y)("meta",{charSet:"utf-8"}),(0,r.Y)("meta",{name:"viewport",content:"initial-scale=1.0, width=device-width"})]}),(0,r.Y)(p,{}),(0,r.Y)("div",{className:"container w-full px-4 pb-10 mx-auto md:max-w-3xl",children:t}),(0,r.Y)(o,{})]})})},56486:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.identifierTypes=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e){for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}}return t.default=e,t}(n(14232)),s=function(e){return e&&e.__esModule?e:{default:e}}(n(95062));function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var l=["pathname","url","title","og:title","issue-number","issue-term"],a=function(e,t,n){if(0>l.indexOf(e))return void console.warn("Wrong type: "+e);if("pathname"===e)return"pathname";if("url"===e)return"url";if("title"===e)return"title";if("og:title"===e)return"og:title";if("issue-term"===e)return t;else if("issue-number"===e)return n},d=function(e){var t;if("function"!=typeof e&&null!==e)throw TypeError("Super expression must either be null or a function");function n(e){var t,s;if(!(this instanceof n))throw TypeError("Cannot call a class as a function");return(t=(s=c(n).call(this,e))&&("object"===i(s)||"function"==typeof s)?s:function(e){if(void 0===e)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(this)).myRef=r.default.createRef(),t.state={pending:!0},t}return n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&o(n,e),t=[{key:"componentDidMount",value:function(){var e=this,t=this.props,n=t.repo,r=t.type,s=t.specificTerm,i=t.issueNumber,c=0>l.indexOf(r)?void console.warn("Wrong type: "+r):"issue-number"===r?"issue-number":"issue-term",o=a(r,s,i);if("issue-term"===r&&!o)return void console.warn("When type is '".concat(r,"', 'specificTerm' prop must be provided"));if("issue-number"===r&&(isNaN(o)||o<1))return void console.warn("When type is '".concat(r,"', valid 'issueNumber' prop must be provided"));var d=document.createElement("script");d.src="https://utteranc.es/client.js",d.async=!0,d.setAttribute("repo",n),d.setAttribute("crossorigin","anonymous"),d.setAttribute(c,o),d.onload=function(){return e.setState({pending:!1})},this.myRef.current.appendChild(d)}},{key:"render",value:function(){return r.default.createElement("div",{className:"react-utterences",ref:this.myRef},this.props.debug&&r.default.createElement("pre",{style:{background:"#cccccc",padding:10}},"\nthis.props: ".concat(JSON.stringify(this.props,null,2),'\nlocation.pathname: "').concat(window.location.pathname,'"\nlocation.href: "').concat(window.location.href,'"\n          ').trim()),this.props.debug&&r.default.createElement("div",null,"\uD83D\uDC47\uD83D\uDC47If the settings are valid, the comment widget appear below\uD83D\uDC47\uD83D\uDC47"),this.state.pending&&r.default.createElement("div",null,"Loading script..."))}}],function(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}(n.prototype,t),n}(r.Component);t.identifierTypes={pathname:{attrValue:"",summary:"Issue title contains page pathname"},url:{attrValue:"url",summary:"Issue title contains page URL"},title:{attrValue:"title",summary:"Issue title contains page title"},"og:title":{attrValue:"og:title",summary:"Issue title contains page og:title"},"issue-number":{attrValue:-1,summary:"Specific issue number"},"issue-term":{attrValue:"",summary:"Issue title contains specific term"}},d.propTypes={type:s.default.string.isRequired,repo:s.default.string.isRequired,specificTerm:s.default.string,issueNumber:s.default.number,hashKey:s.default.string,debug:s.default.bool},t.default=d},59034:(e,t,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/blogs/2021-03-20-recoiljs",function(){return n(18742)}])},60158:(e,t,n)=>{"use strict";n.d(t,{J:()=>o,j:()=>c});var r=n(18153),s=n(14232);let i=s.createContext({});function c(e){let{staticProps:t,children:n}=e;return(0,r.Y)(i.Provider,{value:t,children:n})}function o(){return s.useContext(i)}},79706:(e,t,n)=>{"use strict";var r=n(3717);function s(){}function i(){}i.resetWarningCache=s,e.exports=function(){function e(e,t,n,s,i,c){if(c!==r){var o=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:s};return n.PropTypes=n,n}},85419:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(18153);n(14232);let s=e=>{let{meta:t,isBlogPost:n}=e;return(0,r.FD)(r.FK,{children:[(0,r.Y)("h1",{className:"font-bold text-gray-800 mb-4 ".concat(n?"text-5xl mt-8 mb-8":"text-lg"),children:t.title}),(0,r.FD)("div",{className:"details",children:[(0,r.Y)("p",{className:"text-gray-500",children:t.description}),(0,r.Y)("p",{className:"text-gray-400 text-right -mt-1",children:(0,r.Y)("span",{className:"mr-4",children:t.date})})]})]})}},86089:(e,t,n)=>{"use strict";Object.defineProperty(t,"Ay",{enumerable:!0,get:function(){return r.default}});var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e){for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}}return t.default=e,t}(n(56486))},91013:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var r=n(18153),s=n(73146),i=n.n(s),c=n(14232),o=n(86089),l=n(60158),a=n(85419),d=n(49034);function u(e){let{children:t,meta:n,staticProps:s}=e;return c.useEffect(()=>{i().highlightAll()},[]),(0,r.Y)(r.FK,{children:(0,r.FD)(d.A,{title:n.title,children:[(0,r.Y)(a.A,{meta:n,isBlogPost:!0}),(0,r.Y)(l.j,{staticProps:s,children:(0,r.Y)("article",{className:"markdown",children:t})}),(0,r.Y)(o.Ay,{repo:"swcho/blog-comments",type:"pathname",label:"utterances",theme:"github-light"})]})})}},95062:(e,t,n)=>{e.exports=n(79706)()}},e=>{e.O(0,[5695,636,6593,8792],()=>e(e.s=59034)),_N_E=e.O()}]);
//# sourceMappingURL=2021-03-20-recoiljs-7a37119190cef38b.js.map