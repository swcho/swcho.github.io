{"version":3,"file":"static/chunks/pages/blogs/2025-08-03-edges-geometry-78defc7bd3445a8d.js","mappings":"uIAMA,IAAMA,EAAOC,EAAAA,UAAgB,CAAyBC,IACpD,GAAM,UAAEC,CAAQ,CAAE,GAAGC,EAAM,CAAGF,EACxBG,EAAMJ,EAAAA,MAAY,CAAiB,MACnC,CAACK,EAAIC,EAAM,CAAGN,EAAAA,QAAc,GAKlC,OAJAA,EAAAA,SAAe,CAAC,KACdM,EAAMF,EAAIG,OAAO,CACnB,EAAG,EAAE,EAGH,QAACC,MAAAA,CACCJ,IAAKA,EACLK,IAAK,CAAEC,OAAQ,YAAaC,aAAc,MAAOC,MAAO,OAAQC,OAAQ,QAASC,aAAc,MAAO,EACrG,GAAGX,CAAI,UAEPE,GAAMH,EAASG,IAGtB,GAEA,EAAeL,EAAAA,IAAU,CAACD,KAAKA,EAAC,aCxBhC,4CACA,mCACA,WACA,OAAe,EAAQ,KAAmE,CAC1F,EACA,SAFsB,iLCJtB,MAAe,+FAA+F,CCO9G,SAASgB,IACP,GAAM,OAAEC,CAAK,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAOA,CAACC,GACpBC,EAAOH,EAAMI,eAAe,CAIlC,MAAO,QAACC,OAAAA,CAAKC,SAAUH,EAAKG,QAAQ,CAAEC,SAAUJ,EAAKI,QAAQ,EAC/D,CAsBA,MAAevB,EAAAA,IAAU,CAlBzB,MAkBgCwB,EAAC,CAlBxBA,CAAkB,EACzB,GAAM,EAAE,CAAGvB,EAEX,MACE,QAACF,EAAAA,CAAIA,CAAAA,UACF,IACC,SAAC0B,EAAAA,EAAMA,CAAAA,WACL,QAACC,eAAAA,CAAaC,UAAW,KACzB,QAACC,aAAAA,CAAWC,SAAU,CAAC,GAAI,GAAI,GAAG,GAClC,QAACC,EAAAA,EAAWA,CAAAA,CAACC,OAAO,WACpB,QAAChB,EAAAA,CAAAA,GACD,QAACiB,EAAAA,CAAaA,CAAAA,CAAAA,OAKxB,wCC7BA,MAA6B,YAAgB,GAC7C,eACA,WACA,KACC,MACD,MAAc,QAAY,OACxB,qBAAyB,qBAC3B,MAAoB,SAAa,uBACjC,EAA2B,QAAY,OACvC,EAA4B,QAAY,OAexC,OAdE,iBAAqB,MACvB,uBACA,sCACA,OACA,6BADA,MAGA,aACA,YACA,UAAuB,eAAmB,gCAC1C,mCACA,2DACA,yDACA,gCACA,CAAG,EACmB,eAAmB,CAAC,GAAI,CAAE,OAAQ,EACxD,YACA,SACA,MACA,gBACA,CAAG,IACH,CAAC,iDC3BD,MAAwC,OAAc,EACtD,eACA,UAA4B,OAAW,UACvC,UACA,cACA,SAA2B,SAAa,CACvC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,GAAO,iDAAuD;AAC/E,IAAI,GACJ,YACA,gBACA,YACA,iBACA,iBACA,gBACA,mBACA,wBACA,gBACA,gBACA,gBACA,iBACA,KACC,EACD,MAAc,QAAY,OAC1B,IAAqB,UAAc,YACnC,KAAU,UAAc,CACrB,GACH,CACA,KACA,CAAI,CAAE,MAAQ,GACd,6BAAkD,SAAa,EAC7D,SAAa,KAAO,OAAM,EAC5B,kBACA,CAAG,MACH,MAAmB,QAAY,IAC/B,EAAsB,QAAY,OA2ElC,OA1EE,iBAAqB,MACvB,gBACA,aACA,eACA,kBACA,yCACA,KACA,aACA,qBAGA,uCACA,IACA,wBACA,aAEA,YACA,OAAqB,aAAiB,EACtC,WACA,iCAEU,kBACV,OAAqB,eAAmB,wBACxC,gCAIA,CADA,MAAqB,MAAU,EAC/B,WACA,SAEA,aAAgC,QAAgB,0BAChD,gDACA,gDAGA,CAAG,EACD,iBAAqB,MACvB,gBACA,aACA,oBACA,MACA,gBACA,eACM,OAAU,IAChB,8CACA,6CACA,CAAO,EACD,OAAU,aAChB,cACA,YACA,QACA,UACA,OACA,cACA,aACA,gBACA,sBACA,iBACA,sBACA,CAAO,CACP,CACA,CAAG,EACD,WAAe,KACjB,KAEA,gBACA,aACA,oBACA,IACA,wBACA,YAEA,EACG,IACmB,eAAmB,SAAU,OAAQ,EAC3D,KACA,CAAG,IACH,gBCpJA,SAASjB,EAAMd,CAAgB,EAC7B,GAAM,GADMc,IACJC,CAAK,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAOA,CAACC,GACpBC,EAAOH,EAAMI,eAAe,CAC5B,CAACa,EAASC,EAAW,CAAGlC,EAAAA,IAFKkB,IAES,EAAC,GAE7C,MACE,SAACG,OAAAA,CACCC,SAAUH,EAAKG,QAAQ,CAEvBa,UAAU,IACVC,aAAa,IACbC,cAAe,IAAMH,GAAW,GAChCI,aAAc,IAAMJ,GAAW,GAC9B,GAAGjC,CAAK,WAET,QAACsC,uBAAAA,CACCC,UAAW,IACXC,UAAW,KAGb,QAACC,EAAKA,CAACC,EAADD,QAAY,EAAGE,UAAW,GAAIC,MAAOZ,EAAU,UAAY,UACjE,QAACa,EAAQA,CAACC,KAADD,KAAY,IAAMD,MAAOZ,EAAU,UAAY,YAG9D,CAyBA,MAAejC,EAAAA,IAAU,CArBzB,MAqBgCgD,EAAC,CArBxBA,CAAkB,EACzB,GAAM,EAAE,CAAG/C,EAEX,MACE,QAACF,EAAAA,CAAIA,CAAAA,UACF,IACC,SAAC0B,EAAAA,EAAMA,CAAAA,CAACwB,OAAO,IAACC,OAAQ,CAAErB,SAAU,CAAC,CAAC,EAAG,IAAK,EAAE,CAAEsB,IAAK,EAAG,YACxD,QAACzB,eAAAA,CAAaC,UAAWyB,KAAKC,EAAE,CAAG,IACnC,QAACC,YAAAA,CAAU3B,UAAWyB,KAAKC,EAAE,CAAEE,MAAO,EAAGC,MAAO,GAAKrB,UAAU,IAACN,SAAU,CAAC,EAAG,IAAK,EAAE,CAAE4B,iBAAgB,MACvG,QAAC1C,EAAKA,CAACc,QAADd,CAAW,CAAC,EAAG,IAAM,EAAE,CAAE2C,SAAU,CAAC,EAAG,EAAG,CAACN,KAAKC,EAAE,CAAG,KAAK,GAChE,QAACM,EAAAA,EAAmBA,CAAAA,CAACC,OAAQ,IAAKC,QAAQ,aACxC,QAACC,EAAAA,EAAeA,CAAAA,CAACC,OAAQ,EAAGlC,SAAU,CAAC,EAAG,IAAK,EAAE,KAEnD,QAACG,EAAAA,CAAaA,CAAAA,CAACgC,WAAW,IAACC,cAAe,KAC1C,QAACnC,EAAAA,EAAWA,CAAAA,CAACC,OAAO,eAK9B,GC1DamC,EAAAA,CACXC,MAAO,0BACPC,YAAc,yDACdC,KAAM,aACNC,SAAU,KAGG,iBAAGpE,CAAAA,CAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAAA,GAAAA,CAAAA,CAAgBqE,EAAAA,CAAAA,CAAAA,CAASL,KAAMA,WAAOhE,gLAEtD,0IAEC,qEAEH,oCAAM,cAAW,mEAEf,mEAIF,wGAEE,+HAAK,+HAEP,+FAEE,4DAIF,yGAEA,cAAW,gCAAE,iBAAc,yDAE3B","sources":["webpack://_N_E/./components/Area.tsx","webpack://_N_E/?809e","webpack://_N_E/./pages/blogs/2025-08-03-edges-geometry/src/day58_aluminium_bracket-transformed.glb","webpack://_N_E/./pages/blogs/2025-08-03-edges-geometry/src/App01.tsx","webpack://_N_E/./node_modules/@react-three/drei/core/Edges.js","webpack://_N_E/./node_modules/@react-three/drei/core/Outlines.js","webpack://_N_E/./pages/blogs/2025-08-03-edges-geometry/src/App02.tsx","webpack://_N_E/./pages/blogs/2025-08-03-edges-geometry/index.page.mdx"],"sourcesContent":["import * as React from 'react';\n\nexport type Props = Omit<React.ComponentPropsWithRef<'div'>, 'children'> & {\n  children: (el: HTMLDivElement) => React.ReactNode;\n};\n\nconst Area = React.forwardRef<HTMLDivElement, Props>((props) => {\n  const { children, ...rest } = props;\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [el, setEl] = React.useState<HTMLDivElement>();\n  React.useEffect(() => {\n    setEl(ref.current!);\n  }, []);\n  // console.log('Area', { el });\n  return (\n    <div\n      ref={ref}\n      css={{ border: '1px solid', borderRadius: '4px', width: '100%', height: '300px', marginBottom: '1rem' }}\n      {...rest}\n    >\n      {el && children(el)}\n    </div>\n  );\n});\n\nexport default React.memo(Area);\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/blogs/2025-08-03-edges-geometry\",\n      function () {\n        return require(\"private-next-pages/blogs/2025-08-03-edges-geometry/index.page.mdx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/blogs/2025-08-03-edges-geometry\"])\n      });\n    }\n  ","export default \"/_next/static/chunks/day58_aluminium_bracket-transformed.1af4057effcd33a6dc8c88922c041541.glb\";","import Area from '@/components/Area';\nimport { Environment, OrbitControls, useGLTF } from '@react-three/drei';\nimport { Canvas } from '@react-three/fiber';\nimport * as React from 'react';\nimport gltfModel from './day58_aluminium_bracket-transformed.glb';\nimport * as THREE from 'three';\n\nfunction Model() {\n  const { nodes } = useGLTF(gltfModel);\n  const Cube = nodes.defaultMaterial as THREE.Mesh;\n  // const geometry = nodes.Cube.geometry;\n  // const material = nodes.Cube.material;\n  // console.log('Model', { nodes });\n  return <mesh geometry={Cube.geometry} material={Cube.material}></mesh>;\n}\n\nexport type Props = {};\n\nfunction App01(props: Props) {\n  const {} = props;\n\n  return (\n    <Area>\n      {() => (\n        <Canvas>\n          <ambientLight intensity={0.5} />\n          <pointLight position={[10, 10, 10]} />\n          <Environment preset=\"sunset\" />\n          <Model />\n          <OrbitControls />\n        </Canvas>\n      )}\n    </Area>\n  );\n}\n\nexport default React.memo(App01);\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { Line } from './Line.js';\n\nconst Edges = /* @__PURE__ */React.forwardRef(({\n  threshold = 15,\n  geometry: explicitGeometry,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  const tmpPoints = React.useMemo(() => [0, 0, 0, 1, 0, 0], []);\n  const memoizedGeometry = React.useRef(null);\n  const memoizedThreshold = React.useRef(null);\n  React.useLayoutEffect(() => {\n    const parent = ref.current.parent;\n    const geometry = explicitGeometry !== null && explicitGeometry !== void 0 ? explicitGeometry : parent == null ? void 0 : parent.geometry;\n    if (!geometry) return;\n    const cached = memoizedGeometry.current === geometry && memoizedThreshold.current === threshold;\n    if (cached) return;\n    memoizedGeometry.current = geometry;\n    memoizedThreshold.current = threshold;\n    const points = new THREE.EdgesGeometry(geometry, threshold).attributes.position.array;\n    ref.current.geometry.setPositions(points);\n    ref.current.geometry.attributes.instanceStart.needsUpdate = true;\n    ref.current.geometry.attributes.instanceEnd.needsUpdate = true;\n    ref.current.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    segments: true,\n    points: tmpPoints,\n    ref: ref,\n    raycast: () => null\n  }, props));\n});\n\nexport { Edges };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useThree, extend, applyProps } from '@react-three/fiber';\nimport { toCreasedNormals } from 'three-stdlib';\nimport { version } from '../helpers/constants.js';\n\nconst OutlinesMaterial = /* @__PURE__ */shaderMaterial({\n  screenspace: false,\n  color: /* @__PURE__ */new THREE.Color('black'),\n  opacity: 1,\n  thickness: 0.05,\n  size: /* @__PURE__ */new THREE.Vector2()\n}, `#include <common>\n   #include <morphtarget_pars_vertex>\n   #include <skinning_pars_vertex>\n   #include <clipping_planes_pars_vertex>\n   uniform float thickness;\n   uniform bool screenspace;\n   uniform vec2 size;\n   void main() {\n     #if defined (USE_SKINNING)\n\t     #include <beginnormal_vertex>\n       #include <morphnormal_vertex>\n       #include <skinbase_vertex>\n       #include <skinnormal_vertex>\n       #include <defaultnormal_vertex>\n     #endif\n     #include <begin_vertex>\n\t   #include <morphtarget_vertex>\n\t   #include <skinning_vertex>\n     #include <project_vertex>\n     #include <clipping_planes_vertex>\n     vec4 tNormal = vec4(normal, 0.0);\n     vec4 tPosition = vec4(transformed, 1.0);\n     #ifdef USE_INSTANCING\n       tNormal = instanceMatrix * tNormal;\n       tPosition = instanceMatrix * tPosition;\n     #endif\n     if (screenspace) {\n       vec3 newPosition = tPosition.xyz + tNormal.xyz * thickness;\n       gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0); \n     } else {\n       vec4 clipPosition = projectionMatrix * modelViewMatrix * tPosition;\n       vec4 clipNormal = projectionMatrix * modelViewMatrix * tNormal;\n       vec2 offset = normalize(clipNormal.xy) * thickness / size * clipPosition.w * 2.0;\n       clipPosition.xy += offset;\n       gl_Position = clipPosition;\n     }\n   }`, `uniform vec3 color;\n   uniform float opacity;\n   #include <clipping_planes_pars_fragment>\n   void main(){\n     #include <clipping_planes_fragment>\n     gl_FragColor = vec4(color, opacity);\n     #include <tonemapping_fragment>\n     #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nfunction Outlines({\n  color = 'black',\n  opacity = 1,\n  transparent = false,\n  screenspace = false,\n  toneMapped = true,\n  polygonOffset = false,\n  polygonOffsetFactor = 0,\n  renderOrder = 0,\n  thickness = 0.05,\n  angle = Math.PI,\n  clippingPlanes,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  const [material] = React.useState(() => new OutlinesMaterial({\n    side: THREE.BackSide\n  }));\n  const {\n    gl\n  } = useThree();\n  const contextSize = gl.getDrawingBufferSize(new THREE.Vector2());\n  React.useMemo(() => extend({\n    OutlinesMaterial\n  }), []);\n  const oldAngle = React.useRef(0);\n  const oldGeometry = React.useRef(null);\n  React.useLayoutEffect(() => {\n    const group = ref.current;\n    if (!group) return;\n    const parent = group.parent;\n    if (parent && parent.geometry) {\n      if (oldAngle.current !== angle || oldGeometry.current !== parent.geometry) {\n        var _group$children;\n        oldAngle.current = angle;\n        oldGeometry.current = parent.geometry;\n\n        // Remove old mesh\n        let mesh = (_group$children = group.children) == null ? void 0 : _group$children[0];\n        if (mesh) {\n          if (angle) mesh.geometry.dispose();\n          group.remove(mesh);\n        }\n        if (parent.skeleton) {\n          mesh = new THREE.SkinnedMesh();\n          mesh.material = material;\n          mesh.bind(parent.skeleton, parent.bindMatrix);\n          group.add(mesh);\n        } else if (parent.isInstancedMesh) {\n          mesh = new THREE.InstancedMesh(parent.geometry, material, parent.count);\n          mesh.instanceMatrix = parent.instanceMatrix;\n          group.add(mesh);\n        } else {\n          mesh = new THREE.Mesh();\n          mesh.material = material;\n          group.add(mesh);\n        }\n        mesh.geometry = angle ? toCreasedNormals(parent.geometry, angle) : parent.geometry;\n        mesh.morphTargetInfluences = parent.morphTargetInfluences;\n        mesh.morphTargetDictionary = parent.morphTargetDictionary;\n      }\n    }\n  });\n  React.useLayoutEffect(() => {\n    const group = ref.current;\n    if (!group) return;\n    const mesh = group.children[0];\n    if (mesh) {\n      mesh.renderOrder = renderOrder;\n      const parent = group.parent;\n      applyProps(mesh, {\n        morphTargetInfluences: parent.morphTargetInfluences,\n        morphTargetDictionary: parent.morphTargetDictionary\n      });\n      applyProps(mesh.material, {\n        transparent,\n        thickness,\n        color,\n        opacity,\n        size: contextSize,\n        screenspace,\n        toneMapped,\n        polygonOffset,\n        polygonOffsetFactor,\n        clippingPlanes,\n        clipping: clippingPlanes && clippingPlanes.length > 0\n      });\n    }\n  });\n  React.useEffect(() => {\n    return () => {\n      // Dispose everything on unmount\n      const group = ref.current;\n      if (!group) return;\n      const mesh = group.children[0];\n      if (mesh) {\n        if (angle) mesh.geometry.dispose();\n        group.remove(mesh);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n}\n\nexport { Outlines };\n","import Area from '@/components/Area';\nimport {\n  AccumulativeShadows,\n  Edges,\n  Environment,\n  OrbitControls,\n  Outlines,\n  RandomizedLight,\n  useGLTF,\n} from '@react-three/drei';\nimport { Canvas, MeshProps } from '@react-three/fiber';\nimport * as React from 'react';\nimport gltfModel from './day58_aluminium_bracket-transformed.glb';\nimport * as THREE from 'three';\n\nfunction Model(props: MeshProps) {\n  const { nodes } = useGLTF(gltfModel);\n  const Cube = nodes.defaultMaterial as THREE.Mesh;\n  const [hovered, setHovered] = React.useState(false);\n  // console.log('Model', { nodes });\n  return (\n    <mesh\n      geometry={Cube.geometry}\n      // material={Cube.material}\n      castShadow\n      receiveShadow\n      onPointerOver={() => setHovered(true)}\n      onPointerOut={() => setHovered(false)}\n      {...props}\n    >\n      <meshStandardMaterial\n        roughness={0.15}\n        metalness={0.5}\n        // opacity={0.9} transparent\n      />\n      <Edges linewidth={2} threshold={15} color={hovered ? '#c02040' : 'black'} />\n      <Outlines thickness={0.01} color={hovered ? '#c02040' : 'black'} />\n    </mesh>\n  );\n}\n\nexport type Props = {};\n\nfunction App02(props: Props) {\n  const {} = props;\n\n  return (\n    <Area>\n      {() => (\n        <Canvas shadows camera={{ position: [-5, 2.5, 5], fov: 35 }}>\n          <ambientLight intensity={Math.PI / 8} />\n          <spotLight intensity={Math.PI} decay={0} angle={0.2} castShadow position={[5, 2.5, 5]} shadow-mapSize={128} />\n          <Model position={[0, 0.19, 0]} rotation={[0, 0, -Math.PI / 4.45]} />\n          <AccumulativeShadows frames={100} temporal>\n            <RandomizedLight radius={2} position={[5, 2.5, 5]} />\n          </AccumulativeShadows>\n          <OrbitControls makeDefault dampingFactor={0.3} />\n          <Environment preset=\"sunset\" />\n        </Canvas>\n      )}\n    </Area>\n  );\n}\n\nexport default React.memo(App02);\n"],"names":["Area","React","props","children","rest","ref","el","setEl","current","div","css","border","borderRadius","width","height","marginBottom","Model","nodes","useGLTF","gltfModel","Cube","defaultMaterial","mesh","geometry","material","App01","Canvas","ambientLight","intensity","pointLight","position","Environment","preset","OrbitControls","hovered","setHovered","castShadow","receiveShadow","onPointerOver","onPointerOut","meshStandardMaterial","roughness","metalness","Edges","linewidth","threshold","color","Outlines","thickness","App02","shadows","camera","fov","Math","PI","spotLight","decay","angle","shadow-mapSize","rotation","AccumulativeShadows","frames","temporal","RandomizedLight","radius","makeDefault","dampingFactor","meta","title","description","date","readTime","BlogPost"],"sourceRoot":"","ignoreList":[4,5]}