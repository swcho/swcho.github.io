{"version":3,"file":"static/chunks/1908.0a527e9fda5a7d29.js","mappings":"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","sources":["webpack://_N_E/./pages/blogs/2021-10-15-transition/SpringCircle.tsx","webpack://_N_E/./pages/blogs/2021-10-15-transition/Transition01.tsx"],"sourcesContent":["import { animated, useSpring } from '@react-spring/web';\nimport * as React from 'react';\n\nexport type Props = React.SVGProps<SVGCircleElement>;\n\nconst SpringCircle = React.memo((props: Props) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n  const { style, cx, cy, ref, ...rest } = props;\n\n  const stylePos = useSpring({ cx, cy });\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return <animated.circle style={{ ...style, ...stylePos } as any} {...rest} />;\n});\n\nexport default SpringCircle;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { motion } from 'framer-motion';\n\nimport { useTransition } from '@react-spring/web';\nimport * as React from 'react';\n\nimport { extent } from 'd3-array';\n\nimport { genRandomNormalPoints } from '@visx/mock-data';\nimport { ParentSize } from '@visx/responsive';\nimport { scaleLinear } from '@visx/scale';\n\nimport SpringCircle from './SpringCircle';\n\ntype Item = {\n  //\n};\n\nexport type Props = {\n  width: number;\n  height: number;\n  data?: Item[];\n};\n\nconst Content = React.memo((props: Props) => {\n  // eslint-disable-next-line\n  const { width, height, data } = props;\n\n  const [seed, setSeed] = React.useState(0);\n  const [count, setCount] = React.useState(1);\n\n  const points = React.useMemo(\n    () =>\n      genRandomNormalPoints(count, seed).map(([x, y], i) => ({\n        key: i,\n        x,\n        y,\n      })),\n    [count, seed]\n  );\n\n  const xScale = React.useMemo(\n    () =>\n      scaleLinear({\n        domain: extent(points.map(({ x }) => x)) as any,\n        range: [0, width],\n        nice: true,\n        round: true,\n      }),\n    [width]\n  );\n\n  const yScale = React.useMemo(\n    () =>\n      scaleLinear({\n        domain: extent(points.map(({ y }) => y)) as any,\n        range: [0, height],\n        nice: true,\n        round: true,\n      }),\n    [height]\n  );\n\n  const transitions = useTransition(points, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    delay: 200,\n    keys: (p) => p.key,\n  });\n\n  // console.log('Content', { points });\n  return (\n    <>\n      <svg width={width} height={height}>\n        <g>\n          {points.map(({ x, y }, i) => (\n            <motion.circle\n              key={i}\n              cx={xScale(x)}\n              cy={yScale(y)}\n              r={10}\n              // animate={{ cx: xScale(x), cy: xScale(y) }}\n            />\n          ))}\n        </g>\n      </svg>\n      <svg width={width} height={height}>\n        <g>\n          {points.map(({ x, y }, i) => (\n            <SpringCircle\n              key={i}\n              cx={xScale(x)}\n              cy={yScale(y)}\n              r={10}\n              // animate={{ cx: xScale(x), cy: xScale(y) }}\n            />\n          ))}\n        </g>\n      </svg>\n      <svg width={width} height={height}>\n        <g>\n          {transitions(({ opacity }, { key, x, y }) => (\n            <SpringCircle\n              key={key}\n              // style={{ opacity: opacity.get() }}\n              style={{ opacity, cx: xScale(x), cy: yScale(y) } as any}\n              cx={xScale(x)}\n              cy={yScale(y)}\n              r={10}\n              // animate={{ cx: xScale(x), cy: xScale(y) }}\n            />\n          ))}\n        </g>\n      </svg>\n      <button type=\"button\" onClick={() => setSeed((prev) => prev + 1)}>\n        Next\n      </button>\n      <button type=\"button\" style={{ marginLeft: '1rem' }} onClick={() => setCount((prev) => prev + 1)}>\n        Add\n      </button>\n    </>\n  );\n});\n\nconst Transition01 = React.memo(() => <ParentSize>{({ width }) => <Content width={width} height={300} />}</ParentSize>);\n\nexport default Transition01;\n"],"names":["SpringCircle","React","style","cx","cy","ref","rest","props","stylePos","useSpring","animated","circle","Content","width","height","data","seed","setSeed","count","setCount","points","genRandomNormalPoints","map","i","x","y","key","xScale","scaleLinear","domain","extent","range","nice","round","yScale","transitions","useTransition","from","opacity","enter","leave","delay","keys","p","svg","g","motion","r","button","type","onClick","prev","marginLeft","ParentSize","Transition01"],"sourceRoot":"","ignoreList":[]}